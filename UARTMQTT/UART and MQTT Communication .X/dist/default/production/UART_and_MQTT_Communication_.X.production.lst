

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Dec 02 17:37:54 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F27Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64   000000                     
    65                           ; Generated 18/12/2023 GMT
    66                           ; 
    67                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F27Q10 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   000FE0                     bsr             equ	4064
   100   000FE9                     fsr0            equ	4073
   101   000FEA                     fsr0h           equ	4074
   102   000FE9                     fsr0l           equ	4073
   103   000FE1                     fsr1            equ	4065
   104   000FE2                     fsr1h           equ	4066
   105   000FE1                     fsr1l           equ	4065
   106   000FD9                     fsr2            equ	4057
   107   000FDA                     fsr2h           equ	4058
   108   000FD9                     fsr2l           equ	4057
   109   000FEF                     indf0           equ	4079
   110   000FE7                     indf1           equ	4071
   111   000FDF                     indf2           equ	4063
   112   000FF2                     intcon          equ	4082
   113   000F80                     nvmcon          equ	3968
   114   000FF9                     pcl             equ	4089
   115   000FFA                     pclath          equ	4090
   116   000FFB                     pclatu          equ	4091
   117   000FEB                     plusw0          equ	4075
   118   000FE3                     plusw1          equ	4067
   119   000FDB                     plusw2          equ	4059
   120   000FED                     postdec0        equ	4077
   121   000FE5                     postdec1        equ	4069
   122   000FDD                     postdec2        equ	4061
   123   000FEE                     postinc0        equ	4078
   124   000FE6                     postinc1        equ	4070
   125   000FDE                     postinc2        equ	4062
   126   000FEC                     preinc0         equ	4076
   127   000FE4                     preinc1         equ	4068
   128   000FDC                     preinc2         equ	4060
   129   000FF3                     prod            equ	4083
   130   000FF4                     prodh           equ	4084
   131   000FF3                     prodl           equ	4083
   132   000FD8                     status          equ	4056
   133   000FF5                     tablat          equ	4085
   134   000FF6                     tblptr          equ	4086
   135   000FF7                     tblptrh         equ	4087
   136   000FF6                     tblptrl         equ	4086
   137   000FF8                     tblptru         equ	4088
   138   000FFD                     tosl            equ	4093
   139   000FE8                     wreg            equ	4072
   140   000E1F                     CLCIN0PPS       equ	3615	;# 
   141   000E20                     CLCIN1PPS       equ	3616	;# 
   142   000E21                     CLCIN2PPS       equ	3617	;# 
   143   000E22                     CLCIN3PPS       equ	3618	;# 
   144   000E23                     CLCIN4PPS       equ	3619	;# 
   145   000E24                     CLCIN5PPS       equ	3620	;# 
   146   000E25                     CLCIN6PPS       equ	3621	;# 
   147   000E26                     CLCIN7PPS       equ	3622	;# 
   148   000E27                     CLC1CON         equ	3623	;# 
   149   000E28                     CLC1POL         equ	3624	;# 
   150   000E29                     CLC1SEL0        equ	3625	;# 
   151   000E2A                     CLC1SEL1        equ	3626	;# 
   152   000E2B                     CLC1SEL2        equ	3627	;# 
   153   000E2C                     CLC1SEL3        equ	3628	;# 
   154   000E2D                     CLC1GLS0        equ	3629	;# 
   155   000E2E                     CLC1GLS1        equ	3630	;# 
   156   000E2F                     CLC1GLS2        equ	3631	;# 
   157   000E30                     CLC1GLS3        equ	3632	;# 
   158   000E31                     CLC2CON         equ	3633	;# 
   159   000E32                     CLC2POL         equ	3634	;# 
   160   000E33                     CLC2SEL0        equ	3635	;# 
   161   000E34                     CLC2SEL1        equ	3636	;# 
   162   000E35                     CLC2SEL2        equ	3637	;# 
   163   000E36                     CLC2SEL3        equ	3638	;# 
   164   000E37                     CLC2GLS0        equ	3639	;# 
   165   000E38                     CLC2GLS1        equ	3640	;# 
   166   000E39                     CLC2GLS2        equ	3641	;# 
   167   000E3A                     CLC2GLS3        equ	3642	;# 
   168   000E3B                     CLC3CON         equ	3643	;# 
   169   000E3C                     CLC3POL         equ	3644	;# 
   170   000E3D                     CLC3SEL0        equ	3645	;# 
   171   000E3E                     CLC3SEL1        equ	3646	;# 
   172   000E3F                     CLC3SEL2        equ	3647	;# 
   173   000E40                     CLC3SEL3        equ	3648	;# 
   174   000E41                     CLC3GLS0        equ	3649	;# 
   175   000E42                     CLC3GLS1        equ	3650	;# 
   176   000E43                     CLC3GLS2        equ	3651	;# 
   177   000E44                     CLC3GLS3        equ	3652	;# 
   178   000E45                     CLC4CON         equ	3653	;# 
   179   000E46                     CLC4POL         equ	3654	;# 
   180   000E47                     CLC4SEL0        equ	3655	;# 
   181   000E48                     CLC4SEL1        equ	3656	;# 
   182   000E49                     CLC4SEL2        equ	3657	;# 
   183   000E4A                     CLC4SEL3        equ	3658	;# 
   184   000E4B                     CLC4GLS0        equ	3659	;# 
   185   000E4C                     CLC4GLS1        equ	3660	;# 
   186   000E4D                     CLC4GLS2        equ	3661	;# 
   187   000E4E                     CLC4GLS3        equ	3662	;# 
   188   000E4F                     CLC5CON         equ	3663	;# 
   189   000E50                     CLC5POL         equ	3664	;# 
   190   000E51                     CLC5SEL0        equ	3665	;# 
   191   000E52                     CLC5SEL1        equ	3666	;# 
   192   000E53                     CLC5SEL2        equ	3667	;# 
   193   000E54                     CLC5SEL3        equ	3668	;# 
   194   000E55                     CLC5GLS0        equ	3669	;# 
   195   000E56                     CLC5GLS1        equ	3670	;# 
   196   000E57                     CLC5GLS2        equ	3671	;# 
   197   000E58                     CLC5GLS3        equ	3672	;# 
   198   000E59                     CLC6CON         equ	3673	;# 
   199   000E5A                     CLC6POL         equ	3674	;# 
   200   000E5B                     CLC6SEL0        equ	3675	;# 
   201   000E5C                     CLC6SEL1        equ	3676	;# 
   202   000E5D                     CLC6SEL2        equ	3677	;# 
   203   000E5E                     CLC6SEL3        equ	3678	;# 
   204   000E5F                     CLC6GLS0        equ	3679	;# 
   205   000E60                     CLC6GLS1        equ	3680	;# 
   206   000E61                     CLC6GLS2        equ	3681	;# 
   207   000E62                     CLC6GLS3        equ	3682	;# 
   208   000E63                     CLC7CON         equ	3683	;# 
   209   000E64                     CLC7POL         equ	3684	;# 
   210   000E65                     CLC7SEL0        equ	3685	;# 
   211   000E66                     CLC7SEL1        equ	3686	;# 
   212   000E67                     CLC7SEL2        equ	3687	;# 
   213   000E68                     CLC7SEL3        equ	3688	;# 
   214   000E69                     CLC7GLS0        equ	3689	;# 
   215   000E6A                     CLC7GLS1        equ	3690	;# 
   216   000E6B                     CLC7GLS2        equ	3691	;# 
   217   000E6C                     CLC7GLS3        equ	3692	;# 
   218   000E6D                     CLC8CON         equ	3693	;# 
   219   000E6E                     CLC8POL         equ	3694	;# 
   220   000E6F                     CLC8SEL0        equ	3695	;# 
   221   000E70                     CLC8SEL1        equ	3696	;# 
   222   000E71                     CLC8SEL2        equ	3697	;# 
   223   000E72                     CLC8SEL3        equ	3698	;# 
   224   000E73                     CLC8GLS0        equ	3699	;# 
   225   000E74                     CLC8GLS1        equ	3700	;# 
   226   000E75                     CLC8GLS2        equ	3701	;# 
   227   000E76                     CLC8GLS3        equ	3702	;# 
   228   000E77                     CLCDATA         equ	3703	;# 
   229   000E88                     RX2PPS          equ	3720	;# 
   230   000E88                     RXDT2PPS        equ	3720	;# 
   231   000E89                     CK2PPS          equ	3721	;# 
   232   000E89                     TXCK2PPS        equ	3721	;# 
   233   000E89                     TX2PPS          equ	3721	;# 
   234   000E8A                     SSP2CLKPPS      equ	3722	;# 
   235   000E8B                     SSP2DATPPS      equ	3723	;# 
   236   000E8C                     SSP2SSPPS       equ	3724	;# 
   237   000E8D                     SSP2BUF         equ	3725	;# 
   238   000E8E                     SSP2ADD         equ	3726	;# 
   239   000E8F                     SSP2MSK         equ	3727	;# 
   240   000E90                     SSP2STAT        equ	3728	;# 
   241   000E91                     SSP2CON1        equ	3729	;# 
   242   000E92                     SSP2CON2        equ	3730	;# 
   243   000E93                     SSP2CON3        equ	3731	;# 
   244   000E94                     RC2REG          equ	3732	;# 
   245   000E94                     RCREG2          equ	3732	;# 
   246   000E95                     TX2REG          equ	3733	;# 
   247   000E95                     TXREG2          equ	3733	;# 
   248   000E96                     SP2BRG          equ	3734	;# 
   249   000E96                     SP2BRGL         equ	3734	;# 
   250   000E96                     SPBRG2          equ	3734	;# 
   251   000E97                     SP2BRGH         equ	3735	;# 
   252   000E97                     SPBRGH2         equ	3735	;# 
   253   000E98                     RC2STA          equ	3736	;# 
   254   000E98                     RCSTA2          equ	3736	;# 
   255   000E99                     TX2STA          equ	3737	;# 
   256   000E99                     TXSTA2          equ	3737	;# 
   257   000E9A                     BAUD2CON        equ	3738	;# 
   258   000E9A                     BAUDCON2        equ	3738	;# 
   259   000E9A                     BAUDCTL2        equ	3738	;# 
   260   000E9B                     PPSLOCK         equ	3739	;# 
   261   000E9C                     INT0PPS         equ	3740	;# 
   262   000E9D                     INT1PPS         equ	3741	;# 
   263   000E9E                     INT2PPS         equ	3742	;# 
   264   000E9F                     T0CKIPPS        equ	3743	;# 
   265   000EA0                     T1CKIPPS        equ	3744	;# 
   266   000EA1                     T1GPPS          equ	3745	;# 
   267   000EA2                     T3CKIPPS        equ	3746	;# 
   268   000EA3                     T3GPPS          equ	3747	;# 
   269   000EA4                     T5CKIPPS        equ	3748	;# 
   270   000EA5                     T5GPPS          equ	3749	;# 
   271   000EA6                     T2INPPS         equ	3750	;# 
   272   000EA7                     T4INPPS         equ	3751	;# 
   273   000EA8                     T6INPPS         equ	3752	;# 
   274   000EA9                     ADACTPPS        equ	3753	;# 
   275   000EAA                     CCP1PPS         equ	3754	;# 
   276   000EAB                     CCP2PPS         equ	3755	;# 
   277   000EAC                     CWG1PPS         equ	3756	;# 
   278   000EAC                     CWGPPS          equ	3756	;# 
   279   000EAC                     CWG1INPPS       equ	3756	;# 
   280   000EAC                     CWGINPPS        equ	3756	;# 
   281   000EAD                     MDCARLPPS       equ	3757	;# 
   282   000EAE                     MDCARHPPS       equ	3758	;# 
   283   000EAF                     MDSRCPPS        equ	3759	;# 
   284   000EB0                     RX1PPS          equ	3760	;# 
   285   000EB0                     RXPPS           equ	3760	;# 
   286   000EB0                     RXDT1PPS        equ	3760	;# 
   287   000EB1                     CK1PPS          equ	3761	;# 
   288   000EB1                     TXPPS           equ	3761	;# 
   289   000EB1                     CKPPS           equ	3761	;# 
   290   000EB1                     TX1PPS          equ	3761	;# 
   291   000EB1                     TXCK1PPS        equ	3761	;# 
   292   000EB2                     SSP1CLKPPS      equ	3762	;# 
   293   000EB2                     SSPCLKPPS       equ	3762	;# 
   294   000EB3                     SSP1DATPPS      equ	3763	;# 
   295   000EB3                     SSPDATPPS       equ	3763	;# 
   296   000EB4                     SSP1SSPPS       equ	3764	;# 
   297   000EB4                     SSPSSPPS        equ	3764	;# 
   298   000EB5                     IPR0            equ	3765	;# 
   299   000EB6                     IPR1            equ	3766	;# 
   300   000EB7                     IPR2            equ	3767	;# 
   301   000EB8                     IPR3            equ	3768	;# 
   302   000EB9                     IPR4            equ	3769	;# 
   303   000EBA                     IPR5            equ	3770	;# 
   304   000EBB                     IPR6            equ	3771	;# 
   305   000EBC                     IPR7            equ	3772	;# 
   306   000EBD                     PIE0            equ	3773	;# 
   307   000EBE                     PIE1            equ	3774	;# 
   308   000EBF                     PIE2            equ	3775	;# 
   309   000EC0                     PIE3            equ	3776	;# 
   310   000EC1                     PIE4            equ	3777	;# 
   311   000EC2                     PIE5            equ	3778	;# 
   312   000EC3                     PIE6            equ	3779	;# 
   313   000EC4                     PIE7            equ	3780	;# 
   314   000EC5                     PIR0            equ	3781	;# 
   315   000EC6                     PIR1            equ	3782	;# 
   316   000EC7                     PIR2            equ	3783	;# 
   317   000EC8                     PIR3            equ	3784	;# 
   318   000EC9                     PIR4            equ	3785	;# 
   319   000ECA                     PIR5            equ	3786	;# 
   320   000ECB                     PIR6            equ	3787	;# 
   321   000ECC                     PIR7            equ	3788	;# 
   322   000ECD                     WDTCON0         equ	3789	;# 
   323   000ECE                     WDTCON1         equ	3790	;# 
   324   000ECF                     WDTPSL          equ	3791	;# 
   325   000ED0                     WDTPSH          equ	3792	;# 
   326   000ED1                     WDTTMR          equ	3793	;# 
   327   000ED2                     CPUDOZE         equ	3794	;# 
   328   000ED3                     OSCCON1         equ	3795	;# 
   329   000ED4                     OSCCON2         equ	3796	;# 
   330   000ED5                     OSCCON3         equ	3797	;# 
   331   000ED6                     OSCSTAT         equ	3798	;# 
   332   000ED6                     OSCSTAT1        equ	3798	;# 
   333   000ED7                     OSCEN           equ	3799	;# 
   334   000ED8                     OSCTUNE         equ	3800	;# 
   335   000ED9                     OSCFRQ          equ	3801	;# 
   336   000ED9                     OSCFREQ         equ	3801	;# 
   337   000EDA                     VREGCON         equ	3802	;# 
   338   000EDB                     BORCON          equ	3803	;# 
   339   000EDC                     PMD0            equ	3804	;# 
   340   000EDD                     PMD1            equ	3805	;# 
   341   000EDE                     PMD2            equ	3806	;# 
   342   000EDF                     PMD3            equ	3807	;# 
   343   000EE0                     PMD4            equ	3808	;# 
   344   000EE1                     PMD5            equ	3809	;# 
   345   000EE2                     RA0PPS          equ	3810	;# 
   346   000EE3                     RA1PPS          equ	3811	;# 
   347   000EE4                     RA2PPS          equ	3812	;# 
   348   000EE5                     RA3PPS          equ	3813	;# 
   349   000EE6                     RA4PPS          equ	3814	;# 
   350   000EE7                     RA5PPS          equ	3815	;# 
   351   000EE8                     RA6PPS          equ	3816	;# 
   352   000EE9                     RA7PPS          equ	3817	;# 
   353   000EEA                     RB0PPS          equ	3818	;# 
   354   000EEB                     RB1PPS          equ	3819	;# 
   355   000EEC                     RB2PPS          equ	3820	;# 
   356   000EED                     RB3PPS          equ	3821	;# 
   357   000EEE                     RB4PPS          equ	3822	;# 
   358   000EEF                     RB5PPS          equ	3823	;# 
   359   000EF0                     RB6PPS          equ	3824	;# 
   360   000EF1                     RB7PPS          equ	3825	;# 
   361   000EF2                     RC0PPS          equ	3826	;# 
   362   000EF3                     RC1PPS          equ	3827	;# 
   363   000EF4                     RC2PPS          equ	3828	;# 
   364   000EF5                     RC3PPS          equ	3829	;# 
   365   000EF6                     RC4PPS          equ	3830	;# 
   366   000EF7                     RC5PPS          equ	3831	;# 
   367   000EF8                     RC6PPS          equ	3832	;# 
   368   000EF9                     RC7PPS          equ	3833	;# 
   369   000F05                     IOCAF           equ	3845	;# 
   370   000F06                     IOCAN           equ	3846	;# 
   371   000F07                     IOCAP           equ	3847	;# 
   372   000F08                     INLVLA          equ	3848	;# 
   373   000F09                     SLRCONA         equ	3849	;# 
   374   000F0A                     ODCONA          equ	3850	;# 
   375   000F0B                     WPUA            equ	3851	;# 
   376   000F0C                     ANSELA          equ	3852	;# 
   377   000F0D                     IOCBF           equ	3853	;# 
   378   000F0E                     IOCBN           equ	3854	;# 
   379   000F0F                     IOCBP           equ	3855	;# 
   380   000F10                     INLVLB          equ	3856	;# 
   381   000F11                     SLRCONB         equ	3857	;# 
   382   000F12                     ODCONB          equ	3858	;# 
   383   000F13                     WPUB            equ	3859	;# 
   384   000F14                     ANSELB          equ	3860	;# 
   385   000F15                     IOCCF           equ	3861	;# 
   386   000F16                     IOCCN           equ	3862	;# 
   387   000F17                     IOCCP           equ	3863	;# 
   388   000F18                     INLVLC          equ	3864	;# 
   389   000F19                     SLRCONC         equ	3865	;# 
   390   000F1A                     ODCONC          equ	3866	;# 
   391   000F1B                     WPUC            equ	3867	;# 
   392   000F1C                     ANSELC          equ	3868	;# 
   393   000F22                     IOCEF           equ	3874	;# 
   394   000F23                     IOCEN           equ	3875	;# 
   395   000F24                     IOCEP           equ	3876	;# 
   396   000F25                     INLVLE          equ	3877	;# 
   397   000F28                     WPUE            equ	3880	;# 
   398   000F2A                     HLVDCON0        equ	3882	;# 
   399   000F2B                     HLVDCON1        equ	3883	;# 
   400   000F2C                     FVRCON          equ	3884	;# 
   401   000F2D                     ZCDCON          equ	3885	;# 
   402   000F2E                     DAC1CON0        equ	3886	;# 
   403   000F2F                     DAC1CON1        equ	3887	;# 
   404   000F30                     CM2CON0         equ	3888	;# 
   405   000F31                     CM2CON1         equ	3889	;# 
   406   000F32                     CM2NCH          equ	3890	;# 
   407   000F33                     CM2PCH          equ	3891	;# 
   408   000F34                     CM1CON0         equ	3892	;# 
   409   000F35                     CM1CON1         equ	3893	;# 
   410   000F36                     CM1NCH          equ	3894	;# 
   411   000F37                     CM1PCH          equ	3895	;# 
   412   000F38                     CMOUT           equ	3896	;# 
   413   000F39                     CLKRCON         equ	3897	;# 
   414   000F3A                     CLKRCLK         equ	3898	;# 
   415   000F3B                     CWG1CLK         equ	3899	;# 
   416   000F3B                     CWG1CLKCON      equ	3899	;# 
   417   000F3C                     CWG1ISM         equ	3900	;# 
   418   000F3D                     CWG1DBR         equ	3901	;# 
   419   000F3E                     CWG1DBF         equ	3902	;# 
   420   000F3F                     CWG1CON0        equ	3903	;# 
   421   000F40                     CWG1CON1        equ	3904	;# 
   422   000F41                     CWG1AS0         equ	3905	;# 
   423   000F42                     CWG1AS1         equ	3906	;# 
   424   000F43                     CWG1STR         equ	3907	;# 
   425   000F44                     SCANLADR        equ	3908	;# 
   426   000F44                     SCANLADRL       equ	3908	;# 
   427   000F45                     SCANLADRH       equ	3909	;# 
   428   000F46                     SCANLADRU       equ	3910	;# 
   429   000F47                     SCANHADR        equ	3911	;# 
   430   000F47                     SCANHADRL       equ	3911	;# 
   431   000F48                     SCANHADRH       equ	3912	;# 
   432   000F49                     SCANHADRU       equ	3913	;# 
   433   000F4A                     SCANCON0        equ	3914	;# 
   434   000F4B                     SCANTRIG        equ	3915	;# 
   435   000F4C                     MDCON0          equ	3916	;# 
   436   000F4D                     MDCON1          equ	3917	;# 
   437   000F4E                     MDSRC           equ	3918	;# 
   438   000F4F                     MDCARL          equ	3919	;# 
   439   000F50                     MDCARH          equ	3920	;# 
   440   000F51                     ADACT           equ	3921	;# 
   441   000F52                     ADCLK           equ	3922	;# 
   442   000F53                     ADREF           equ	3923	;# 
   443   000F54                     ADCON1          equ	3924	;# 
   444   000F55                     ADCON2          equ	3925	;# 
   445   000F56                     ADCON3          equ	3926	;# 
   446   000F57                     ADACQ           equ	3927	;# 
   447   000F58                     ADCAP           equ	3928	;# 
   448   000F59                     ADPRE           equ	3929	;# 
   449   000F5A                     ADPCH           equ	3930	;# 
   450   000F5B                     ADCON0          equ	3931	;# 
   451   000F5C                     ADPREV          equ	3932	;# 
   452   000F5C                     ADPREVL         equ	3932	;# 
   453   000F5D                     ADPREVH         equ	3933	;# 
   454   000F5E                     ADRES           equ	3934	;# 
   455   000F5E                     ADRESL          equ	3934	;# 
   456   000F5F                     ADRESH          equ	3935	;# 
   457   000F60                     ADSTAT          equ	3936	;# 
   458   000F61                     ADRPT           equ	3937	;# 
   459   000F62                     ADCNT           equ	3938	;# 
   460   000F63                     ADSTPT          equ	3939	;# 
   461   000F63                     ADSTPTL         equ	3939	;# 
   462   000F64                     ADSTPTH         equ	3940	;# 
   463   000F65                     ADLTH           equ	3941	;# 
   464   000F65                     ADLTHL          equ	3941	;# 
   465   000F66                     ADLTHH          equ	3942	;# 
   466   000F67                     ADUTH           equ	3943	;# 
   467   000F67                     ADUTHL          equ	3943	;# 
   468   000F68                     ADUTHH          equ	3944	;# 
   469   000F69                     ADERR           equ	3945	;# 
   470   000F69                     ADERRL          equ	3945	;# 
   471   000F6A                     ADERRH          equ	3946	;# 
   472   000F6B                     ADACC           equ	3947	;# 
   473   000F6B                     ADACCL          equ	3947	;# 
   474   000F6C                     ADACCH          equ	3948	;# 
   475   000F6D                     ADFLTR          equ	3949	;# 
   476   000F6D                     ADFLTRL         equ	3949	;# 
   477   000F6E                     ADFLTRH         equ	3950	;# 
   478   000F6F                     CRCDATA         equ	3951	;# 
   479   000F6F                     CRCDATL         equ	3951	;# 
   480   000F70                     CRCDATH         equ	3952	;# 
   481   000F71                     CRCACC          equ	3953	;# 
   482   000F71                     CRCACCL         equ	3953	;# 
   483   000F72                     CRCACCH         equ	3954	;# 
   484   000F73                     CRCSHFT         equ	3955	;# 
   485   000F73                     CRCSHIFTL       equ	3955	;# 
   486   000F74                     CRCSHIFTH       equ	3956	;# 
   487   000F75                     CRCXOR          equ	3957	;# 
   488   000F75                     CRCXORL         equ	3957	;# 
   489   000F76                     CRCXORH         equ	3958	;# 
   490   000F77                     CRCCON0         equ	3959	;# 
   491   000F78                     CRCCON1         equ	3960	;# 
   492   000F79                     NVMADR          equ	3961	;# 
   493   000F79                     NVMADRL         equ	3961	;# 
   494   000F7A                     NVMADRH         equ	3962	;# 
   495   000F7B                     NVMADRU         equ	3963	;# 
   496   000F7C                     NVMDAT          equ	3964	;# 
   497   000F7C                     NVMDATL         equ	3964	;# 
   498   000F7D                     NVMDATH         equ	3965	;# 
   499   000F7F                     NVMCON0         equ	3967	;# 
   500   000F80                     NVMCON1         equ	3968	;# 
   501   000F81                     NVMCON2         equ	3969	;# 
   502   000F82                     LATA            equ	3970	;# 
   503   000F83                     LATB            equ	3971	;# 
   504   000F84                     LATC            equ	3972	;# 
   505   000F87                     TRISA           equ	3975	;# 
   506   000F87                     DDRA            equ	3975	;# 
   507   000F88                     TRISB           equ	3976	;# 
   508   000F88                     DDRB            equ	3976	;# 
   509   000F89                     TRISC           equ	3977	;# 
   510   000F89                     DDRC            equ	3977	;# 
   511   000F8C                     PORTA           equ	3980	;# 
   512   000F8D                     PORTB           equ	3981	;# 
   513   000F8E                     PORTC           equ	3982	;# 
   514   000F90                     PORTE           equ	3984	;# 
   515   000F91                     SSP1BUF         equ	3985	;# 
   516   000F92                     SSP1ADD         equ	3986	;# 
   517   000F93                     SSP1MSK         equ	3987	;# 
   518   000F94                     SSP1STAT        equ	3988	;# 
   519   000F95                     SSP1CON1        equ	3989	;# 
   520   000F96                     SSP1CON2        equ	3990	;# 
   521   000F97                     SSP1CON3        equ	3991	;# 
   522   000F98                     RC1REG          equ	3992	;# 
   523   000F98                     RCREG           equ	3992	;# 
   524   000F98                     RCREG1          equ	3992	;# 
   525   000F99                     TX1REG          equ	3993	;# 
   526   000F99                     TXREG1          equ	3993	;# 
   527   000F99                     TXREG           equ	3993	;# 
   528   000F9A                     SP1BRG          equ	3994	;# 
   529   000F9A                     SPBRG           equ	3994	;# 
   530   000F9A                     SP1BRGL         equ	3994	;# 
   531   000F9A                     SPBRG1          equ	3994	;# 
   532   000F9A                     SPBRGL          equ	3994	;# 
   533   000F9B                     SP1BRGH         equ	3995	;# 
   534   000F9B                     SPBRGH          equ	3995	;# 
   535   000F9B                     SPBRGH1         equ	3995	;# 
   536   000F9C                     RC1STA          equ	3996	;# 
   537   000F9C                     RCSTA1          equ	3996	;# 
   538   000F9C                     RCSTA           equ	3996	;# 
   539   000F9D                     TX1STA          equ	3997	;# 
   540   000F9D                     TXSTA1          equ	3997	;# 
   541   000F9D                     TXSTA           equ	3997	;# 
   542   000F9E                     BAUD1CON        equ	3998	;# 
   543   000F9E                     BAUDCON1        equ	3998	;# 
   544   000F9E                     BAUDCTL1        equ	3998	;# 
   545   000F9E                     BAUDCON         equ	3998	;# 
   546   000F9E                     BAUDCTL         equ	3998	;# 
   547   000F9F                     PWM4DC          equ	3999	;# 
   548   000F9F                     PWM4DCL         equ	3999	;# 
   549   000FA0                     PWM4DCH         equ	4000	;# 
   550   000FA1                     PWM4CON         equ	4001	;# 
   551   000FA2                     PWM3DC          equ	4002	;# 
   552   000FA2                     PWM3DCL         equ	4002	;# 
   553   000FA3                     PWM3DCH         equ	4003	;# 
   554   000FA4                     PWM3CON         equ	4004	;# 
   555   000FA5                     CCPR2           equ	4005	;# 
   556   000FA5                     CCPR2L          equ	4005	;# 
   557   000FA6                     CCPR2H          equ	4006	;# 
   558   000FA7                     CCP2CON         equ	4007	;# 
   559   000FA8                     CCP2CAP         equ	4008	;# 
   560   000FA9                     CCPR1           equ	4009	;# 
   561   000FA9                     CCPR1L          equ	4009	;# 
   562   000FAA                     CCPR1H          equ	4010	;# 
   563   000FAB                     CCP1CON         equ	4011	;# 
   564   000FAC                     CCP1CAP         equ	4012	;# 
   565   000FAD                     CCPTMRS         equ	4013	;# 
   566   000FAE                     T6TMR           equ	4014	;# 
   567   000FAE                     TMR6            equ	4014	;# 
   568   000FAF                     T6PR            equ	4015	;# 
   569   000FAF                     PR6             equ	4015	;# 
   570   000FB0                     T6CON           equ	4016	;# 
   571   000FB1                     T6HLT           equ	4017	;# 
   572   000FB2                     T6CLKCON        equ	4018	;# 
   573   000FB2                     T6CLK           equ	4018	;# 
   574   000FB3                     T6RST           equ	4019	;# 
   575   000FB4                     T4TMR           equ	4020	;# 
   576   000FB4                     TMR4            equ	4020	;# 
   577   000FB5                     T4PR            equ	4021	;# 
   578   000FB5                     PR4             equ	4021	;# 
   579   000FB6                     T4CON           equ	4022	;# 
   580   000FB7                     T4HLT           equ	4023	;# 
   581   000FB8                     T4CLKCON        equ	4024	;# 
   582   000FB8                     T4CLK           equ	4024	;# 
   583   000FB9                     T4RST           equ	4025	;# 
   584   000FBA                     T2TMR           equ	4026	;# 
   585   000FBA                     TMR2            equ	4026	;# 
   586   000FBB                     T2PR            equ	4027	;# 
   587   000FBB                     PR2             equ	4027	;# 
   588   000FBC                     T2CON           equ	4028	;# 
   589   000FBD                     T2HLT           equ	4029	;# 
   590   000FBE                     T2CLKCON        equ	4030	;# 
   591   000FBE                     T2CLK           equ	4030	;# 
   592   000FBF                     T2RST           equ	4031	;# 
   593   000FC0                     TMR5            equ	4032	;# 
   594   000FC0                     TMR5L           equ	4032	;# 
   595   000FC1                     TMR5H           equ	4033	;# 
   596   000FC2                     T5CON           equ	4034	;# 
   597   000FC2                     TMR5CON         equ	4034	;# 
   598   000FC3                     T5GCON          equ	4035	;# 
   599   000FC3                     TMR5GCON        equ	4035	;# 
   600   000FC4                     T5GATE          equ	4036	;# 
   601   000FC4                     TMR5GATE        equ	4036	;# 
   602   000FC5                     T5CLK           equ	4037	;# 
   603   000FC5                     TMR5CLK         equ	4037	;# 
   604   000FC5                     PR5             equ	4037	;# 
   605   000FC6                     TMR3            equ	4038	;# 
   606   000FC6                     TMR3L           equ	4038	;# 
   607   000FC7                     TMR3H           equ	4039	;# 
   608   000FC8                     T3CON           equ	4040	;# 
   609   000FC8                     TMR3CON         equ	4040	;# 
   610   000FC9                     T3GCON          equ	4041	;# 
   611   000FC9                     TMR3GCON        equ	4041	;# 
   612   000FCA                     T3GATE          equ	4042	;# 
   613   000FCA                     TMR3GATE        equ	4042	;# 
   614   000FCB                     T3CLK           equ	4043	;# 
   615   000FCB                     TMR3CLK         equ	4043	;# 
   616   000FCB                     PR3             equ	4043	;# 
   617   000FCC                     TMR1            equ	4044	;# 
   618   000FCC                     TMR1L           equ	4044	;# 
   619   000FCD                     TMR1H           equ	4045	;# 
   620   000FCE                     T1CON           equ	4046	;# 
   621   000FCE                     TMR1CON         equ	4046	;# 
   622   000FCF                     T1GCON          equ	4047	;# 
   623   000FCF                     TMR1GCON        equ	4047	;# 
   624   000FD0                     T1GATE          equ	4048	;# 
   625   000FD0                     TMR1GATE        equ	4048	;# 
   626   000FD1                     T1CLK           equ	4049	;# 
   627   000FD1                     TMR1CLK         equ	4049	;# 
   628   000FD1                     PR1             equ	4049	;# 
   629   000FD2                     TMR0L           equ	4050	;# 
   630   000FD2                     TMR0            equ	4050	;# 
   631   000FD3                     TMR0H           equ	4051	;# 
   632   000FD3                     PR0             equ	4051	;# 
   633   000FD4                     T0CON0          equ	4052	;# 
   634   000FD5                     T0CON1          equ	4053	;# 
   635   000FD6                     PCON1           equ	4054	;# 
   636   000FD7                     PCON0           equ	4055	;# 
   637   000FD8                     STATUS          equ	4056	;# 
   638   000FD9                     FSR2            equ	4057	;# 
   639   000FD9                     FSR2L           equ	4057	;# 
   640   000FDA                     FSR2H           equ	4058	;# 
   641   000FDB                     PLUSW2          equ	4059	;# 
   642   000FDC                     PREINC2         equ	4060	;# 
   643   000FDD                     POSTDEC2        equ	4061	;# 
   644   000FDE                     POSTINC2        equ	4062	;# 
   645   000FDF                     INDF2           equ	4063	;# 
   646   000FE0                     BSR             equ	4064	;# 
   647   000FE1                     FSR1            equ	4065	;# 
   648   000FE1                     FSR1L           equ	4065	;# 
   649   000FE2                     FSR1H           equ	4066	;# 
   650   000FE3                     PLUSW1          equ	4067	;# 
   651   000FE4                     PREINC1         equ	4068	;# 
   652   000FE5                     POSTDEC1        equ	4069	;# 
   653   000FE6                     POSTINC1        equ	4070	;# 
   654   000FE7                     INDF1           equ	4071	;# 
   655   000FE8                     WREG            equ	4072	;# 
   656   000FE9                     FSR0            equ	4073	;# 
   657   000FE9                     FSR0L           equ	4073	;# 
   658   000FEA                     FSR0H           equ	4074	;# 
   659   000FEB                     PLUSW0          equ	4075	;# 
   660   000FEC                     PREINC0         equ	4076	;# 
   661   000FED                     POSTDEC0        equ	4077	;# 
   662   000FEE                     POSTINC0        equ	4078	;# 
   663   000FEF                     INDF0           equ	4079	;# 
   664   000FF2                     INTCON          equ	4082	;# 
   665   000FF3                     PROD            equ	4083	;# 
   666   000FF3                     PRODL           equ	4083	;# 
   667   000FF4                     PRODH           equ	4084	;# 
   668   000FF5                     TABLAT          equ	4085	;# 
   669   000FF6                     TBLPTR          equ	4086	;# 
   670   000FF6                     TBLPTRL         equ	4086	;# 
   671   000FF7                     TBLPTRH         equ	4087	;# 
   672   000FF8                     TBLPTRU         equ	4088	;# 
   673   000FF9                     PCLAT           equ	4089	;# 
   674   000FF9                     PCL             equ	4089	;# 
   675   000FFA                     PCLATH          equ	4090	;# 
   676   000FFB                     PCLATU          equ	4091	;# 
   677   000FFC                     STKPTR          equ	4092	;# 
   678   000FFD                     TOS             equ	4093	;# 
   679   000FFD                     TOSL            equ	4093	;# 
   680   000FFE                     TOSH            equ	4094	;# 
   681   000FFF                     TOSU            equ	4095	;# 
   682   000E1F                     CLCIN0PPS       equ	3615	;# 
   683   000E20                     CLCIN1PPS       equ	3616	;# 
   684   000E21                     CLCIN2PPS       equ	3617	;# 
   685   000E22                     CLCIN3PPS       equ	3618	;# 
   686   000E23                     CLCIN4PPS       equ	3619	;# 
   687   000E24                     CLCIN5PPS       equ	3620	;# 
   688   000E25                     CLCIN6PPS       equ	3621	;# 
   689   000E26                     CLCIN7PPS       equ	3622	;# 
   690   000E27                     CLC1CON         equ	3623	;# 
   691   000E28                     CLC1POL         equ	3624	;# 
   692   000E29                     CLC1SEL0        equ	3625	;# 
   693   000E2A                     CLC1SEL1        equ	3626	;# 
   694   000E2B                     CLC1SEL2        equ	3627	;# 
   695   000E2C                     CLC1SEL3        equ	3628	;# 
   696   000E2D                     CLC1GLS0        equ	3629	;# 
   697   000E2E                     CLC1GLS1        equ	3630	;# 
   698   000E2F                     CLC1GLS2        equ	3631	;# 
   699   000E30                     CLC1GLS3        equ	3632	;# 
   700   000E31                     CLC2CON         equ	3633	;# 
   701   000E32                     CLC2POL         equ	3634	;# 
   702   000E33                     CLC2SEL0        equ	3635	;# 
   703   000E34                     CLC2SEL1        equ	3636	;# 
   704   000E35                     CLC2SEL2        equ	3637	;# 
   705   000E36                     CLC2SEL3        equ	3638	;# 
   706   000E37                     CLC2GLS0        equ	3639	;# 
   707   000E38                     CLC2GLS1        equ	3640	;# 
   708   000E39                     CLC2GLS2        equ	3641	;# 
   709   000E3A                     CLC2GLS3        equ	3642	;# 
   710   000E3B                     CLC3CON         equ	3643	;# 
   711   000E3C                     CLC3POL         equ	3644	;# 
   712   000E3D                     CLC3SEL0        equ	3645	;# 
   713   000E3E                     CLC3SEL1        equ	3646	;# 
   714   000E3F                     CLC3SEL2        equ	3647	;# 
   715   000E40                     CLC3SEL3        equ	3648	;# 
   716   000E41                     CLC3GLS0        equ	3649	;# 
   717   000E42                     CLC3GLS1        equ	3650	;# 
   718   000E43                     CLC3GLS2        equ	3651	;# 
   719   000E44                     CLC3GLS3        equ	3652	;# 
   720   000E45                     CLC4CON         equ	3653	;# 
   721   000E46                     CLC4POL         equ	3654	;# 
   722   000E47                     CLC4SEL0        equ	3655	;# 
   723   000E48                     CLC4SEL1        equ	3656	;# 
   724   000E49                     CLC4SEL2        equ	3657	;# 
   725   000E4A                     CLC4SEL3        equ	3658	;# 
   726   000E4B                     CLC4GLS0        equ	3659	;# 
   727   000E4C                     CLC4GLS1        equ	3660	;# 
   728   000E4D                     CLC4GLS2        equ	3661	;# 
   729   000E4E                     CLC4GLS3        equ	3662	;# 
   730   000E4F                     CLC5CON         equ	3663	;# 
   731   000E50                     CLC5POL         equ	3664	;# 
   732   000E51                     CLC5SEL0        equ	3665	;# 
   733   000E52                     CLC5SEL1        equ	3666	;# 
   734   000E53                     CLC5SEL2        equ	3667	;# 
   735   000E54                     CLC5SEL3        equ	3668	;# 
   736   000E55                     CLC5GLS0        equ	3669	;# 
   737   000E56                     CLC5GLS1        equ	3670	;# 
   738   000E57                     CLC5GLS2        equ	3671	;# 
   739   000E58                     CLC5GLS3        equ	3672	;# 
   740   000E59                     CLC6CON         equ	3673	;# 
   741   000E5A                     CLC6POL         equ	3674	;# 
   742   000E5B                     CLC6SEL0        equ	3675	;# 
   743   000E5C                     CLC6SEL1        equ	3676	;# 
   744   000E5D                     CLC6SEL2        equ	3677	;# 
   745   000E5E                     CLC6SEL3        equ	3678	;# 
   746   000E5F                     CLC6GLS0        equ	3679	;# 
   747   000E60                     CLC6GLS1        equ	3680	;# 
   748   000E61                     CLC6GLS2        equ	3681	;# 
   749   000E62                     CLC6GLS3        equ	3682	;# 
   750   000E63                     CLC7CON         equ	3683	;# 
   751   000E64                     CLC7POL         equ	3684	;# 
   752   000E65                     CLC7SEL0        equ	3685	;# 
   753   000E66                     CLC7SEL1        equ	3686	;# 
   754   000E67                     CLC7SEL2        equ	3687	;# 
   755   000E68                     CLC7SEL3        equ	3688	;# 
   756   000E69                     CLC7GLS0        equ	3689	;# 
   757   000E6A                     CLC7GLS1        equ	3690	;# 
   758   000E6B                     CLC7GLS2        equ	3691	;# 
   759   000E6C                     CLC7GLS3        equ	3692	;# 
   760   000E6D                     CLC8CON         equ	3693	;# 
   761   000E6E                     CLC8POL         equ	3694	;# 
   762   000E6F                     CLC8SEL0        equ	3695	;# 
   763   000E70                     CLC8SEL1        equ	3696	;# 
   764   000E71                     CLC8SEL2        equ	3697	;# 
   765   000E72                     CLC8SEL3        equ	3698	;# 
   766   000E73                     CLC8GLS0        equ	3699	;# 
   767   000E74                     CLC8GLS1        equ	3700	;# 
   768   000E75                     CLC8GLS2        equ	3701	;# 
   769   000E76                     CLC8GLS3        equ	3702	;# 
   770   000E77                     CLCDATA         equ	3703	;# 
   771   000E88                     RX2PPS          equ	3720	;# 
   772   000E88                     RXDT2PPS        equ	3720	;# 
   773   000E89                     CK2PPS          equ	3721	;# 
   774   000E89                     TXCK2PPS        equ	3721	;# 
   775   000E89                     TX2PPS          equ	3721	;# 
   776   000E8A                     SSP2CLKPPS      equ	3722	;# 
   777   000E8B                     SSP2DATPPS      equ	3723	;# 
   778   000E8C                     SSP2SSPPS       equ	3724	;# 
   779   000E8D                     SSP2BUF         equ	3725	;# 
   780   000E8E                     SSP2ADD         equ	3726	;# 
   781   000E8F                     SSP2MSK         equ	3727	;# 
   782   000E90                     SSP2STAT        equ	3728	;# 
   783   000E91                     SSP2CON1        equ	3729	;# 
   784   000E92                     SSP2CON2        equ	3730	;# 
   785   000E93                     SSP2CON3        equ	3731	;# 
   786   000E94                     RC2REG          equ	3732	;# 
   787   000E94                     RCREG2          equ	3732	;# 
   788   000E95                     TX2REG          equ	3733	;# 
   789   000E95                     TXREG2          equ	3733	;# 
   790   000E96                     SP2BRG          equ	3734	;# 
   791   000E96                     SP2BRGL         equ	3734	;# 
   792   000E96                     SPBRG2          equ	3734	;# 
   793   000E97                     SP2BRGH         equ	3735	;# 
   794   000E97                     SPBRGH2         equ	3735	;# 
   795   000E98                     RC2STA          equ	3736	;# 
   796   000E98                     RCSTA2          equ	3736	;# 
   797   000E99                     TX2STA          equ	3737	;# 
   798   000E99                     TXSTA2          equ	3737	;# 
   799   000E9A                     BAUD2CON        equ	3738	;# 
   800   000E9A                     BAUDCON2        equ	3738	;# 
   801   000E9A                     BAUDCTL2        equ	3738	;# 
   802   000E9B                     PPSLOCK         equ	3739	;# 
   803   000E9C                     INT0PPS         equ	3740	;# 
   804   000E9D                     INT1PPS         equ	3741	;# 
   805   000E9E                     INT2PPS         equ	3742	;# 
   806   000E9F                     T0CKIPPS        equ	3743	;# 
   807   000EA0                     T1CKIPPS        equ	3744	;# 
   808   000EA1                     T1GPPS          equ	3745	;# 
   809   000EA2                     T3CKIPPS        equ	3746	;# 
   810   000EA3                     T3GPPS          equ	3747	;# 
   811   000EA4                     T5CKIPPS        equ	3748	;# 
   812   000EA5                     T5GPPS          equ	3749	;# 
   813   000EA6                     T2INPPS         equ	3750	;# 
   814   000EA7                     T4INPPS         equ	3751	;# 
   815   000EA8                     T6INPPS         equ	3752	;# 
   816   000EA9                     ADACTPPS        equ	3753	;# 
   817   000EAA                     CCP1PPS         equ	3754	;# 
   818   000EAB                     CCP2PPS         equ	3755	;# 
   819   000EAC                     CWG1PPS         equ	3756	;# 
   820   000EAC                     CWGPPS          equ	3756	;# 
   821   000EAC                     CWG1INPPS       equ	3756	;# 
   822   000EAC                     CWGINPPS        equ	3756	;# 
   823   000EAD                     MDCARLPPS       equ	3757	;# 
   824   000EAE                     MDCARHPPS       equ	3758	;# 
   825   000EAF                     MDSRCPPS        equ	3759	;# 
   826   000EB0                     RX1PPS          equ	3760	;# 
   827   000EB0                     RXPPS           equ	3760	;# 
   828   000EB0                     RXDT1PPS        equ	3760	;# 
   829   000EB1                     CK1PPS          equ	3761	;# 
   830   000EB1                     TXPPS           equ	3761	;# 
   831   000EB1                     CKPPS           equ	3761	;# 
   832   000EB1                     TX1PPS          equ	3761	;# 
   833   000EB1                     TXCK1PPS        equ	3761	;# 
   834   000EB2                     SSP1CLKPPS      equ	3762	;# 
   835   000EB2                     SSPCLKPPS       equ	3762	;# 
   836   000EB3                     SSP1DATPPS      equ	3763	;# 
   837   000EB3                     SSPDATPPS       equ	3763	;# 
   838   000EB4                     SSP1SSPPS       equ	3764	;# 
   839   000EB4                     SSPSSPPS        equ	3764	;# 
   840   000EB5                     IPR0            equ	3765	;# 
   841   000EB6                     IPR1            equ	3766	;# 
   842   000EB7                     IPR2            equ	3767	;# 
   843   000EB8                     IPR3            equ	3768	;# 
   844   000EB9                     IPR4            equ	3769	;# 
   845   000EBA                     IPR5            equ	3770	;# 
   846   000EBB                     IPR6            equ	3771	;# 
   847   000EBC                     IPR7            equ	3772	;# 
   848   000EBD                     PIE0            equ	3773	;# 
   849   000EBE                     PIE1            equ	3774	;# 
   850   000EBF                     PIE2            equ	3775	;# 
   851   000EC0                     PIE3            equ	3776	;# 
   852   000EC1                     PIE4            equ	3777	;# 
   853   000EC2                     PIE5            equ	3778	;# 
   854   000EC3                     PIE6            equ	3779	;# 
   855   000EC4                     PIE7            equ	3780	;# 
   856   000EC5                     PIR0            equ	3781	;# 
   857   000EC6                     PIR1            equ	3782	;# 
   858   000EC7                     PIR2            equ	3783	;# 
   859   000EC8                     PIR3            equ	3784	;# 
   860   000EC9                     PIR4            equ	3785	;# 
   861   000ECA                     PIR5            equ	3786	;# 
   862   000ECB                     PIR6            equ	3787	;# 
   863   000ECC                     PIR7            equ	3788	;# 
   864   000ECD                     WDTCON0         equ	3789	;# 
   865   000ECE                     WDTCON1         equ	3790	;# 
   866   000ECF                     WDTPSL          equ	3791	;# 
   867   000ED0                     WDTPSH          equ	3792	;# 
   868   000ED1                     WDTTMR          equ	3793	;# 
   869   000ED2                     CPUDOZE         equ	3794	;# 
   870   000ED3                     OSCCON1         equ	3795	;# 
   871   000ED4                     OSCCON2         equ	3796	;# 
   872   000ED5                     OSCCON3         equ	3797	;# 
   873   000ED6                     OSCSTAT         equ	3798	;# 
   874   000ED6                     OSCSTAT1        equ	3798	;# 
   875   000ED7                     OSCEN           equ	3799	;# 
   876   000ED8                     OSCTUNE         equ	3800	;# 
   877   000ED9                     OSCFRQ          equ	3801	;# 
   878   000ED9                     OSCFREQ         equ	3801	;# 
   879   000EDA                     VREGCON         equ	3802	;# 
   880   000EDB                     BORCON          equ	3803	;# 
   881   000EDC                     PMD0            equ	3804	;# 
   882   000EDD                     PMD1            equ	3805	;# 
   883   000EDE                     PMD2            equ	3806	;# 
   884   000EDF                     PMD3            equ	3807	;# 
   885   000EE0                     PMD4            equ	3808	;# 
   886   000EE1                     PMD5            equ	3809	;# 
   887   000EE2                     RA0PPS          equ	3810	;# 
   888   000EE3                     RA1PPS          equ	3811	;# 
   889   000EE4                     RA2PPS          equ	3812	;# 
   890   000EE5                     RA3PPS          equ	3813	;# 
   891   000EE6                     RA4PPS          equ	3814	;# 
   892   000EE7                     RA5PPS          equ	3815	;# 
   893   000EE8                     RA6PPS          equ	3816	;# 
   894   000EE9                     RA7PPS          equ	3817	;# 
   895   000EEA                     RB0PPS          equ	3818	;# 
   896   000EEB                     RB1PPS          equ	3819	;# 
   897   000EEC                     RB2PPS          equ	3820	;# 
   898   000EED                     RB3PPS          equ	3821	;# 
   899   000EEE                     RB4PPS          equ	3822	;# 
   900   000EEF                     RB5PPS          equ	3823	;# 
   901   000EF0                     RB6PPS          equ	3824	;# 
   902   000EF1                     RB7PPS          equ	3825	;# 
   903   000EF2                     RC0PPS          equ	3826	;# 
   904   000EF3                     RC1PPS          equ	3827	;# 
   905   000EF4                     RC2PPS          equ	3828	;# 
   906   000EF5                     RC3PPS          equ	3829	;# 
   907   000EF6                     RC4PPS          equ	3830	;# 
   908   000EF7                     RC5PPS          equ	3831	;# 
   909   000EF8                     RC6PPS          equ	3832	;# 
   910   000EF9                     RC7PPS          equ	3833	;# 
   911   000F05                     IOCAF           equ	3845	;# 
   912   000F06                     IOCAN           equ	3846	;# 
   913   000F07                     IOCAP           equ	3847	;# 
   914   000F08                     INLVLA          equ	3848	;# 
   915   000F09                     SLRCONA         equ	3849	;# 
   916   000F0A                     ODCONA          equ	3850	;# 
   917   000F0B                     WPUA            equ	3851	;# 
   918   000F0C                     ANSELA          equ	3852	;# 
   919   000F0D                     IOCBF           equ	3853	;# 
   920   000F0E                     IOCBN           equ	3854	;# 
   921   000F0F                     IOCBP           equ	3855	;# 
   922   000F10                     INLVLB          equ	3856	;# 
   923   000F11                     SLRCONB         equ	3857	;# 
   924   000F12                     ODCONB          equ	3858	;# 
   925   000F13                     WPUB            equ	3859	;# 
   926   000F14                     ANSELB          equ	3860	;# 
   927   000F15                     IOCCF           equ	3861	;# 
   928   000F16                     IOCCN           equ	3862	;# 
   929   000F17                     IOCCP           equ	3863	;# 
   930   000F18                     INLVLC          equ	3864	;# 
   931   000F19                     SLRCONC         equ	3865	;# 
   932   000F1A                     ODCONC          equ	3866	;# 
   933   000F1B                     WPUC            equ	3867	;# 
   934   000F1C                     ANSELC          equ	3868	;# 
   935   000F22                     IOCEF           equ	3874	;# 
   936   000F23                     IOCEN           equ	3875	;# 
   937   000F24                     IOCEP           equ	3876	;# 
   938   000F25                     INLVLE          equ	3877	;# 
   939   000F28                     WPUE            equ	3880	;# 
   940   000F2A                     HLVDCON0        equ	3882	;# 
   941   000F2B                     HLVDCON1        equ	3883	;# 
   942   000F2C                     FVRCON          equ	3884	;# 
   943   000F2D                     ZCDCON          equ	3885	;# 
   944   000F2E                     DAC1CON0        equ	3886	;# 
   945   000F2F                     DAC1CON1        equ	3887	;# 
   946   000F30                     CM2CON0         equ	3888	;# 
   947   000F31                     CM2CON1         equ	3889	;# 
   948   000F32                     CM2NCH          equ	3890	;# 
   949   000F33                     CM2PCH          equ	3891	;# 
   950   000F34                     CM1CON0         equ	3892	;# 
   951   000F35                     CM1CON1         equ	3893	;# 
   952   000F36                     CM1NCH          equ	3894	;# 
   953   000F37                     CM1PCH          equ	3895	;# 
   954   000F38                     CMOUT           equ	3896	;# 
   955   000F39                     CLKRCON         equ	3897	;# 
   956   000F3A                     CLKRCLK         equ	3898	;# 
   957   000F3B                     CWG1CLK         equ	3899	;# 
   958   000F3B                     CWG1CLKCON      equ	3899	;# 
   959   000F3C                     CWG1ISM         equ	3900	;# 
   960   000F3D                     CWG1DBR         equ	3901	;# 
   961   000F3E                     CWG1DBF         equ	3902	;# 
   962   000F3F                     CWG1CON0        equ	3903	;# 
   963   000F40                     CWG1CON1        equ	3904	;# 
   964   000F41                     CWG1AS0         equ	3905	;# 
   965   000F42                     CWG1AS1         equ	3906	;# 
   966   000F43                     CWG1STR         equ	3907	;# 
   967   000F44                     SCANLADR        equ	3908	;# 
   968   000F44                     SCANLADRL       equ	3908	;# 
   969   000F45                     SCANLADRH       equ	3909	;# 
   970   000F46                     SCANLADRU       equ	3910	;# 
   971   000F47                     SCANHADR        equ	3911	;# 
   972   000F47                     SCANHADRL       equ	3911	;# 
   973   000F48                     SCANHADRH       equ	3912	;# 
   974   000F49                     SCANHADRU       equ	3913	;# 
   975   000F4A                     SCANCON0        equ	3914	;# 
   976   000F4B                     SCANTRIG        equ	3915	;# 
   977   000F4C                     MDCON0          equ	3916	;# 
   978   000F4D                     MDCON1          equ	3917	;# 
   979   000F4E                     MDSRC           equ	3918	;# 
   980   000F4F                     MDCARL          equ	3919	;# 
   981   000F50                     MDCARH          equ	3920	;# 
   982   000F51                     ADACT           equ	3921	;# 
   983   000F52                     ADCLK           equ	3922	;# 
   984   000F53                     ADREF           equ	3923	;# 
   985   000F54                     ADCON1          equ	3924	;# 
   986   000F55                     ADCON2          equ	3925	;# 
   987   000F56                     ADCON3          equ	3926	;# 
   988   000F57                     ADACQ           equ	3927	;# 
   989   000F58                     ADCAP           equ	3928	;# 
   990   000F59                     ADPRE           equ	3929	;# 
   991   000F5A                     ADPCH           equ	3930	;# 
   992   000F5B                     ADCON0          equ	3931	;# 
   993   000F5C                     ADPREV          equ	3932	;# 
   994   000F5C                     ADPREVL         equ	3932	;# 
   995   000F5D                     ADPREVH         equ	3933	;# 
   996   000F5E                     ADRES           equ	3934	;# 
   997   000F5E                     ADRESL          equ	3934	;# 
   998   000F5F                     ADRESH          equ	3935	;# 
   999   000F60                     ADSTAT          equ	3936	;# 
  1000   000F61                     ADRPT           equ	3937	;# 
  1001   000F62                     ADCNT           equ	3938	;# 
  1002   000F63                     ADSTPT          equ	3939	;# 
  1003   000F63                     ADSTPTL         equ	3939	;# 
  1004   000F64                     ADSTPTH         equ	3940	;# 
  1005   000F65                     ADLTH           equ	3941	;# 
  1006   000F65                     ADLTHL          equ	3941	;# 
  1007   000F66                     ADLTHH          equ	3942	;# 
  1008   000F67                     ADUTH           equ	3943	;# 
  1009   000F67                     ADUTHL          equ	3943	;# 
  1010   000F68                     ADUTHH          equ	3944	;# 
  1011   000F69                     ADERR           equ	3945	;# 
  1012   000F69                     ADERRL          equ	3945	;# 
  1013   000F6A                     ADERRH          equ	3946	;# 
  1014   000F6B                     ADACC           equ	3947	;# 
  1015   000F6B                     ADACCL          equ	3947	;# 
  1016   000F6C                     ADACCH          equ	3948	;# 
  1017   000F6D                     ADFLTR          equ	3949	;# 
  1018   000F6D                     ADFLTRL         equ	3949	;# 
  1019   000F6E                     ADFLTRH         equ	3950	;# 
  1020   000F6F                     CRCDATA         equ	3951	;# 
  1021   000F6F                     CRCDATL         equ	3951	;# 
  1022   000F70                     CRCDATH         equ	3952	;# 
  1023   000F71                     CRCACC          equ	3953	;# 
  1024   000F71                     CRCACCL         equ	3953	;# 
  1025   000F72                     CRCACCH         equ	3954	;# 
  1026   000F73                     CRCSHFT         equ	3955	;# 
  1027   000F73                     CRCSHIFTL       equ	3955	;# 
  1028   000F74                     CRCSHIFTH       equ	3956	;# 
  1029   000F75                     CRCXOR          equ	3957	;# 
  1030   000F75                     CRCXORL         equ	3957	;# 
  1031   000F76                     CRCXORH         equ	3958	;# 
  1032   000F77                     CRCCON0         equ	3959	;# 
  1033   000F78                     CRCCON1         equ	3960	;# 
  1034   000F79                     NVMADR          equ	3961	;# 
  1035   000F79                     NVMADRL         equ	3961	;# 
  1036   000F7A                     NVMADRH         equ	3962	;# 
  1037   000F7B                     NVMADRU         equ	3963	;# 
  1038   000F7C                     NVMDAT          equ	3964	;# 
  1039   000F7C                     NVMDATL         equ	3964	;# 
  1040   000F7D                     NVMDATH         equ	3965	;# 
  1041   000F7F                     NVMCON0         equ	3967	;# 
  1042   000F80                     NVMCON1         equ	3968	;# 
  1043   000F81                     NVMCON2         equ	3969	;# 
  1044   000F82                     LATA            equ	3970	;# 
  1045   000F83                     LATB            equ	3971	;# 
  1046   000F84                     LATC            equ	3972	;# 
  1047   000F87                     TRISA           equ	3975	;# 
  1048   000F87                     DDRA            equ	3975	;# 
  1049   000F88                     TRISB           equ	3976	;# 
  1050   000F88                     DDRB            equ	3976	;# 
  1051   000F89                     TRISC           equ	3977	;# 
  1052   000F89                     DDRC            equ	3977	;# 
  1053   000F8C                     PORTA           equ	3980	;# 
  1054   000F8D                     PORTB           equ	3981	;# 
  1055   000F8E                     PORTC           equ	3982	;# 
  1056   000F90                     PORTE           equ	3984	;# 
  1057   000F91                     SSP1BUF         equ	3985	;# 
  1058   000F92                     SSP1ADD         equ	3986	;# 
  1059   000F93                     SSP1MSK         equ	3987	;# 
  1060   000F94                     SSP1STAT        equ	3988	;# 
  1061   000F95                     SSP1CON1        equ	3989	;# 
  1062   000F96                     SSP1CON2        equ	3990	;# 
  1063   000F97                     SSP1CON3        equ	3991	;# 
  1064   000F98                     RC1REG          equ	3992	;# 
  1065   000F98                     RCREG           equ	3992	;# 
  1066   000F98                     RCREG1          equ	3992	;# 
  1067   000F99                     TX1REG          equ	3993	;# 
  1068   000F99                     TXREG1          equ	3993	;# 
  1069   000F99                     TXREG           equ	3993	;# 
  1070   000F9A                     SP1BRG          equ	3994	;# 
  1071   000F9A                     SPBRG           equ	3994	;# 
  1072   000F9A                     SP1BRGL         equ	3994	;# 
  1073   000F9A                     SPBRG1          equ	3994	;# 
  1074   000F9A                     SPBRGL          equ	3994	;# 
  1075   000F9B                     SP1BRGH         equ	3995	;# 
  1076   000F9B                     SPBRGH          equ	3995	;# 
  1077   000F9B                     SPBRGH1         equ	3995	;# 
  1078   000F9C                     RC1STA          equ	3996	;# 
  1079   000F9C                     RCSTA1          equ	3996	;# 
  1080   000F9C                     RCSTA           equ	3996	;# 
  1081   000F9D                     TX1STA          equ	3997	;# 
  1082   000F9D                     TXSTA1          equ	3997	;# 
  1083   000F9D                     TXSTA           equ	3997	;# 
  1084   000F9E                     BAUD1CON        equ	3998	;# 
  1085   000F9E                     BAUDCON1        equ	3998	;# 
  1086   000F9E                     BAUDCTL1        equ	3998	;# 
  1087   000F9E                     BAUDCON         equ	3998	;# 
  1088   000F9E                     BAUDCTL         equ	3998	;# 
  1089   000F9F                     PWM4DC          equ	3999	;# 
  1090   000F9F                     PWM4DCL         equ	3999	;# 
  1091   000FA0                     PWM4DCH         equ	4000	;# 
  1092   000FA1                     PWM4CON         equ	4001	;# 
  1093   000FA2                     PWM3DC          equ	4002	;# 
  1094   000FA2                     PWM3DCL         equ	4002	;# 
  1095   000FA3                     PWM3DCH         equ	4003	;# 
  1096   000FA4                     PWM3CON         equ	4004	;# 
  1097   000FA5                     CCPR2           equ	4005	;# 
  1098   000FA5                     CCPR2L          equ	4005	;# 
  1099   000FA6                     CCPR2H          equ	4006	;# 
  1100   000FA7                     CCP2CON         equ	4007	;# 
  1101   000FA8                     CCP2CAP         equ	4008	;# 
  1102   000FA9                     CCPR1           equ	4009	;# 
  1103   000FA9                     CCPR1L          equ	4009	;# 
  1104   000FAA                     CCPR1H          equ	4010	;# 
  1105   000FAB                     CCP1CON         equ	4011	;# 
  1106   000FAC                     CCP1CAP         equ	4012	;# 
  1107   000FAD                     CCPTMRS         equ	4013	;# 
  1108   000FAE                     T6TMR           equ	4014	;# 
  1109   000FAE                     TMR6            equ	4014	;# 
  1110   000FAF                     T6PR            equ	4015	;# 
  1111   000FAF                     PR6             equ	4015	;# 
  1112   000FB0                     T6CON           equ	4016	;# 
  1113   000FB1                     T6HLT           equ	4017	;# 
  1114   000FB2                     T6CLKCON        equ	4018	;# 
  1115   000FB2                     T6CLK           equ	4018	;# 
  1116   000FB3                     T6RST           equ	4019	;# 
  1117   000FB4                     T4TMR           equ	4020	;# 
  1118   000FB4                     TMR4            equ	4020	;# 
  1119   000FB5                     T4PR            equ	4021	;# 
  1120   000FB5                     PR4             equ	4021	;# 
  1121   000FB6                     T4CON           equ	4022	;# 
  1122   000FB7                     T4HLT           equ	4023	;# 
  1123   000FB8                     T4CLKCON        equ	4024	;# 
  1124   000FB8                     T4CLK           equ	4024	;# 
  1125   000FB9                     T4RST           equ	4025	;# 
  1126   000FBA                     T2TMR           equ	4026	;# 
  1127   000FBA                     TMR2            equ	4026	;# 
  1128   000FBB                     T2PR            equ	4027	;# 
  1129   000FBB                     PR2             equ	4027	;# 
  1130   000FBC                     T2CON           equ	4028	;# 
  1131   000FBD                     T2HLT           equ	4029	;# 
  1132   000FBE                     T2CLKCON        equ	4030	;# 
  1133   000FBE                     T2CLK           equ	4030	;# 
  1134   000FBF                     T2RST           equ	4031	;# 
  1135   000FC0                     TMR5            equ	4032	;# 
  1136   000FC0                     TMR5L           equ	4032	;# 
  1137   000FC1                     TMR5H           equ	4033	;# 
  1138   000FC2                     T5CON           equ	4034	;# 
  1139   000FC2                     TMR5CON         equ	4034	;# 
  1140   000FC3                     T5GCON          equ	4035	;# 
  1141   000FC3                     TMR5GCON        equ	4035	;# 
  1142   000FC4                     T5GATE          equ	4036	;# 
  1143   000FC4                     TMR5GATE        equ	4036	;# 
  1144   000FC5                     T5CLK           equ	4037	;# 
  1145   000FC5                     TMR5CLK         equ	4037	;# 
  1146   000FC5                     PR5             equ	4037	;# 
  1147   000FC6                     TMR3            equ	4038	;# 
  1148   000FC6                     TMR3L           equ	4038	;# 
  1149   000FC7                     TMR3H           equ	4039	;# 
  1150   000FC8                     T3CON           equ	4040	;# 
  1151   000FC8                     TMR3CON         equ	4040	;# 
  1152   000FC9                     T3GCON          equ	4041	;# 
  1153   000FC9                     TMR3GCON        equ	4041	;# 
  1154   000FCA                     T3GATE          equ	4042	;# 
  1155   000FCA                     TMR3GATE        equ	4042	;# 
  1156   000FCB                     T3CLK           equ	4043	;# 
  1157   000FCB                     TMR3CLK         equ	4043	;# 
  1158   000FCB                     PR3             equ	4043	;# 
  1159   000FCC                     TMR1            equ	4044	;# 
  1160   000FCC                     TMR1L           equ	4044	;# 
  1161   000FCD                     TMR1H           equ	4045	;# 
  1162   000FCE                     T1CON           equ	4046	;# 
  1163   000FCE                     TMR1CON         equ	4046	;# 
  1164   000FCF                     T1GCON          equ	4047	;# 
  1165   000FCF                     TMR1GCON        equ	4047	;# 
  1166   000FD0                     T1GATE          equ	4048	;# 
  1167   000FD0                     TMR1GATE        equ	4048	;# 
  1168   000FD1                     T1CLK           equ	4049	;# 
  1169   000FD1                     TMR1CLK         equ	4049	;# 
  1170   000FD1                     PR1             equ	4049	;# 
  1171   000FD2                     TMR0L           equ	4050	;# 
  1172   000FD2                     TMR0            equ	4050	;# 
  1173   000FD3                     TMR0H           equ	4051	;# 
  1174   000FD3                     PR0             equ	4051	;# 
  1175   000FD4                     T0CON0          equ	4052	;# 
  1176   000FD5                     T0CON1          equ	4053	;# 
  1177   000FD6                     PCON1           equ	4054	;# 
  1178   000FD7                     PCON0           equ	4055	;# 
  1179   000FD8                     STATUS          equ	4056	;# 
  1180   000FD9                     FSR2            equ	4057	;# 
  1181   000FD9                     FSR2L           equ	4057	;# 
  1182   000FDA                     FSR2H           equ	4058	;# 
  1183   000FDB                     PLUSW2          equ	4059	;# 
  1184   000FDC                     PREINC2         equ	4060	;# 
  1185   000FDD                     POSTDEC2        equ	4061	;# 
  1186   000FDE                     POSTINC2        equ	4062	;# 
  1187   000FDF                     INDF2           equ	4063	;# 
  1188   000FE0                     BSR             equ	4064	;# 
  1189   000FE1                     FSR1            equ	4065	;# 
  1190   000FE1                     FSR1L           equ	4065	;# 
  1191   000FE2                     FSR1H           equ	4066	;# 
  1192   000FE3                     PLUSW1          equ	4067	;# 
  1193   000FE4                     PREINC1         equ	4068	;# 
  1194   000FE5                     POSTDEC1        equ	4069	;# 
  1195   000FE6                     POSTINC1        equ	4070	;# 
  1196   000FE7                     INDF1           equ	4071	;# 
  1197   000FE8                     WREG            equ	4072	;# 
  1198   000FE9                     FSR0            equ	4073	;# 
  1199   000FE9                     FSR0L           equ	4073	;# 
  1200   000FEA                     FSR0H           equ	4074	;# 
  1201   000FEB                     PLUSW0          equ	4075	;# 
  1202   000FEC                     PREINC0         equ	4076	;# 
  1203   000FED                     POSTDEC0        equ	4077	;# 
  1204   000FEE                     POSTINC0        equ	4078	;# 
  1205   000FEF                     INDF0           equ	4079	;# 
  1206   000FF2                     INTCON          equ	4082	;# 
  1207   000FF3                     PROD            equ	4083	;# 
  1208   000FF3                     PRODL           equ	4083	;# 
  1209   000FF4                     PRODH           equ	4084	;# 
  1210   000FF5                     TABLAT          equ	4085	;# 
  1211   000FF6                     TBLPTR          equ	4086	;# 
  1212   000FF6                     TBLPTRL         equ	4086	;# 
  1213   000FF7                     TBLPTRH         equ	4087	;# 
  1214   000FF8                     TBLPTRU         equ	4088	;# 
  1215   000FF9                     PCLAT           equ	4089	;# 
  1216   000FF9                     PCL             equ	4089	;# 
  1217   000FFA                     PCLATH          equ	4090	;# 
  1218   000FFB                     PCLATU          equ	4091	;# 
  1219   000FFC                     STKPTR          equ	4092	;# 
  1220   000FFD                     TOS             equ	4093	;# 
  1221   000FFD                     TOSL            equ	4093	;# 
  1222   000FFE                     TOSH            equ	4094	;# 
  1223   000FFF                     TOSU            equ	4095	;# 
  1224   000E1F                     CLCIN0PPS       equ	3615	;# 
  1225   000E20                     CLCIN1PPS       equ	3616	;# 
  1226   000E21                     CLCIN2PPS       equ	3617	;# 
  1227   000E22                     CLCIN3PPS       equ	3618	;# 
  1228   000E23                     CLCIN4PPS       equ	3619	;# 
  1229   000E24                     CLCIN5PPS       equ	3620	;# 
  1230   000E25                     CLCIN6PPS       equ	3621	;# 
  1231   000E26                     CLCIN7PPS       equ	3622	;# 
  1232   000E27                     CLC1CON         equ	3623	;# 
  1233   000E28                     CLC1POL         equ	3624	;# 
  1234   000E29                     CLC1SEL0        equ	3625	;# 
  1235   000E2A                     CLC1SEL1        equ	3626	;# 
  1236   000E2B                     CLC1SEL2        equ	3627	;# 
  1237   000E2C                     CLC1SEL3        equ	3628	;# 
  1238   000E2D                     CLC1GLS0        equ	3629	;# 
  1239   000E2E                     CLC1GLS1        equ	3630	;# 
  1240   000E2F                     CLC1GLS2        equ	3631	;# 
  1241   000E30                     CLC1GLS3        equ	3632	;# 
  1242   000E31                     CLC2CON         equ	3633	;# 
  1243   000E32                     CLC2POL         equ	3634	;# 
  1244   000E33                     CLC2SEL0        equ	3635	;# 
  1245   000E34                     CLC2SEL1        equ	3636	;# 
  1246   000E35                     CLC2SEL2        equ	3637	;# 
  1247   000E36                     CLC2SEL3        equ	3638	;# 
  1248   000E37                     CLC2GLS0        equ	3639	;# 
  1249   000E38                     CLC2GLS1        equ	3640	;# 
  1250   000E39                     CLC2GLS2        equ	3641	;# 
  1251   000E3A                     CLC2GLS3        equ	3642	;# 
  1252   000E3B                     CLC3CON         equ	3643	;# 
  1253   000E3C                     CLC3POL         equ	3644	;# 
  1254   000E3D                     CLC3SEL0        equ	3645	;# 
  1255   000E3E                     CLC3SEL1        equ	3646	;# 
  1256   000E3F                     CLC3SEL2        equ	3647	;# 
  1257   000E40                     CLC3SEL3        equ	3648	;# 
  1258   000E41                     CLC3GLS0        equ	3649	;# 
  1259   000E42                     CLC3GLS1        equ	3650	;# 
  1260   000E43                     CLC3GLS2        equ	3651	;# 
  1261   000E44                     CLC3GLS3        equ	3652	;# 
  1262   000E45                     CLC4CON         equ	3653	;# 
  1263   000E46                     CLC4POL         equ	3654	;# 
  1264   000E47                     CLC4SEL0        equ	3655	;# 
  1265   000E48                     CLC4SEL1        equ	3656	;# 
  1266   000E49                     CLC4SEL2        equ	3657	;# 
  1267   000E4A                     CLC4SEL3        equ	3658	;# 
  1268   000E4B                     CLC4GLS0        equ	3659	;# 
  1269   000E4C                     CLC4GLS1        equ	3660	;# 
  1270   000E4D                     CLC4GLS2        equ	3661	;# 
  1271   000E4E                     CLC4GLS3        equ	3662	;# 
  1272   000E4F                     CLC5CON         equ	3663	;# 
  1273   000E50                     CLC5POL         equ	3664	;# 
  1274   000E51                     CLC5SEL0        equ	3665	;# 
  1275   000E52                     CLC5SEL1        equ	3666	;# 
  1276   000E53                     CLC5SEL2        equ	3667	;# 
  1277   000E54                     CLC5SEL3        equ	3668	;# 
  1278   000E55                     CLC5GLS0        equ	3669	;# 
  1279   000E56                     CLC5GLS1        equ	3670	;# 
  1280   000E57                     CLC5GLS2        equ	3671	;# 
  1281   000E58                     CLC5GLS3        equ	3672	;# 
  1282   000E59                     CLC6CON         equ	3673	;# 
  1283   000E5A                     CLC6POL         equ	3674	;# 
  1284   000E5B                     CLC6SEL0        equ	3675	;# 
  1285   000E5C                     CLC6SEL1        equ	3676	;# 
  1286   000E5D                     CLC6SEL2        equ	3677	;# 
  1287   000E5E                     CLC6SEL3        equ	3678	;# 
  1288   000E5F                     CLC6GLS0        equ	3679	;# 
  1289   000E60                     CLC6GLS1        equ	3680	;# 
  1290   000E61                     CLC6GLS2        equ	3681	;# 
  1291   000E62                     CLC6GLS3        equ	3682	;# 
  1292   000E63                     CLC7CON         equ	3683	;# 
  1293   000E64                     CLC7POL         equ	3684	;# 
  1294   000E65                     CLC7SEL0        equ	3685	;# 
  1295   000E66                     CLC7SEL1        equ	3686	;# 
  1296   000E67                     CLC7SEL2        equ	3687	;# 
  1297   000E68                     CLC7SEL3        equ	3688	;# 
  1298   000E69                     CLC7GLS0        equ	3689	;# 
  1299   000E6A                     CLC7GLS1        equ	3690	;# 
  1300   000E6B                     CLC7GLS2        equ	3691	;# 
  1301   000E6C                     CLC7GLS3        equ	3692	;# 
  1302   000E6D                     CLC8CON         equ	3693	;# 
  1303   000E6E                     CLC8POL         equ	3694	;# 
  1304   000E6F                     CLC8SEL0        equ	3695	;# 
  1305   000E70                     CLC8SEL1        equ	3696	;# 
  1306   000E71                     CLC8SEL2        equ	3697	;# 
  1307   000E72                     CLC8SEL3        equ	3698	;# 
  1308   000E73                     CLC8GLS0        equ	3699	;# 
  1309   000E74                     CLC8GLS1        equ	3700	;# 
  1310   000E75                     CLC8GLS2        equ	3701	;# 
  1311   000E76                     CLC8GLS3        equ	3702	;# 
  1312   000E77                     CLCDATA         equ	3703	;# 
  1313   000E88                     RX2PPS          equ	3720	;# 
  1314   000E88                     RXDT2PPS        equ	3720	;# 
  1315   000E89                     CK2PPS          equ	3721	;# 
  1316   000E89                     TXCK2PPS        equ	3721	;# 
  1317   000E89                     TX2PPS          equ	3721	;# 
  1318   000E8A                     SSP2CLKPPS      equ	3722	;# 
  1319   000E8B                     SSP2DATPPS      equ	3723	;# 
  1320   000E8C                     SSP2SSPPS       equ	3724	;# 
  1321   000E8D                     SSP2BUF         equ	3725	;# 
  1322   000E8E                     SSP2ADD         equ	3726	;# 
  1323   000E8F                     SSP2MSK         equ	3727	;# 
  1324   000E90                     SSP2STAT        equ	3728	;# 
  1325   000E91                     SSP2CON1        equ	3729	;# 
  1326   000E92                     SSP2CON2        equ	3730	;# 
  1327   000E93                     SSP2CON3        equ	3731	;# 
  1328   000E94                     RC2REG          equ	3732	;# 
  1329   000E94                     RCREG2          equ	3732	;# 
  1330   000E95                     TX2REG          equ	3733	;# 
  1331   000E95                     TXREG2          equ	3733	;# 
  1332   000E96                     SP2BRG          equ	3734	;# 
  1333   000E96                     SP2BRGL         equ	3734	;# 
  1334   000E96                     SPBRG2          equ	3734	;# 
  1335   000E97                     SP2BRGH         equ	3735	;# 
  1336   000E97                     SPBRGH2         equ	3735	;# 
  1337   000E98                     RC2STA          equ	3736	;# 
  1338   000E98                     RCSTA2          equ	3736	;# 
  1339   000E99                     TX2STA          equ	3737	;# 
  1340   000E99                     TXSTA2          equ	3737	;# 
  1341   000E9A                     BAUD2CON        equ	3738	;# 
  1342   000E9A                     BAUDCON2        equ	3738	;# 
  1343   000E9A                     BAUDCTL2        equ	3738	;# 
  1344   000E9B                     PPSLOCK         equ	3739	;# 
  1345   000E9C                     INT0PPS         equ	3740	;# 
  1346   000E9D                     INT1PPS         equ	3741	;# 
  1347   000E9E                     INT2PPS         equ	3742	;# 
  1348   000E9F                     T0CKIPPS        equ	3743	;# 
  1349   000EA0                     T1CKIPPS        equ	3744	;# 
  1350   000EA1                     T1GPPS          equ	3745	;# 
  1351   000EA2                     T3CKIPPS        equ	3746	;# 
  1352   000EA3                     T3GPPS          equ	3747	;# 
  1353   000EA4                     T5CKIPPS        equ	3748	;# 
  1354   000EA5                     T5GPPS          equ	3749	;# 
  1355   000EA6                     T2INPPS         equ	3750	;# 
  1356   000EA7                     T4INPPS         equ	3751	;# 
  1357   000EA8                     T6INPPS         equ	3752	;# 
  1358   000EA9                     ADACTPPS        equ	3753	;# 
  1359   000EAA                     CCP1PPS         equ	3754	;# 
  1360   000EAB                     CCP2PPS         equ	3755	;# 
  1361   000EAC                     CWG1PPS         equ	3756	;# 
  1362   000EAC                     CWGPPS          equ	3756	;# 
  1363   000EAC                     CWG1INPPS       equ	3756	;# 
  1364   000EAC                     CWGINPPS        equ	3756	;# 
  1365   000EAD                     MDCARLPPS       equ	3757	;# 
  1366   000EAE                     MDCARHPPS       equ	3758	;# 
  1367   000EAF                     MDSRCPPS        equ	3759	;# 
  1368   000EB0                     RX1PPS          equ	3760	;# 
  1369   000EB0                     RXPPS           equ	3760	;# 
  1370   000EB0                     RXDT1PPS        equ	3760	;# 
  1371   000EB1                     CK1PPS          equ	3761	;# 
  1372   000EB1                     TXPPS           equ	3761	;# 
  1373   000EB1                     CKPPS           equ	3761	;# 
  1374   000EB1                     TX1PPS          equ	3761	;# 
  1375   000EB1                     TXCK1PPS        equ	3761	;# 
  1376   000EB2                     SSP1CLKPPS      equ	3762	;# 
  1377   000EB2                     SSPCLKPPS       equ	3762	;# 
  1378   000EB3                     SSP1DATPPS      equ	3763	;# 
  1379   000EB3                     SSPDATPPS       equ	3763	;# 
  1380   000EB4                     SSP1SSPPS       equ	3764	;# 
  1381   000EB4                     SSPSSPPS        equ	3764	;# 
  1382   000EB5                     IPR0            equ	3765	;# 
  1383   000EB6                     IPR1            equ	3766	;# 
  1384   000EB7                     IPR2            equ	3767	;# 
  1385   000EB8                     IPR3            equ	3768	;# 
  1386   000EB9                     IPR4            equ	3769	;# 
  1387   000EBA                     IPR5            equ	3770	;# 
  1388   000EBB                     IPR6            equ	3771	;# 
  1389   000EBC                     IPR7            equ	3772	;# 
  1390   000EBD                     PIE0            equ	3773	;# 
  1391   000EBE                     PIE1            equ	3774	;# 
  1392   000EBF                     PIE2            equ	3775	;# 
  1393   000EC0                     PIE3            equ	3776	;# 
  1394   000EC1                     PIE4            equ	3777	;# 
  1395   000EC2                     PIE5            equ	3778	;# 
  1396   000EC3                     PIE6            equ	3779	;# 
  1397   000EC4                     PIE7            equ	3780	;# 
  1398   000EC5                     PIR0            equ	3781	;# 
  1399   000EC6                     PIR1            equ	3782	;# 
  1400   000EC7                     PIR2            equ	3783	;# 
  1401   000EC8                     PIR3            equ	3784	;# 
  1402   000EC9                     PIR4            equ	3785	;# 
  1403   000ECA                     PIR5            equ	3786	;# 
  1404   000ECB                     PIR6            equ	3787	;# 
  1405   000ECC                     PIR7            equ	3788	;# 
  1406   000ECD                     WDTCON0         equ	3789	;# 
  1407   000ECE                     WDTCON1         equ	3790	;# 
  1408   000ECF                     WDTPSL          equ	3791	;# 
  1409   000ED0                     WDTPSH          equ	3792	;# 
  1410   000ED1                     WDTTMR          equ	3793	;# 
  1411   000ED2                     CPUDOZE         equ	3794	;# 
  1412   000ED3                     OSCCON1         equ	3795	;# 
  1413   000ED4                     OSCCON2         equ	3796	;# 
  1414   000ED5                     OSCCON3         equ	3797	;# 
  1415   000ED6                     OSCSTAT         equ	3798	;# 
  1416   000ED6                     OSCSTAT1        equ	3798	;# 
  1417   000ED7                     OSCEN           equ	3799	;# 
  1418   000ED8                     OSCTUNE         equ	3800	;# 
  1419   000ED9                     OSCFRQ          equ	3801	;# 
  1420   000ED9                     OSCFREQ         equ	3801	;# 
  1421   000EDA                     VREGCON         equ	3802	;# 
  1422   000EDB                     BORCON          equ	3803	;# 
  1423   000EDC                     PMD0            equ	3804	;# 
  1424   000EDD                     PMD1            equ	3805	;# 
  1425   000EDE                     PMD2            equ	3806	;# 
  1426   000EDF                     PMD3            equ	3807	;# 
  1427   000EE0                     PMD4            equ	3808	;# 
  1428   000EE1                     PMD5            equ	3809	;# 
  1429   000EE2                     RA0PPS          equ	3810	;# 
  1430   000EE3                     RA1PPS          equ	3811	;# 
  1431   000EE4                     RA2PPS          equ	3812	;# 
  1432   000EE5                     RA3PPS          equ	3813	;# 
  1433   000EE6                     RA4PPS          equ	3814	;# 
  1434   000EE7                     RA5PPS          equ	3815	;# 
  1435   000EE8                     RA6PPS          equ	3816	;# 
  1436   000EE9                     RA7PPS          equ	3817	;# 
  1437   000EEA                     RB0PPS          equ	3818	;# 
  1438   000EEB                     RB1PPS          equ	3819	;# 
  1439   000EEC                     RB2PPS          equ	3820	;# 
  1440   000EED                     RB3PPS          equ	3821	;# 
  1441   000EEE                     RB4PPS          equ	3822	;# 
  1442   000EEF                     RB5PPS          equ	3823	;# 
  1443   000EF0                     RB6PPS          equ	3824	;# 
  1444   000EF1                     RB7PPS          equ	3825	;# 
  1445   000EF2                     RC0PPS          equ	3826	;# 
  1446   000EF3                     RC1PPS          equ	3827	;# 
  1447   000EF4                     RC2PPS          equ	3828	;# 
  1448   000EF5                     RC3PPS          equ	3829	;# 
  1449   000EF6                     RC4PPS          equ	3830	;# 
  1450   000EF7                     RC5PPS          equ	3831	;# 
  1451   000EF8                     RC6PPS          equ	3832	;# 
  1452   000EF9                     RC7PPS          equ	3833	;# 
  1453   000F05                     IOCAF           equ	3845	;# 
  1454   000F06                     IOCAN           equ	3846	;# 
  1455   000F07                     IOCAP           equ	3847	;# 
  1456   000F08                     INLVLA          equ	3848	;# 
  1457   000F09                     SLRCONA         equ	3849	;# 
  1458   000F0A                     ODCONA          equ	3850	;# 
  1459   000F0B                     WPUA            equ	3851	;# 
  1460   000F0C                     ANSELA          equ	3852	;# 
  1461   000F0D                     IOCBF           equ	3853	;# 
  1462   000F0E                     IOCBN           equ	3854	;# 
  1463   000F0F                     IOCBP           equ	3855	;# 
  1464   000F10                     INLVLB          equ	3856	;# 
  1465   000F11                     SLRCONB         equ	3857	;# 
  1466   000F12                     ODCONB          equ	3858	;# 
  1467   000F13                     WPUB            equ	3859	;# 
  1468   000F14                     ANSELB          equ	3860	;# 
  1469   000F15                     IOCCF           equ	3861	;# 
  1470   000F16                     IOCCN           equ	3862	;# 
  1471   000F17                     IOCCP           equ	3863	;# 
  1472   000F18                     INLVLC          equ	3864	;# 
  1473   000F19                     SLRCONC         equ	3865	;# 
  1474   000F1A                     ODCONC          equ	3866	;# 
  1475   000F1B                     WPUC            equ	3867	;# 
  1476   000F1C                     ANSELC          equ	3868	;# 
  1477   000F22                     IOCEF           equ	3874	;# 
  1478   000F23                     IOCEN           equ	3875	;# 
  1479   000F24                     IOCEP           equ	3876	;# 
  1480   000F25                     INLVLE          equ	3877	;# 
  1481   000F28                     WPUE            equ	3880	;# 
  1482   000F2A                     HLVDCON0        equ	3882	;# 
  1483   000F2B                     HLVDCON1        equ	3883	;# 
  1484   000F2C                     FVRCON          equ	3884	;# 
  1485   000F2D                     ZCDCON          equ	3885	;# 
  1486   000F2E                     DAC1CON0        equ	3886	;# 
  1487   000F2F                     DAC1CON1        equ	3887	;# 
  1488   000F30                     CM2CON0         equ	3888	;# 
  1489   000F31                     CM2CON1         equ	3889	;# 
  1490   000F32                     CM2NCH          equ	3890	;# 
  1491   000F33                     CM2PCH          equ	3891	;# 
  1492   000F34                     CM1CON0         equ	3892	;# 
  1493   000F35                     CM1CON1         equ	3893	;# 
  1494   000F36                     CM1NCH          equ	3894	;# 
  1495   000F37                     CM1PCH          equ	3895	;# 
  1496   000F38                     CMOUT           equ	3896	;# 
  1497   000F39                     CLKRCON         equ	3897	;# 
  1498   000F3A                     CLKRCLK         equ	3898	;# 
  1499   000F3B                     CWG1CLK         equ	3899	;# 
  1500   000F3B                     CWG1CLKCON      equ	3899	;# 
  1501   000F3C                     CWG1ISM         equ	3900	;# 
  1502   000F3D                     CWG1DBR         equ	3901	;# 
  1503   000F3E                     CWG1DBF         equ	3902	;# 
  1504   000F3F                     CWG1CON0        equ	3903	;# 
  1505   000F40                     CWG1CON1        equ	3904	;# 
  1506   000F41                     CWG1AS0         equ	3905	;# 
  1507   000F42                     CWG1AS1         equ	3906	;# 
  1508   000F43                     CWG1STR         equ	3907	;# 
  1509   000F44                     SCANLADR        equ	3908	;# 
  1510   000F44                     SCANLADRL       equ	3908	;# 
  1511   000F45                     SCANLADRH       equ	3909	;# 
  1512   000F46                     SCANLADRU       equ	3910	;# 
  1513   000F47                     SCANHADR        equ	3911	;# 
  1514   000F47                     SCANHADRL       equ	3911	;# 
  1515   000F48                     SCANHADRH       equ	3912	;# 
  1516   000F49                     SCANHADRU       equ	3913	;# 
  1517   000F4A                     SCANCON0        equ	3914	;# 
  1518   000F4B                     SCANTRIG        equ	3915	;# 
  1519   000F4C                     MDCON0          equ	3916	;# 
  1520   000F4D                     MDCON1          equ	3917	;# 
  1521   000F4E                     MDSRC           equ	3918	;# 
  1522   000F4F                     MDCARL          equ	3919	;# 
  1523   000F50                     MDCARH          equ	3920	;# 
  1524   000F51                     ADACT           equ	3921	;# 
  1525   000F52                     ADCLK           equ	3922	;# 
  1526   000F53                     ADREF           equ	3923	;# 
  1527   000F54                     ADCON1          equ	3924	;# 
  1528   000F55                     ADCON2          equ	3925	;# 
  1529   000F56                     ADCON3          equ	3926	;# 
  1530   000F57                     ADACQ           equ	3927	;# 
  1531   000F58                     ADCAP           equ	3928	;# 
  1532   000F59                     ADPRE           equ	3929	;# 
  1533   000F5A                     ADPCH           equ	3930	;# 
  1534   000F5B                     ADCON0          equ	3931	;# 
  1535   000F5C                     ADPREV          equ	3932	;# 
  1536   000F5C                     ADPREVL         equ	3932	;# 
  1537   000F5D                     ADPREVH         equ	3933	;# 
  1538   000F5E                     ADRES           equ	3934	;# 
  1539   000F5E                     ADRESL          equ	3934	;# 
  1540   000F5F                     ADRESH          equ	3935	;# 
  1541   000F60                     ADSTAT          equ	3936	;# 
  1542   000F61                     ADRPT           equ	3937	;# 
  1543   000F62                     ADCNT           equ	3938	;# 
  1544   000F63                     ADSTPT          equ	3939	;# 
  1545   000F63                     ADSTPTL         equ	3939	;# 
  1546   000F64                     ADSTPTH         equ	3940	;# 
  1547   000F65                     ADLTH           equ	3941	;# 
  1548   000F65                     ADLTHL          equ	3941	;# 
  1549   000F66                     ADLTHH          equ	3942	;# 
  1550   000F67                     ADUTH           equ	3943	;# 
  1551   000F67                     ADUTHL          equ	3943	;# 
  1552   000F68                     ADUTHH          equ	3944	;# 
  1553   000F69                     ADERR           equ	3945	;# 
  1554   000F69                     ADERRL          equ	3945	;# 
  1555   000F6A                     ADERRH          equ	3946	;# 
  1556   000F6B                     ADACC           equ	3947	;# 
  1557   000F6B                     ADACCL          equ	3947	;# 
  1558   000F6C                     ADACCH          equ	3948	;# 
  1559   000F6D                     ADFLTR          equ	3949	;# 
  1560   000F6D                     ADFLTRL         equ	3949	;# 
  1561   000F6E                     ADFLTRH         equ	3950	;# 
  1562   000F6F                     CRCDATA         equ	3951	;# 
  1563   000F6F                     CRCDATL         equ	3951	;# 
  1564   000F70                     CRCDATH         equ	3952	;# 
  1565   000F71                     CRCACC          equ	3953	;# 
  1566   000F71                     CRCACCL         equ	3953	;# 
  1567   000F72                     CRCACCH         equ	3954	;# 
  1568   000F73                     CRCSHFT         equ	3955	;# 
  1569   000F73                     CRCSHIFTL       equ	3955	;# 
  1570   000F74                     CRCSHIFTH       equ	3956	;# 
  1571   000F75                     CRCXOR          equ	3957	;# 
  1572   000F75                     CRCXORL         equ	3957	;# 
  1573   000F76                     CRCXORH         equ	3958	;# 
  1574   000F77                     CRCCON0         equ	3959	;# 
  1575   000F78                     CRCCON1         equ	3960	;# 
  1576   000F79                     NVMADR          equ	3961	;# 
  1577   000F79                     NVMADRL         equ	3961	;# 
  1578   000F7A                     NVMADRH         equ	3962	;# 
  1579   000F7B                     NVMADRU         equ	3963	;# 
  1580   000F7C                     NVMDAT          equ	3964	;# 
  1581   000F7C                     NVMDATL         equ	3964	;# 
  1582   000F7D                     NVMDATH         equ	3965	;# 
  1583   000F7F                     NVMCON0         equ	3967	;# 
  1584   000F80                     NVMCON1         equ	3968	;# 
  1585   000F81                     NVMCON2         equ	3969	;# 
  1586   000F82                     LATA            equ	3970	;# 
  1587   000F83                     LATB            equ	3971	;# 
  1588   000F84                     LATC            equ	3972	;# 
  1589   000F87                     TRISA           equ	3975	;# 
  1590   000F87                     DDRA            equ	3975	;# 
  1591   000F88                     TRISB           equ	3976	;# 
  1592   000F88                     DDRB            equ	3976	;# 
  1593   000F89                     TRISC           equ	3977	;# 
  1594   000F89                     DDRC            equ	3977	;# 
  1595   000F8C                     PORTA           equ	3980	;# 
  1596   000F8D                     PORTB           equ	3981	;# 
  1597   000F8E                     PORTC           equ	3982	;# 
  1598   000F90                     PORTE           equ	3984	;# 
  1599   000F91                     SSP1BUF         equ	3985	;# 
  1600   000F92                     SSP1ADD         equ	3986	;# 
  1601   000F93                     SSP1MSK         equ	3987	;# 
  1602   000F94                     SSP1STAT        equ	3988	;# 
  1603   000F95                     SSP1CON1        equ	3989	;# 
  1604   000F96                     SSP1CON2        equ	3990	;# 
  1605   000F97                     SSP1CON3        equ	3991	;# 
  1606   000F98                     RC1REG          equ	3992	;# 
  1607   000F98                     RCREG           equ	3992	;# 
  1608   000F98                     RCREG1          equ	3992	;# 
  1609   000F99                     TX1REG          equ	3993	;# 
  1610   000F99                     TXREG1          equ	3993	;# 
  1611   000F99                     TXREG           equ	3993	;# 
  1612   000F9A                     SP1BRG          equ	3994	;# 
  1613   000F9A                     SPBRG           equ	3994	;# 
  1614   000F9A                     SP1BRGL         equ	3994	;# 
  1615   000F9A                     SPBRG1          equ	3994	;# 
  1616   000F9A                     SPBRGL          equ	3994	;# 
  1617   000F9B                     SP1BRGH         equ	3995	;# 
  1618   000F9B                     SPBRGH          equ	3995	;# 
  1619   000F9B                     SPBRGH1         equ	3995	;# 
  1620   000F9C                     RC1STA          equ	3996	;# 
  1621   000F9C                     RCSTA1          equ	3996	;# 
  1622   000F9C                     RCSTA           equ	3996	;# 
  1623   000F9D                     TX1STA          equ	3997	;# 
  1624   000F9D                     TXSTA1          equ	3997	;# 
  1625   000F9D                     TXSTA           equ	3997	;# 
  1626   000F9E                     BAUD1CON        equ	3998	;# 
  1627   000F9E                     BAUDCON1        equ	3998	;# 
  1628   000F9E                     BAUDCTL1        equ	3998	;# 
  1629   000F9E                     BAUDCON         equ	3998	;# 
  1630   000F9E                     BAUDCTL         equ	3998	;# 
  1631   000F9F                     PWM4DC          equ	3999	;# 
  1632   000F9F                     PWM4DCL         equ	3999	;# 
  1633   000FA0                     PWM4DCH         equ	4000	;# 
  1634   000FA1                     PWM4CON         equ	4001	;# 
  1635   000FA2                     PWM3DC          equ	4002	;# 
  1636   000FA2                     PWM3DCL         equ	4002	;# 
  1637   000FA3                     PWM3DCH         equ	4003	;# 
  1638   000FA4                     PWM3CON         equ	4004	;# 
  1639   000FA5                     CCPR2           equ	4005	;# 
  1640   000FA5                     CCPR2L          equ	4005	;# 
  1641   000FA6                     CCPR2H          equ	4006	;# 
  1642   000FA7                     CCP2CON         equ	4007	;# 
  1643   000FA8                     CCP2CAP         equ	4008	;# 
  1644   000FA9                     CCPR1           equ	4009	;# 
  1645   000FA9                     CCPR1L          equ	4009	;# 
  1646   000FAA                     CCPR1H          equ	4010	;# 
  1647   000FAB                     CCP1CON         equ	4011	;# 
  1648   000FAC                     CCP1CAP         equ	4012	;# 
  1649   000FAD                     CCPTMRS         equ	4013	;# 
  1650   000FAE                     T6TMR           equ	4014	;# 
  1651   000FAE                     TMR6            equ	4014	;# 
  1652   000FAF                     T6PR            equ	4015	;# 
  1653   000FAF                     PR6             equ	4015	;# 
  1654   000FB0                     T6CON           equ	4016	;# 
  1655   000FB1                     T6HLT           equ	4017	;# 
  1656   000FB2                     T6CLKCON        equ	4018	;# 
  1657   000FB2                     T6CLK           equ	4018	;# 
  1658   000FB3                     T6RST           equ	4019	;# 
  1659   000FB4                     T4TMR           equ	4020	;# 
  1660   000FB4                     TMR4            equ	4020	;# 
  1661   000FB5                     T4PR            equ	4021	;# 
  1662   000FB5                     PR4             equ	4021	;# 
  1663   000FB6                     T4CON           equ	4022	;# 
  1664   000FB7                     T4HLT           equ	4023	;# 
  1665   000FB8                     T4CLKCON        equ	4024	;# 
  1666   000FB8                     T4CLK           equ	4024	;# 
  1667   000FB9                     T4RST           equ	4025	;# 
  1668   000FBA                     T2TMR           equ	4026	;# 
  1669   000FBA                     TMR2            equ	4026	;# 
  1670   000FBB                     T2PR            equ	4027	;# 
  1671   000FBB                     PR2             equ	4027	;# 
  1672   000FBC                     T2CON           equ	4028	;# 
  1673   000FBD                     T2HLT           equ	4029	;# 
  1674   000FBE                     T2CLKCON        equ	4030	;# 
  1675   000FBE                     T2CLK           equ	4030	;# 
  1676   000FBF                     T2RST           equ	4031	;# 
  1677   000FC0                     TMR5            equ	4032	;# 
  1678   000FC0                     TMR5L           equ	4032	;# 
  1679   000FC1                     TMR5H           equ	4033	;# 
  1680   000FC2                     T5CON           equ	4034	;# 
  1681   000FC2                     TMR5CON         equ	4034	;# 
  1682   000FC3                     T5GCON          equ	4035	;# 
  1683   000FC3                     TMR5GCON        equ	4035	;# 
  1684   000FC4                     T5GATE          equ	4036	;# 
  1685   000FC4                     TMR5GATE        equ	4036	;# 
  1686   000FC5                     T5CLK           equ	4037	;# 
  1687   000FC5                     TMR5CLK         equ	4037	;# 
  1688   000FC5                     PR5             equ	4037	;# 
  1689   000FC6                     TMR3            equ	4038	;# 
  1690   000FC6                     TMR3L           equ	4038	;# 
  1691   000FC7                     TMR3H           equ	4039	;# 
  1692   000FC8                     T3CON           equ	4040	;# 
  1693   000FC8                     TMR3CON         equ	4040	;# 
  1694   000FC9                     T3GCON          equ	4041	;# 
  1695   000FC9                     TMR3GCON        equ	4041	;# 
  1696   000FCA                     T3GATE          equ	4042	;# 
  1697   000FCA                     TMR3GATE        equ	4042	;# 
  1698   000FCB                     T3CLK           equ	4043	;# 
  1699   000FCB                     TMR3CLK         equ	4043	;# 
  1700   000FCB                     PR3             equ	4043	;# 
  1701   000FCC                     TMR1            equ	4044	;# 
  1702   000FCC                     TMR1L           equ	4044	;# 
  1703   000FCD                     TMR1H           equ	4045	;# 
  1704   000FCE                     T1CON           equ	4046	;# 
  1705   000FCE                     TMR1CON         equ	4046	;# 
  1706   000FCF                     T1GCON          equ	4047	;# 
  1707   000FCF                     TMR1GCON        equ	4047	;# 
  1708   000FD0                     T1GATE          equ	4048	;# 
  1709   000FD0                     TMR1GATE        equ	4048	;# 
  1710   000FD1                     T1CLK           equ	4049	;# 
  1711   000FD1                     TMR1CLK         equ	4049	;# 
  1712   000FD1                     PR1             equ	4049	;# 
  1713   000FD2                     TMR0L           equ	4050	;# 
  1714   000FD2                     TMR0            equ	4050	;# 
  1715   000FD3                     TMR0H           equ	4051	;# 
  1716   000FD3                     PR0             equ	4051	;# 
  1717   000FD4                     T0CON0          equ	4052	;# 
  1718   000FD5                     T0CON1          equ	4053	;# 
  1719   000FD6                     PCON1           equ	4054	;# 
  1720   000FD7                     PCON0           equ	4055	;# 
  1721   000FD8                     STATUS          equ	4056	;# 
  1722   000FD9                     FSR2            equ	4057	;# 
  1723   000FD9                     FSR2L           equ	4057	;# 
  1724   000FDA                     FSR2H           equ	4058	;# 
  1725   000FDB                     PLUSW2          equ	4059	;# 
  1726   000FDC                     PREINC2         equ	4060	;# 
  1727   000FDD                     POSTDEC2        equ	4061	;# 
  1728   000FDE                     POSTINC2        equ	4062	;# 
  1729   000FDF                     INDF2           equ	4063	;# 
  1730   000FE0                     BSR             equ	4064	;# 
  1731   000FE1                     FSR1            equ	4065	;# 
  1732   000FE1                     FSR1L           equ	4065	;# 
  1733   000FE2                     FSR1H           equ	4066	;# 
  1734   000FE3                     PLUSW1          equ	4067	;# 
  1735   000FE4                     PREINC1         equ	4068	;# 
  1736   000FE5                     POSTDEC1        equ	4069	;# 
  1737   000FE6                     POSTINC1        equ	4070	;# 
  1738   000FE7                     INDF1           equ	4071	;# 
  1739   000FE8                     WREG            equ	4072	;# 
  1740   000FE9                     FSR0            equ	4073	;# 
  1741   000FE9                     FSR0L           equ	4073	;# 
  1742   000FEA                     FSR0H           equ	4074	;# 
  1743   000FEB                     PLUSW0          equ	4075	;# 
  1744   000FEC                     PREINC0         equ	4076	;# 
  1745   000FED                     POSTDEC0        equ	4077	;# 
  1746   000FEE                     POSTINC0        equ	4078	;# 
  1747   000FEF                     INDF0           equ	4079	;# 
  1748   000FF2                     INTCON          equ	4082	;# 
  1749   000FF3                     PROD            equ	4083	;# 
  1750   000FF3                     PRODL           equ	4083	;# 
  1751   000FF4                     PRODH           equ	4084	;# 
  1752   000FF5                     TABLAT          equ	4085	;# 
  1753   000FF6                     TBLPTR          equ	4086	;# 
  1754   000FF6                     TBLPTRL         equ	4086	;# 
  1755   000FF7                     TBLPTRH         equ	4087	;# 
  1756   000FF8                     TBLPTRU         equ	4088	;# 
  1757   000FF9                     PCLAT           equ	4089	;# 
  1758   000FF9                     PCL             equ	4089	;# 
  1759   000FFA                     PCLATH          equ	4090	;# 
  1760   000FFB                     PCLATU          equ	4091	;# 
  1761   000FFC                     STKPTR          equ	4092	;# 
  1762   000FFD                     TOS             equ	4093	;# 
  1763   000FFD                     TOSL            equ	4093	;# 
  1764   000FFE                     TOSH            equ	4094	;# 
  1765   000FFF                     TOSU            equ	4095	;# 
  1766   000E1F                     CLCIN0PPS       equ	3615	;# 
  1767   000E20                     CLCIN1PPS       equ	3616	;# 
  1768   000E21                     CLCIN2PPS       equ	3617	;# 
  1769   000E22                     CLCIN3PPS       equ	3618	;# 
  1770   000E23                     CLCIN4PPS       equ	3619	;# 
  1771   000E24                     CLCIN5PPS       equ	3620	;# 
  1772   000E25                     CLCIN6PPS       equ	3621	;# 
  1773   000E26                     CLCIN7PPS       equ	3622	;# 
  1774   000E27                     CLC1CON         equ	3623	;# 
  1775   000E28                     CLC1POL         equ	3624	;# 
  1776   000E29                     CLC1SEL0        equ	3625	;# 
  1777   000E2A                     CLC1SEL1        equ	3626	;# 
  1778   000E2B                     CLC1SEL2        equ	3627	;# 
  1779   000E2C                     CLC1SEL3        equ	3628	;# 
  1780   000E2D                     CLC1GLS0        equ	3629	;# 
  1781   000E2E                     CLC1GLS1        equ	3630	;# 
  1782   000E2F                     CLC1GLS2        equ	3631	;# 
  1783   000E30                     CLC1GLS3        equ	3632	;# 
  1784   000E31                     CLC2CON         equ	3633	;# 
  1785   000E32                     CLC2POL         equ	3634	;# 
  1786   000E33                     CLC2SEL0        equ	3635	;# 
  1787   000E34                     CLC2SEL1        equ	3636	;# 
  1788   000E35                     CLC2SEL2        equ	3637	;# 
  1789   000E36                     CLC2SEL3        equ	3638	;# 
  1790   000E37                     CLC2GLS0        equ	3639	;# 
  1791   000E38                     CLC2GLS1        equ	3640	;# 
  1792   000E39                     CLC2GLS2        equ	3641	;# 
  1793   000E3A                     CLC2GLS3        equ	3642	;# 
  1794   000E3B                     CLC3CON         equ	3643	;# 
  1795   000E3C                     CLC3POL         equ	3644	;# 
  1796   000E3D                     CLC3SEL0        equ	3645	;# 
  1797   000E3E                     CLC3SEL1        equ	3646	;# 
  1798   000E3F                     CLC3SEL2        equ	3647	;# 
  1799   000E40                     CLC3SEL3        equ	3648	;# 
  1800   000E41                     CLC3GLS0        equ	3649	;# 
  1801   000E42                     CLC3GLS1        equ	3650	;# 
  1802   000E43                     CLC3GLS2        equ	3651	;# 
  1803   000E44                     CLC3GLS3        equ	3652	;# 
  1804   000E45                     CLC4CON         equ	3653	;# 
  1805   000E46                     CLC4POL         equ	3654	;# 
  1806   000E47                     CLC4SEL0        equ	3655	;# 
  1807   000E48                     CLC4SEL1        equ	3656	;# 
  1808   000E49                     CLC4SEL2        equ	3657	;# 
  1809   000E4A                     CLC4SEL3        equ	3658	;# 
  1810   000E4B                     CLC4GLS0        equ	3659	;# 
  1811   000E4C                     CLC4GLS1        equ	3660	;# 
  1812   000E4D                     CLC4GLS2        equ	3661	;# 
  1813   000E4E                     CLC4GLS3        equ	3662	;# 
  1814   000E4F                     CLC5CON         equ	3663	;# 
  1815   000E50                     CLC5POL         equ	3664	;# 
  1816   000E51                     CLC5SEL0        equ	3665	;# 
  1817   000E52                     CLC5SEL1        equ	3666	;# 
  1818   000E53                     CLC5SEL2        equ	3667	;# 
  1819   000E54                     CLC5SEL3        equ	3668	;# 
  1820   000E55                     CLC5GLS0        equ	3669	;# 
  1821   000E56                     CLC5GLS1        equ	3670	;# 
  1822   000E57                     CLC5GLS2        equ	3671	;# 
  1823   000E58                     CLC5GLS3        equ	3672	;# 
  1824   000E59                     CLC6CON         equ	3673	;# 
  1825   000E5A                     CLC6POL         equ	3674	;# 
  1826   000E5B                     CLC6SEL0        equ	3675	;# 
  1827   000E5C                     CLC6SEL1        equ	3676	;# 
  1828   000E5D                     CLC6SEL2        equ	3677	;# 
  1829   000E5E                     CLC6SEL3        equ	3678	;# 
  1830   000E5F                     CLC6GLS0        equ	3679	;# 
  1831   000E60                     CLC6GLS1        equ	3680	;# 
  1832   000E61                     CLC6GLS2        equ	3681	;# 
  1833   000E62                     CLC6GLS3        equ	3682	;# 
  1834   000E63                     CLC7CON         equ	3683	;# 
  1835   000E64                     CLC7POL         equ	3684	;# 
  1836   000E65                     CLC7SEL0        equ	3685	;# 
  1837   000E66                     CLC7SEL1        equ	3686	;# 
  1838   000E67                     CLC7SEL2        equ	3687	;# 
  1839   000E68                     CLC7SEL3        equ	3688	;# 
  1840   000E69                     CLC7GLS0        equ	3689	;# 
  1841   000E6A                     CLC7GLS1        equ	3690	;# 
  1842   000E6B                     CLC7GLS2        equ	3691	;# 
  1843   000E6C                     CLC7GLS3        equ	3692	;# 
  1844   000E6D                     CLC8CON         equ	3693	;# 
  1845   000E6E                     CLC8POL         equ	3694	;# 
  1846   000E6F                     CLC8SEL0        equ	3695	;# 
  1847   000E70                     CLC8SEL1        equ	3696	;# 
  1848   000E71                     CLC8SEL2        equ	3697	;# 
  1849   000E72                     CLC8SEL3        equ	3698	;# 
  1850   000E73                     CLC8GLS0        equ	3699	;# 
  1851   000E74                     CLC8GLS1        equ	3700	;# 
  1852   000E75                     CLC8GLS2        equ	3701	;# 
  1853   000E76                     CLC8GLS3        equ	3702	;# 
  1854   000E77                     CLCDATA         equ	3703	;# 
  1855   000E88                     RX2PPS          equ	3720	;# 
  1856   000E88                     RXDT2PPS        equ	3720	;# 
  1857   000E89                     CK2PPS          equ	3721	;# 
  1858   000E89                     TXCK2PPS        equ	3721	;# 
  1859   000E89                     TX2PPS          equ	3721	;# 
  1860   000E8A                     SSP2CLKPPS      equ	3722	;# 
  1861   000E8B                     SSP2DATPPS      equ	3723	;# 
  1862   000E8C                     SSP2SSPPS       equ	3724	;# 
  1863   000E8D                     SSP2BUF         equ	3725	;# 
  1864   000E8E                     SSP2ADD         equ	3726	;# 
  1865   000E8F                     SSP2MSK         equ	3727	;# 
  1866   000E90                     SSP2STAT        equ	3728	;# 
  1867   000E91                     SSP2CON1        equ	3729	;# 
  1868   000E92                     SSP2CON2        equ	3730	;# 
  1869   000E93                     SSP2CON3        equ	3731	;# 
  1870   000E94                     RC2REG          equ	3732	;# 
  1871   000E94                     RCREG2          equ	3732	;# 
  1872   000E95                     TX2REG          equ	3733	;# 
  1873   000E95                     TXREG2          equ	3733	;# 
  1874   000E96                     SP2BRG          equ	3734	;# 
  1875   000E96                     SP2BRGL         equ	3734	;# 
  1876   000E96                     SPBRG2          equ	3734	;# 
  1877   000E97                     SP2BRGH         equ	3735	;# 
  1878   000E97                     SPBRGH2         equ	3735	;# 
  1879   000E98                     RC2STA          equ	3736	;# 
  1880   000E98                     RCSTA2          equ	3736	;# 
  1881   000E99                     TX2STA          equ	3737	;# 
  1882   000E99                     TXSTA2          equ	3737	;# 
  1883   000E9A                     BAUD2CON        equ	3738	;# 
  1884   000E9A                     BAUDCON2        equ	3738	;# 
  1885   000E9A                     BAUDCTL2        equ	3738	;# 
  1886   000E9B                     PPSLOCK         equ	3739	;# 
  1887   000E9C                     INT0PPS         equ	3740	;# 
  1888   000E9D                     INT1PPS         equ	3741	;# 
  1889   000E9E                     INT2PPS         equ	3742	;# 
  1890   000E9F                     T0CKIPPS        equ	3743	;# 
  1891   000EA0                     T1CKIPPS        equ	3744	;# 
  1892   000EA1                     T1GPPS          equ	3745	;# 
  1893   000EA2                     T3CKIPPS        equ	3746	;# 
  1894   000EA3                     T3GPPS          equ	3747	;# 
  1895   000EA4                     T5CKIPPS        equ	3748	;# 
  1896   000EA5                     T5GPPS          equ	3749	;# 
  1897   000EA6                     T2INPPS         equ	3750	;# 
  1898   000EA7                     T4INPPS         equ	3751	;# 
  1899   000EA8                     T6INPPS         equ	3752	;# 
  1900   000EA9                     ADACTPPS        equ	3753	;# 
  1901   000EAA                     CCP1PPS         equ	3754	;# 
  1902   000EAB                     CCP2PPS         equ	3755	;# 
  1903   000EAC                     CWG1PPS         equ	3756	;# 
  1904   000EAC                     CWGPPS          equ	3756	;# 
  1905   000EAC                     CWG1INPPS       equ	3756	;# 
  1906   000EAC                     CWGINPPS        equ	3756	;# 
  1907   000EAD                     MDCARLPPS       equ	3757	;# 
  1908   000EAE                     MDCARHPPS       equ	3758	;# 
  1909   000EAF                     MDSRCPPS        equ	3759	;# 
  1910   000EB0                     RX1PPS          equ	3760	;# 
  1911   000EB0                     RXPPS           equ	3760	;# 
  1912   000EB0                     RXDT1PPS        equ	3760	;# 
  1913   000EB1                     CK1PPS          equ	3761	;# 
  1914   000EB1                     TXPPS           equ	3761	;# 
  1915   000EB1                     CKPPS           equ	3761	;# 
  1916   000EB1                     TX1PPS          equ	3761	;# 
  1917   000EB1                     TXCK1PPS        equ	3761	;# 
  1918   000EB2                     SSP1CLKPPS      equ	3762	;# 
  1919   000EB2                     SSPCLKPPS       equ	3762	;# 
  1920   000EB3                     SSP1DATPPS      equ	3763	;# 
  1921   000EB3                     SSPDATPPS       equ	3763	;# 
  1922   000EB4                     SSP1SSPPS       equ	3764	;# 
  1923   000EB4                     SSPSSPPS        equ	3764	;# 
  1924   000EB5                     IPR0            equ	3765	;# 
  1925   000EB6                     IPR1            equ	3766	;# 
  1926   000EB7                     IPR2            equ	3767	;# 
  1927   000EB8                     IPR3            equ	3768	;# 
  1928   000EB9                     IPR4            equ	3769	;# 
  1929   000EBA                     IPR5            equ	3770	;# 
  1930   000EBB                     IPR6            equ	3771	;# 
  1931   000EBC                     IPR7            equ	3772	;# 
  1932   000EBD                     PIE0            equ	3773	;# 
  1933   000EBE                     PIE1            equ	3774	;# 
  1934   000EBF                     PIE2            equ	3775	;# 
  1935   000EC0                     PIE3            equ	3776	;# 
  1936   000EC1                     PIE4            equ	3777	;# 
  1937   000EC2                     PIE5            equ	3778	;# 
  1938   000EC3                     PIE6            equ	3779	;# 
  1939   000EC4                     PIE7            equ	3780	;# 
  1940   000EC5                     PIR0            equ	3781	;# 
  1941   000EC6                     PIR1            equ	3782	;# 
  1942   000EC7                     PIR2            equ	3783	;# 
  1943   000EC8                     PIR3            equ	3784	;# 
  1944   000EC9                     PIR4            equ	3785	;# 
  1945   000ECA                     PIR5            equ	3786	;# 
  1946   000ECB                     PIR6            equ	3787	;# 
  1947   000ECC                     PIR7            equ	3788	;# 
  1948   000ECD                     WDTCON0         equ	3789	;# 
  1949   000ECE                     WDTCON1         equ	3790	;# 
  1950   000ECF                     WDTPSL          equ	3791	;# 
  1951   000ED0                     WDTPSH          equ	3792	;# 
  1952   000ED1                     WDTTMR          equ	3793	;# 
  1953   000ED2                     CPUDOZE         equ	3794	;# 
  1954   000ED3                     OSCCON1         equ	3795	;# 
  1955   000ED4                     OSCCON2         equ	3796	;# 
  1956   000ED5                     OSCCON3         equ	3797	;# 
  1957   000ED6                     OSCSTAT         equ	3798	;# 
  1958   000ED6                     OSCSTAT1        equ	3798	;# 
  1959   000ED7                     OSCEN           equ	3799	;# 
  1960   000ED8                     OSCTUNE         equ	3800	;# 
  1961   000ED9                     OSCFRQ          equ	3801	;# 
  1962   000ED9                     OSCFREQ         equ	3801	;# 
  1963   000EDA                     VREGCON         equ	3802	;# 
  1964   000EDB                     BORCON          equ	3803	;# 
  1965   000EDC                     PMD0            equ	3804	;# 
  1966   000EDD                     PMD1            equ	3805	;# 
  1967   000EDE                     PMD2            equ	3806	;# 
  1968   000EDF                     PMD3            equ	3807	;# 
  1969   000EE0                     PMD4            equ	3808	;# 
  1970   000EE1                     PMD5            equ	3809	;# 
  1971   000EE2                     RA0PPS          equ	3810	;# 
  1972   000EE3                     RA1PPS          equ	3811	;# 
  1973   000EE4                     RA2PPS          equ	3812	;# 
  1974   000EE5                     RA3PPS          equ	3813	;# 
  1975   000EE6                     RA4PPS          equ	3814	;# 
  1976   000EE7                     RA5PPS          equ	3815	;# 
  1977   000EE8                     RA6PPS          equ	3816	;# 
  1978   000EE9                     RA7PPS          equ	3817	;# 
  1979   000EEA                     RB0PPS          equ	3818	;# 
  1980   000EEB                     RB1PPS          equ	3819	;# 
  1981   000EEC                     RB2PPS          equ	3820	;# 
  1982   000EED                     RB3PPS          equ	3821	;# 
  1983   000EEE                     RB4PPS          equ	3822	;# 
  1984   000EEF                     RB5PPS          equ	3823	;# 
  1985   000EF0                     RB6PPS          equ	3824	;# 
  1986   000EF1                     RB7PPS          equ	3825	;# 
  1987   000EF2                     RC0PPS          equ	3826	;# 
  1988   000EF3                     RC1PPS          equ	3827	;# 
  1989   000EF4                     RC2PPS          equ	3828	;# 
  1990   000EF5                     RC3PPS          equ	3829	;# 
  1991   000EF6                     RC4PPS          equ	3830	;# 
  1992   000EF7                     RC5PPS          equ	3831	;# 
  1993   000EF8                     RC6PPS          equ	3832	;# 
  1994   000EF9                     RC7PPS          equ	3833	;# 
  1995   000F05                     IOCAF           equ	3845	;# 
  1996   000F06                     IOCAN           equ	3846	;# 
  1997   000F07                     IOCAP           equ	3847	;# 
  1998   000F08                     INLVLA          equ	3848	;# 
  1999   000F09                     SLRCONA         equ	3849	;# 
  2000   000F0A                     ODCONA          equ	3850	;# 
  2001   000F0B                     WPUA            equ	3851	;# 
  2002   000F0C                     ANSELA          equ	3852	;# 
  2003   000F0D                     IOCBF           equ	3853	;# 
  2004   000F0E                     IOCBN           equ	3854	;# 
  2005   000F0F                     IOCBP           equ	3855	;# 
  2006   000F10                     INLVLB          equ	3856	;# 
  2007   000F11                     SLRCONB         equ	3857	;# 
  2008   000F12                     ODCONB          equ	3858	;# 
  2009   000F13                     WPUB            equ	3859	;# 
  2010   000F14                     ANSELB          equ	3860	;# 
  2011   000F15                     IOCCF           equ	3861	;# 
  2012   000F16                     IOCCN           equ	3862	;# 
  2013   000F17                     IOCCP           equ	3863	;# 
  2014   000F18                     INLVLC          equ	3864	;# 
  2015   000F19                     SLRCONC         equ	3865	;# 
  2016   000F1A                     ODCONC          equ	3866	;# 
  2017   000F1B                     WPUC            equ	3867	;# 
  2018   000F1C                     ANSELC          equ	3868	;# 
  2019   000F22                     IOCEF           equ	3874	;# 
  2020   000F23                     IOCEN           equ	3875	;# 
  2021   000F24                     IOCEP           equ	3876	;# 
  2022   000F25                     INLVLE          equ	3877	;# 
  2023   000F28                     WPUE            equ	3880	;# 
  2024   000F2A                     HLVDCON0        equ	3882	;# 
  2025   000F2B                     HLVDCON1        equ	3883	;# 
  2026   000F2C                     FVRCON          equ	3884	;# 
  2027   000F2D                     ZCDCON          equ	3885	;# 
  2028   000F2E                     DAC1CON0        equ	3886	;# 
  2029   000F2F                     DAC1CON1        equ	3887	;# 
  2030   000F30                     CM2CON0         equ	3888	;# 
  2031   000F31                     CM2CON1         equ	3889	;# 
  2032   000F32                     CM2NCH          equ	3890	;# 
  2033   000F33                     CM2PCH          equ	3891	;# 
  2034   000F34                     CM1CON0         equ	3892	;# 
  2035   000F35                     CM1CON1         equ	3893	;# 
  2036   000F36                     CM1NCH          equ	3894	;# 
  2037   000F37                     CM1PCH          equ	3895	;# 
  2038   000F38                     CMOUT           equ	3896	;# 
  2039   000F39                     CLKRCON         equ	3897	;# 
  2040   000F3A                     CLKRCLK         equ	3898	;# 
  2041   000F3B                     CWG1CLK         equ	3899	;# 
  2042   000F3B                     CWG1CLKCON      equ	3899	;# 
  2043   000F3C                     CWG1ISM         equ	3900	;# 
  2044   000F3D                     CWG1DBR         equ	3901	;# 
  2045   000F3E                     CWG1DBF         equ	3902	;# 
  2046   000F3F                     CWG1CON0        equ	3903	;# 
  2047   000F40                     CWG1CON1        equ	3904	;# 
  2048   000F41                     CWG1AS0         equ	3905	;# 
  2049   000F42                     CWG1AS1         equ	3906	;# 
  2050   000F43                     CWG1STR         equ	3907	;# 
  2051   000F44                     SCANLADR        equ	3908	;# 
  2052   000F44                     SCANLADRL       equ	3908	;# 
  2053   000F45                     SCANLADRH       equ	3909	;# 
  2054   000F46                     SCANLADRU       equ	3910	;# 
  2055   000F47                     SCANHADR        equ	3911	;# 
  2056   000F47                     SCANHADRL       equ	3911	;# 
  2057   000F48                     SCANHADRH       equ	3912	;# 
  2058   000F49                     SCANHADRU       equ	3913	;# 
  2059   000F4A                     SCANCON0        equ	3914	;# 
  2060   000F4B                     SCANTRIG        equ	3915	;# 
  2061   000F4C                     MDCON0          equ	3916	;# 
  2062   000F4D                     MDCON1          equ	3917	;# 
  2063   000F4E                     MDSRC           equ	3918	;# 
  2064   000F4F                     MDCARL          equ	3919	;# 
  2065   000F50                     MDCARH          equ	3920	;# 
  2066   000F51                     ADACT           equ	3921	;# 
  2067   000F52                     ADCLK           equ	3922	;# 
  2068   000F53                     ADREF           equ	3923	;# 
  2069   000F54                     ADCON1          equ	3924	;# 
  2070   000F55                     ADCON2          equ	3925	;# 
  2071   000F56                     ADCON3          equ	3926	;# 
  2072   000F57                     ADACQ           equ	3927	;# 
  2073   000F58                     ADCAP           equ	3928	;# 
  2074   000F59                     ADPRE           equ	3929	;# 
  2075   000F5A                     ADPCH           equ	3930	;# 
  2076   000F5B                     ADCON0          equ	3931	;# 
  2077   000F5C                     ADPREV          equ	3932	;# 
  2078   000F5C                     ADPREVL         equ	3932	;# 
  2079   000F5D                     ADPREVH         equ	3933	;# 
  2080   000F5E                     ADRES           equ	3934	;# 
  2081   000F5E                     ADRESL          equ	3934	;# 
  2082   000F5F                     ADRESH          equ	3935	;# 
  2083   000F60                     ADSTAT          equ	3936	;# 
  2084   000F61                     ADRPT           equ	3937	;# 
  2085   000F62                     ADCNT           equ	3938	;# 
  2086   000F63                     ADSTPT          equ	3939	;# 
  2087   000F63                     ADSTPTL         equ	3939	;# 
  2088   000F64                     ADSTPTH         equ	3940	;# 
  2089   000F65                     ADLTH           equ	3941	;# 
  2090   000F65                     ADLTHL          equ	3941	;# 
  2091   000F66                     ADLTHH          equ	3942	;# 
  2092   000F67                     ADUTH           equ	3943	;# 
  2093   000F67                     ADUTHL          equ	3943	;# 
  2094   000F68                     ADUTHH          equ	3944	;# 
  2095   000F69                     ADERR           equ	3945	;# 
  2096   000F69                     ADERRL          equ	3945	;# 
  2097   000F6A                     ADERRH          equ	3946	;# 
  2098   000F6B                     ADACC           equ	3947	;# 
  2099   000F6B                     ADACCL          equ	3947	;# 
  2100   000F6C                     ADACCH          equ	3948	;# 
  2101   000F6D                     ADFLTR          equ	3949	;# 
  2102   000F6D                     ADFLTRL         equ	3949	;# 
  2103   000F6E                     ADFLTRH         equ	3950	;# 
  2104   000F6F                     CRCDATA         equ	3951	;# 
  2105   000F6F                     CRCDATL         equ	3951	;# 
  2106   000F70                     CRCDATH         equ	3952	;# 
  2107   000F71                     CRCACC          equ	3953	;# 
  2108   000F71                     CRCACCL         equ	3953	;# 
  2109   000F72                     CRCACCH         equ	3954	;# 
  2110   000F73                     CRCSHFT         equ	3955	;# 
  2111   000F73                     CRCSHIFTL       equ	3955	;# 
  2112   000F74                     CRCSHIFTH       equ	3956	;# 
  2113   000F75                     CRCXOR          equ	3957	;# 
  2114   000F75                     CRCXORL         equ	3957	;# 
  2115   000F76                     CRCXORH         equ	3958	;# 
  2116   000F77                     CRCCON0         equ	3959	;# 
  2117   000F78                     CRCCON1         equ	3960	;# 
  2118   000F79                     NVMADR          equ	3961	;# 
  2119   000F79                     NVMADRL         equ	3961	;# 
  2120   000F7A                     NVMADRH         equ	3962	;# 
  2121   000F7B                     NVMADRU         equ	3963	;# 
  2122   000F7C                     NVMDAT          equ	3964	;# 
  2123   000F7C                     NVMDATL         equ	3964	;# 
  2124   000F7D                     NVMDATH         equ	3965	;# 
  2125   000F7F                     NVMCON0         equ	3967	;# 
  2126   000F80                     NVMCON1         equ	3968	;# 
  2127   000F81                     NVMCON2         equ	3969	;# 
  2128   000F82                     LATA            equ	3970	;# 
  2129   000F83                     LATB            equ	3971	;# 
  2130   000F84                     LATC            equ	3972	;# 
  2131   000F87                     TRISA           equ	3975	;# 
  2132   000F87                     DDRA            equ	3975	;# 
  2133   000F88                     TRISB           equ	3976	;# 
  2134   000F88                     DDRB            equ	3976	;# 
  2135   000F89                     TRISC           equ	3977	;# 
  2136   000F89                     DDRC            equ	3977	;# 
  2137   000F8C                     PORTA           equ	3980	;# 
  2138   000F8D                     PORTB           equ	3981	;# 
  2139   000F8E                     PORTC           equ	3982	;# 
  2140   000F90                     PORTE           equ	3984	;# 
  2141   000F91                     SSP1BUF         equ	3985	;# 
  2142   000F92                     SSP1ADD         equ	3986	;# 
  2143   000F93                     SSP1MSK         equ	3987	;# 
  2144   000F94                     SSP1STAT        equ	3988	;# 
  2145   000F95                     SSP1CON1        equ	3989	;# 
  2146   000F96                     SSP1CON2        equ	3990	;# 
  2147   000F97                     SSP1CON3        equ	3991	;# 
  2148   000F98                     RC1REG          equ	3992	;# 
  2149   000F98                     RCREG           equ	3992	;# 
  2150   000F98                     RCREG1          equ	3992	;# 
  2151   000F99                     TX1REG          equ	3993	;# 
  2152   000F99                     TXREG1          equ	3993	;# 
  2153   000F99                     TXREG           equ	3993	;# 
  2154   000F9A                     SP1BRG          equ	3994	;# 
  2155   000F9A                     SPBRG           equ	3994	;# 
  2156   000F9A                     SP1BRGL         equ	3994	;# 
  2157   000F9A                     SPBRG1          equ	3994	;# 
  2158   000F9A                     SPBRGL          equ	3994	;# 
  2159   000F9B                     SP1BRGH         equ	3995	;# 
  2160   000F9B                     SPBRGH          equ	3995	;# 
  2161   000F9B                     SPBRGH1         equ	3995	;# 
  2162   000F9C                     RC1STA          equ	3996	;# 
  2163   000F9C                     RCSTA1          equ	3996	;# 
  2164   000F9C                     RCSTA           equ	3996	;# 
  2165   000F9D                     TX1STA          equ	3997	;# 
  2166   000F9D                     TXSTA1          equ	3997	;# 
  2167   000F9D                     TXSTA           equ	3997	;# 
  2168   000F9E                     BAUD1CON        equ	3998	;# 
  2169   000F9E                     BAUDCON1        equ	3998	;# 
  2170   000F9E                     BAUDCTL1        equ	3998	;# 
  2171   000F9E                     BAUDCON         equ	3998	;# 
  2172   000F9E                     BAUDCTL         equ	3998	;# 
  2173   000F9F                     PWM4DC          equ	3999	;# 
  2174   000F9F                     PWM4DCL         equ	3999	;# 
  2175   000FA0                     PWM4DCH         equ	4000	;# 
  2176   000FA1                     PWM4CON         equ	4001	;# 
  2177   000FA2                     PWM3DC          equ	4002	;# 
  2178   000FA2                     PWM3DCL         equ	4002	;# 
  2179   000FA3                     PWM3DCH         equ	4003	;# 
  2180   000FA4                     PWM3CON         equ	4004	;# 
  2181   000FA5                     CCPR2           equ	4005	;# 
  2182   000FA5                     CCPR2L          equ	4005	;# 
  2183   000FA6                     CCPR2H          equ	4006	;# 
  2184   000FA7                     CCP2CON         equ	4007	;# 
  2185   000FA8                     CCP2CAP         equ	4008	;# 
  2186   000FA9                     CCPR1           equ	4009	;# 
  2187   000FA9                     CCPR1L          equ	4009	;# 
  2188   000FAA                     CCPR1H          equ	4010	;# 
  2189   000FAB                     CCP1CON         equ	4011	;# 
  2190   000FAC                     CCP1CAP         equ	4012	;# 
  2191   000FAD                     CCPTMRS         equ	4013	;# 
  2192   000FAE                     T6TMR           equ	4014	;# 
  2193   000FAE                     TMR6            equ	4014	;# 
  2194   000FAF                     T6PR            equ	4015	;# 
  2195   000FAF                     PR6             equ	4015	;# 
  2196   000FB0                     T6CON           equ	4016	;# 
  2197   000FB1                     T6HLT           equ	4017	;# 
  2198   000FB2                     T6CLKCON        equ	4018	;# 
  2199   000FB2                     T6CLK           equ	4018	;# 
  2200   000FB3                     T6RST           equ	4019	;# 
  2201   000FB4                     T4TMR           equ	4020	;# 
  2202   000FB4                     TMR4            equ	4020	;# 
  2203   000FB5                     T4PR            equ	4021	;# 
  2204   000FB5                     PR4             equ	4021	;# 
  2205   000FB6                     T4CON           equ	4022	;# 
  2206   000FB7                     T4HLT           equ	4023	;# 
  2207   000FB8                     T4CLKCON        equ	4024	;# 
  2208   000FB8                     T4CLK           equ	4024	;# 
  2209   000FB9                     T4RST           equ	4025	;# 
  2210   000FBA                     T2TMR           equ	4026	;# 
  2211   000FBA                     TMR2            equ	4026	;# 
  2212   000FBB                     T2PR            equ	4027	;# 
  2213   000FBB                     PR2             equ	4027	;# 
  2214   000FBC                     T2CON           equ	4028	;# 
  2215   000FBD                     T2HLT           equ	4029	;# 
  2216   000FBE                     T2CLKCON        equ	4030	;# 
  2217   000FBE                     T2CLK           equ	4030	;# 
  2218   000FBF                     T2RST           equ	4031	;# 
  2219   000FC0                     TMR5            equ	4032	;# 
  2220   000FC0                     TMR5L           equ	4032	;# 
  2221   000FC1                     TMR5H           equ	4033	;# 
  2222   000FC2                     T5CON           equ	4034	;# 
  2223   000FC2                     TMR5CON         equ	4034	;# 
  2224   000FC3                     T5GCON          equ	4035	;# 
  2225   000FC3                     TMR5GCON        equ	4035	;# 
  2226   000FC4                     T5GATE          equ	4036	;# 
  2227   000FC4                     TMR5GATE        equ	4036	;# 
  2228   000FC5                     T5CLK           equ	4037	;# 
  2229   000FC5                     TMR5CLK         equ	4037	;# 
  2230   000FC5                     PR5             equ	4037	;# 
  2231   000FC6                     TMR3            equ	4038	;# 
  2232   000FC6                     TMR3L           equ	4038	;# 
  2233   000FC7                     TMR3H           equ	4039	;# 
  2234   000FC8                     T3CON           equ	4040	;# 
  2235   000FC8                     TMR3CON         equ	4040	;# 
  2236   000FC9                     T3GCON          equ	4041	;# 
  2237   000FC9                     TMR3GCON        equ	4041	;# 
  2238   000FCA                     T3GATE          equ	4042	;# 
  2239   000FCA                     TMR3GATE        equ	4042	;# 
  2240   000FCB                     T3CLK           equ	4043	;# 
  2241   000FCB                     TMR3CLK         equ	4043	;# 
  2242   000FCB                     PR3             equ	4043	;# 
  2243   000FCC                     TMR1            equ	4044	;# 
  2244   000FCC                     TMR1L           equ	4044	;# 
  2245   000FCD                     TMR1H           equ	4045	;# 
  2246   000FCE                     T1CON           equ	4046	;# 
  2247   000FCE                     TMR1CON         equ	4046	;# 
  2248   000FCF                     T1GCON          equ	4047	;# 
  2249   000FCF                     TMR1GCON        equ	4047	;# 
  2250   000FD0                     T1GATE          equ	4048	;# 
  2251   000FD0                     TMR1GATE        equ	4048	;# 
  2252   000FD1                     T1CLK           equ	4049	;# 
  2253   000FD1                     TMR1CLK         equ	4049	;# 
  2254   000FD1                     PR1             equ	4049	;# 
  2255   000FD2                     TMR0L           equ	4050	;# 
  2256   000FD2                     TMR0            equ	4050	;# 
  2257   000FD3                     TMR0H           equ	4051	;# 
  2258   000FD3                     PR0             equ	4051	;# 
  2259   000FD4                     T0CON0          equ	4052	;# 
  2260   000FD5                     T0CON1          equ	4053	;# 
  2261   000FD6                     PCON1           equ	4054	;# 
  2262   000FD7                     PCON0           equ	4055	;# 
  2263   000FD8                     STATUS          equ	4056	;# 
  2264   000FD9                     FSR2            equ	4057	;# 
  2265   000FD9                     FSR2L           equ	4057	;# 
  2266   000FDA                     FSR2H           equ	4058	;# 
  2267   000FDB                     PLUSW2          equ	4059	;# 
  2268   000FDC                     PREINC2         equ	4060	;# 
  2269   000FDD                     POSTDEC2        equ	4061	;# 
  2270   000FDE                     POSTINC2        equ	4062	;# 
  2271   000FDF                     INDF2           equ	4063	;# 
  2272   000FE0                     BSR             equ	4064	;# 
  2273   000FE1                     FSR1            equ	4065	;# 
  2274   000FE1                     FSR1L           equ	4065	;# 
  2275   000FE2                     FSR1H           equ	4066	;# 
  2276   000FE3                     PLUSW1          equ	4067	;# 
  2277   000FE4                     PREINC1         equ	4068	;# 
  2278   000FE5                     POSTDEC1        equ	4069	;# 
  2279   000FE6                     POSTINC1        equ	4070	;# 
  2280   000FE7                     INDF1           equ	4071	;# 
  2281   000FE8                     WREG            equ	4072	;# 
  2282   000FE9                     FSR0            equ	4073	;# 
  2283   000FE9                     FSR0L           equ	4073	;# 
  2284   000FEA                     FSR0H           equ	4074	;# 
  2285   000FEB                     PLUSW0          equ	4075	;# 
  2286   000FEC                     PREINC0         equ	4076	;# 
  2287   000FED                     POSTDEC0        equ	4077	;# 
  2288   000FEE                     POSTINC0        equ	4078	;# 
  2289   000FEF                     INDF0           equ	4079	;# 
  2290   000FF2                     INTCON          equ	4082	;# 
  2291   000FF3                     PROD            equ	4083	;# 
  2292   000FF3                     PRODL           equ	4083	;# 
  2293   000FF4                     PRODH           equ	4084	;# 
  2294   000FF5                     TABLAT          equ	4085	;# 
  2295   000FF6                     TBLPTR          equ	4086	;# 
  2296   000FF6                     TBLPTRL         equ	4086	;# 
  2297   000FF7                     TBLPTRH         equ	4087	;# 
  2298   000FF8                     TBLPTRU         equ	4088	;# 
  2299   000FF9                     PCLAT           equ	4089	;# 
  2300   000FF9                     PCL             equ	4089	;# 
  2301   000FFA                     PCLATH          equ	4090	;# 
  2302   000FFB                     PCLATU          equ	4091	;# 
  2303   000FFC                     STKPTR          equ	4092	;# 
  2304   000FFD                     TOS             equ	4093	;# 
  2305   000FFD                     TOSL            equ	4093	;# 
  2306   000FFE                     TOSH            equ	4094	;# 
  2307   000FFF                     TOSU            equ	4095	;# 
  2308   000E1F                     CLCIN0PPS       equ	3615	;# 
  2309   000E20                     CLCIN1PPS       equ	3616	;# 
  2310   000E21                     CLCIN2PPS       equ	3617	;# 
  2311   000E22                     CLCIN3PPS       equ	3618	;# 
  2312   000E23                     CLCIN4PPS       equ	3619	;# 
  2313   000E24                     CLCIN5PPS       equ	3620	;# 
  2314   000E25                     CLCIN6PPS       equ	3621	;# 
  2315   000E26                     CLCIN7PPS       equ	3622	;# 
  2316   000E27                     CLC1CON         equ	3623	;# 
  2317   000E28                     CLC1POL         equ	3624	;# 
  2318   000E29                     CLC1SEL0        equ	3625	;# 
  2319   000E2A                     CLC1SEL1        equ	3626	;# 
  2320   000E2B                     CLC1SEL2        equ	3627	;# 
  2321   000E2C                     CLC1SEL3        equ	3628	;# 
  2322   000E2D                     CLC1GLS0        equ	3629	;# 
  2323   000E2E                     CLC1GLS1        equ	3630	;# 
  2324   000E2F                     CLC1GLS2        equ	3631	;# 
  2325   000E30                     CLC1GLS3        equ	3632	;# 
  2326   000E31                     CLC2CON         equ	3633	;# 
  2327   000E32                     CLC2POL         equ	3634	;# 
  2328   000E33                     CLC2SEL0        equ	3635	;# 
  2329   000E34                     CLC2SEL1        equ	3636	;# 
  2330   000E35                     CLC2SEL2        equ	3637	;# 
  2331   000E36                     CLC2SEL3        equ	3638	;# 
  2332   000E37                     CLC2GLS0        equ	3639	;# 
  2333   000E38                     CLC2GLS1        equ	3640	;# 
  2334   000E39                     CLC2GLS2        equ	3641	;# 
  2335   000E3A                     CLC2GLS3        equ	3642	;# 
  2336   000E3B                     CLC3CON         equ	3643	;# 
  2337   000E3C                     CLC3POL         equ	3644	;# 
  2338   000E3D                     CLC3SEL0        equ	3645	;# 
  2339   000E3E                     CLC3SEL1        equ	3646	;# 
  2340   000E3F                     CLC3SEL2        equ	3647	;# 
  2341   000E40                     CLC3SEL3        equ	3648	;# 
  2342   000E41                     CLC3GLS0        equ	3649	;# 
  2343   000E42                     CLC3GLS1        equ	3650	;# 
  2344   000E43                     CLC3GLS2        equ	3651	;# 
  2345   000E44                     CLC3GLS3        equ	3652	;# 
  2346   000E45                     CLC4CON         equ	3653	;# 
  2347   000E46                     CLC4POL         equ	3654	;# 
  2348   000E47                     CLC4SEL0        equ	3655	;# 
  2349   000E48                     CLC4SEL1        equ	3656	;# 
  2350   000E49                     CLC4SEL2        equ	3657	;# 
  2351   000E4A                     CLC4SEL3        equ	3658	;# 
  2352   000E4B                     CLC4GLS0        equ	3659	;# 
  2353   000E4C                     CLC4GLS1        equ	3660	;# 
  2354   000E4D                     CLC4GLS2        equ	3661	;# 
  2355   000E4E                     CLC4GLS3        equ	3662	;# 
  2356   000E4F                     CLC5CON         equ	3663	;# 
  2357   000E50                     CLC5POL         equ	3664	;# 
  2358   000E51                     CLC5SEL0        equ	3665	;# 
  2359   000E52                     CLC5SEL1        equ	3666	;# 
  2360   000E53                     CLC5SEL2        equ	3667	;# 
  2361   000E54                     CLC5SEL3        equ	3668	;# 
  2362   000E55                     CLC5GLS0        equ	3669	;# 
  2363   000E56                     CLC5GLS1        equ	3670	;# 
  2364   000E57                     CLC5GLS2        equ	3671	;# 
  2365   000E58                     CLC5GLS3        equ	3672	;# 
  2366   000E59                     CLC6CON         equ	3673	;# 
  2367   000E5A                     CLC6POL         equ	3674	;# 
  2368   000E5B                     CLC6SEL0        equ	3675	;# 
  2369   000E5C                     CLC6SEL1        equ	3676	;# 
  2370   000E5D                     CLC6SEL2        equ	3677	;# 
  2371   000E5E                     CLC6SEL3        equ	3678	;# 
  2372   000E5F                     CLC6GLS0        equ	3679	;# 
  2373   000E60                     CLC6GLS1        equ	3680	;# 
  2374   000E61                     CLC6GLS2        equ	3681	;# 
  2375   000E62                     CLC6GLS3        equ	3682	;# 
  2376   000E63                     CLC7CON         equ	3683	;# 
  2377   000E64                     CLC7POL         equ	3684	;# 
  2378   000E65                     CLC7SEL0        equ	3685	;# 
  2379   000E66                     CLC7SEL1        equ	3686	;# 
  2380   000E67                     CLC7SEL2        equ	3687	;# 
  2381   000E68                     CLC7SEL3        equ	3688	;# 
  2382   000E69                     CLC7GLS0        equ	3689	;# 
  2383   000E6A                     CLC7GLS1        equ	3690	;# 
  2384   000E6B                     CLC7GLS2        equ	3691	;# 
  2385   000E6C                     CLC7GLS3        equ	3692	;# 
  2386   000E6D                     CLC8CON         equ	3693	;# 
  2387   000E6E                     CLC8POL         equ	3694	;# 
  2388   000E6F                     CLC8SEL0        equ	3695	;# 
  2389   000E70                     CLC8SEL1        equ	3696	;# 
  2390   000E71                     CLC8SEL2        equ	3697	;# 
  2391   000E72                     CLC8SEL3        equ	3698	;# 
  2392   000E73                     CLC8GLS0        equ	3699	;# 
  2393   000E74                     CLC8GLS1        equ	3700	;# 
  2394   000E75                     CLC8GLS2        equ	3701	;# 
  2395   000E76                     CLC8GLS3        equ	3702	;# 
  2396   000E77                     CLCDATA         equ	3703	;# 
  2397   000E88                     RX2PPS          equ	3720	;# 
  2398   000E88                     RXDT2PPS        equ	3720	;# 
  2399   000E89                     CK2PPS          equ	3721	;# 
  2400   000E89                     TXCK2PPS        equ	3721	;# 
  2401   000E89                     TX2PPS          equ	3721	;# 
  2402   000E8A                     SSP2CLKPPS      equ	3722	;# 
  2403   000E8B                     SSP2DATPPS      equ	3723	;# 
  2404   000E8C                     SSP2SSPPS       equ	3724	;# 
  2405   000E8D                     SSP2BUF         equ	3725	;# 
  2406   000E8E                     SSP2ADD         equ	3726	;# 
  2407   000E8F                     SSP2MSK         equ	3727	;# 
  2408   000E90                     SSP2STAT        equ	3728	;# 
  2409   000E91                     SSP2CON1        equ	3729	;# 
  2410   000E92                     SSP2CON2        equ	3730	;# 
  2411   000E93                     SSP2CON3        equ	3731	;# 
  2412   000E94                     RC2REG          equ	3732	;# 
  2413   000E94                     RCREG2          equ	3732	;# 
  2414   000E95                     TX2REG          equ	3733	;# 
  2415   000E95                     TXREG2          equ	3733	;# 
  2416   000E96                     SP2BRG          equ	3734	;# 
  2417   000E96                     SP2BRGL         equ	3734	;# 
  2418   000E96                     SPBRG2          equ	3734	;# 
  2419   000E97                     SP2BRGH         equ	3735	;# 
  2420   000E97                     SPBRGH2         equ	3735	;# 
  2421   000E98                     RC2STA          equ	3736	;# 
  2422   000E98                     RCSTA2          equ	3736	;# 
  2423   000E99                     TX2STA          equ	3737	;# 
  2424   000E99                     TXSTA2          equ	3737	;# 
  2425   000E9A                     BAUD2CON        equ	3738	;# 
  2426   000E9A                     BAUDCON2        equ	3738	;# 
  2427   000E9A                     BAUDCTL2        equ	3738	;# 
  2428   000E9B                     PPSLOCK         equ	3739	;# 
  2429   000E9C                     INT0PPS         equ	3740	;# 
  2430   000E9D                     INT1PPS         equ	3741	;# 
  2431   000E9E                     INT2PPS         equ	3742	;# 
  2432   000E9F                     T0CKIPPS        equ	3743	;# 
  2433   000EA0                     T1CKIPPS        equ	3744	;# 
  2434   000EA1                     T1GPPS          equ	3745	;# 
  2435   000EA2                     T3CKIPPS        equ	3746	;# 
  2436   000EA3                     T3GPPS          equ	3747	;# 
  2437   000EA4                     T5CKIPPS        equ	3748	;# 
  2438   000EA5                     T5GPPS          equ	3749	;# 
  2439   000EA6                     T2INPPS         equ	3750	;# 
  2440   000EA7                     T4INPPS         equ	3751	;# 
  2441   000EA8                     T6INPPS         equ	3752	;# 
  2442   000EA9                     ADACTPPS        equ	3753	;# 
  2443   000EAA                     CCP1PPS         equ	3754	;# 
  2444   000EAB                     CCP2PPS         equ	3755	;# 
  2445   000EAC                     CWG1PPS         equ	3756	;# 
  2446   000EAC                     CWGPPS          equ	3756	;# 
  2447   000EAC                     CWG1INPPS       equ	3756	;# 
  2448   000EAC                     CWGINPPS        equ	3756	;# 
  2449   000EAD                     MDCARLPPS       equ	3757	;# 
  2450   000EAE                     MDCARHPPS       equ	3758	;# 
  2451   000EAF                     MDSRCPPS        equ	3759	;# 
  2452   000EB0                     RX1PPS          equ	3760	;# 
  2453   000EB0                     RXPPS           equ	3760	;# 
  2454   000EB0                     RXDT1PPS        equ	3760	;# 
  2455   000EB1                     CK1PPS          equ	3761	;# 
  2456   000EB1                     TXPPS           equ	3761	;# 
  2457   000EB1                     CKPPS           equ	3761	;# 
  2458   000EB1                     TX1PPS          equ	3761	;# 
  2459   000EB1                     TXCK1PPS        equ	3761	;# 
  2460   000EB2                     SSP1CLKPPS      equ	3762	;# 
  2461   000EB2                     SSPCLKPPS       equ	3762	;# 
  2462   000EB3                     SSP1DATPPS      equ	3763	;# 
  2463   000EB3                     SSPDATPPS       equ	3763	;# 
  2464   000EB4                     SSP1SSPPS       equ	3764	;# 
  2465   000EB4                     SSPSSPPS        equ	3764	;# 
  2466   000EB5                     IPR0            equ	3765	;# 
  2467   000EB6                     IPR1            equ	3766	;# 
  2468   000EB7                     IPR2            equ	3767	;# 
  2469   000EB8                     IPR3            equ	3768	;# 
  2470   000EB9                     IPR4            equ	3769	;# 
  2471   000EBA                     IPR5            equ	3770	;# 
  2472   000EBB                     IPR6            equ	3771	;# 
  2473   000EBC                     IPR7            equ	3772	;# 
  2474   000EBD                     PIE0            equ	3773	;# 
  2475   000EBE                     PIE1            equ	3774	;# 
  2476   000EBF                     PIE2            equ	3775	;# 
  2477   000EC0                     PIE3            equ	3776	;# 
  2478   000EC1                     PIE4            equ	3777	;# 
  2479   000EC2                     PIE5            equ	3778	;# 
  2480   000EC3                     PIE6            equ	3779	;# 
  2481   000EC4                     PIE7            equ	3780	;# 
  2482   000EC5                     PIR0            equ	3781	;# 
  2483   000EC6                     PIR1            equ	3782	;# 
  2484   000EC7                     PIR2            equ	3783	;# 
  2485   000EC8                     PIR3            equ	3784	;# 
  2486   000EC9                     PIR4            equ	3785	;# 
  2487   000ECA                     PIR5            equ	3786	;# 
  2488   000ECB                     PIR6            equ	3787	;# 
  2489   000ECC                     PIR7            equ	3788	;# 
  2490   000ECD                     WDTCON0         equ	3789	;# 
  2491   000ECE                     WDTCON1         equ	3790	;# 
  2492   000ECF                     WDTPSL          equ	3791	;# 
  2493   000ED0                     WDTPSH          equ	3792	;# 
  2494   000ED1                     WDTTMR          equ	3793	;# 
  2495   000ED2                     CPUDOZE         equ	3794	;# 
  2496   000ED3                     OSCCON1         equ	3795	;# 
  2497   000ED4                     OSCCON2         equ	3796	;# 
  2498   000ED5                     OSCCON3         equ	3797	;# 
  2499   000ED6                     OSCSTAT         equ	3798	;# 
  2500   000ED6                     OSCSTAT1        equ	3798	;# 
  2501   000ED7                     OSCEN           equ	3799	;# 
  2502   000ED8                     OSCTUNE         equ	3800	;# 
  2503   000ED9                     OSCFRQ          equ	3801	;# 
  2504   000ED9                     OSCFREQ         equ	3801	;# 
  2505   000EDA                     VREGCON         equ	3802	;# 
  2506   000EDB                     BORCON          equ	3803	;# 
  2507   000EDC                     PMD0            equ	3804	;# 
  2508   000EDD                     PMD1            equ	3805	;# 
  2509   000EDE                     PMD2            equ	3806	;# 
  2510   000EDF                     PMD3            equ	3807	;# 
  2511   000EE0                     PMD4            equ	3808	;# 
  2512   000EE1                     PMD5            equ	3809	;# 
  2513   000EE2                     RA0PPS          equ	3810	;# 
  2514   000EE3                     RA1PPS          equ	3811	;# 
  2515   000EE4                     RA2PPS          equ	3812	;# 
  2516   000EE5                     RA3PPS          equ	3813	;# 
  2517   000EE6                     RA4PPS          equ	3814	;# 
  2518   000EE7                     RA5PPS          equ	3815	;# 
  2519   000EE8                     RA6PPS          equ	3816	;# 
  2520   000EE9                     RA7PPS          equ	3817	;# 
  2521   000EEA                     RB0PPS          equ	3818	;# 
  2522   000EEB                     RB1PPS          equ	3819	;# 
  2523   000EEC                     RB2PPS          equ	3820	;# 
  2524   000EED                     RB3PPS          equ	3821	;# 
  2525   000EEE                     RB4PPS          equ	3822	;# 
  2526   000EEF                     RB5PPS          equ	3823	;# 
  2527   000EF0                     RB6PPS          equ	3824	;# 
  2528   000EF1                     RB7PPS          equ	3825	;# 
  2529   000EF2                     RC0PPS          equ	3826	;# 
  2530   000EF3                     RC1PPS          equ	3827	;# 
  2531   000EF4                     RC2PPS          equ	3828	;# 
  2532   000EF5                     RC3PPS          equ	3829	;# 
  2533   000EF6                     RC4PPS          equ	3830	;# 
  2534   000EF7                     RC5PPS          equ	3831	;# 
  2535   000EF8                     RC6PPS          equ	3832	;# 
  2536   000EF9                     RC7PPS          equ	3833	;# 
  2537   000F05                     IOCAF           equ	3845	;# 
  2538   000F06                     IOCAN           equ	3846	;# 
  2539   000F07                     IOCAP           equ	3847	;# 
  2540   000F08                     INLVLA          equ	3848	;# 
  2541   000F09                     SLRCONA         equ	3849	;# 
  2542   000F0A                     ODCONA          equ	3850	;# 
  2543   000F0B                     WPUA            equ	3851	;# 
  2544   000F0C                     ANSELA          equ	3852	;# 
  2545   000F0D                     IOCBF           equ	3853	;# 
  2546   000F0E                     IOCBN           equ	3854	;# 
  2547   000F0F                     IOCBP           equ	3855	;# 
  2548   000F10                     INLVLB          equ	3856	;# 
  2549   000F11                     SLRCONB         equ	3857	;# 
  2550   000F12                     ODCONB          equ	3858	;# 
  2551   000F13                     WPUB            equ	3859	;# 
  2552   000F14                     ANSELB          equ	3860	;# 
  2553   000F15                     IOCCF           equ	3861	;# 
  2554   000F16                     IOCCN           equ	3862	;# 
  2555   000F17                     IOCCP           equ	3863	;# 
  2556   000F18                     INLVLC          equ	3864	;# 
  2557   000F19                     SLRCONC         equ	3865	;# 
  2558   000F1A                     ODCONC          equ	3866	;# 
  2559   000F1B                     WPUC            equ	3867	;# 
  2560   000F1C                     ANSELC          equ	3868	;# 
  2561   000F22                     IOCEF           equ	3874	;# 
  2562   000F23                     IOCEN           equ	3875	;# 
  2563   000F24                     IOCEP           equ	3876	;# 
  2564   000F25                     INLVLE          equ	3877	;# 
  2565   000F28                     WPUE            equ	3880	;# 
  2566   000F2A                     HLVDCON0        equ	3882	;# 
  2567   000F2B                     HLVDCON1        equ	3883	;# 
  2568   000F2C                     FVRCON          equ	3884	;# 
  2569   000F2D                     ZCDCON          equ	3885	;# 
  2570   000F2E                     DAC1CON0        equ	3886	;# 
  2571   000F2F                     DAC1CON1        equ	3887	;# 
  2572   000F30                     CM2CON0         equ	3888	;# 
  2573   000F31                     CM2CON1         equ	3889	;# 
  2574   000F32                     CM2NCH          equ	3890	;# 
  2575   000F33                     CM2PCH          equ	3891	;# 
  2576   000F34                     CM1CON0         equ	3892	;# 
  2577   000F35                     CM1CON1         equ	3893	;# 
  2578   000F36                     CM1NCH          equ	3894	;# 
  2579   000F37                     CM1PCH          equ	3895	;# 
  2580   000F38                     CMOUT           equ	3896	;# 
  2581   000F39                     CLKRCON         equ	3897	;# 
  2582   000F3A                     CLKRCLK         equ	3898	;# 
  2583   000F3B                     CWG1CLK         equ	3899	;# 
  2584   000F3B                     CWG1CLKCON      equ	3899	;# 
  2585   000F3C                     CWG1ISM         equ	3900	;# 
  2586   000F3D                     CWG1DBR         equ	3901	;# 
  2587   000F3E                     CWG1DBF         equ	3902	;# 
  2588   000F3F                     CWG1CON0        equ	3903	;# 
  2589   000F40                     CWG1CON1        equ	3904	;# 
  2590   000F41                     CWG1AS0         equ	3905	;# 
  2591   000F42                     CWG1AS1         equ	3906	;# 
  2592   000F43                     CWG1STR         equ	3907	;# 
  2593   000F44                     SCANLADR        equ	3908	;# 
  2594   000F44                     SCANLADRL       equ	3908	;# 
  2595   000F45                     SCANLADRH       equ	3909	;# 
  2596   000F46                     SCANLADRU       equ	3910	;# 
  2597   000F47                     SCANHADR        equ	3911	;# 
  2598   000F47                     SCANHADRL       equ	3911	;# 
  2599   000F48                     SCANHADRH       equ	3912	;# 
  2600   000F49                     SCANHADRU       equ	3913	;# 
  2601   000F4A                     SCANCON0        equ	3914	;# 
  2602   000F4B                     SCANTRIG        equ	3915	;# 
  2603   000F4C                     MDCON0          equ	3916	;# 
  2604   000F4D                     MDCON1          equ	3917	;# 
  2605   000F4E                     MDSRC           equ	3918	;# 
  2606   000F4F                     MDCARL          equ	3919	;# 
  2607   000F50                     MDCARH          equ	3920	;# 
  2608   000F51                     ADACT           equ	3921	;# 
  2609   000F52                     ADCLK           equ	3922	;# 
  2610   000F53                     ADREF           equ	3923	;# 
  2611   000F54                     ADCON1          equ	3924	;# 
  2612   000F55                     ADCON2          equ	3925	;# 
  2613   000F56                     ADCON3          equ	3926	;# 
  2614   000F57                     ADACQ           equ	3927	;# 
  2615   000F58                     ADCAP           equ	3928	;# 
  2616   000F59                     ADPRE           equ	3929	;# 
  2617   000F5A                     ADPCH           equ	3930	;# 
  2618   000F5B                     ADCON0          equ	3931	;# 
  2619   000F5C                     ADPREV          equ	3932	;# 
  2620   000F5C                     ADPREVL         equ	3932	;# 
  2621   000F5D                     ADPREVH         equ	3933	;# 
  2622   000F5E                     ADRES           equ	3934	;# 
  2623   000F5E                     ADRESL          equ	3934	;# 
  2624   000F5F                     ADRESH          equ	3935	;# 
  2625   000F60                     ADSTAT          equ	3936	;# 
  2626   000F61                     ADRPT           equ	3937	;# 
  2627   000F62                     ADCNT           equ	3938	;# 
  2628   000F63                     ADSTPT          equ	3939	;# 
  2629   000F63                     ADSTPTL         equ	3939	;# 
  2630   000F64                     ADSTPTH         equ	3940	;# 
  2631   000F65                     ADLTH           equ	3941	;# 
  2632   000F65                     ADLTHL          equ	3941	;# 
  2633   000F66                     ADLTHH          equ	3942	;# 
  2634   000F67                     ADUTH           equ	3943	;# 
  2635   000F67                     ADUTHL          equ	3943	;# 
  2636   000F68                     ADUTHH          equ	3944	;# 
  2637   000F69                     ADERR           equ	3945	;# 
  2638   000F69                     ADERRL          equ	3945	;# 
  2639   000F6A                     ADERRH          equ	3946	;# 
  2640   000F6B                     ADACC           equ	3947	;# 
  2641   000F6B                     ADACCL          equ	3947	;# 
  2642   000F6C                     ADACCH          equ	3948	;# 
  2643   000F6D                     ADFLTR          equ	3949	;# 
  2644   000F6D                     ADFLTRL         equ	3949	;# 
  2645   000F6E                     ADFLTRH         equ	3950	;# 
  2646   000F6F                     CRCDATA         equ	3951	;# 
  2647   000F6F                     CRCDATL         equ	3951	;# 
  2648   000F70                     CRCDATH         equ	3952	;# 
  2649   000F71                     CRCACC          equ	3953	;# 
  2650   000F71                     CRCACCL         equ	3953	;# 
  2651   000F72                     CRCACCH         equ	3954	;# 
  2652   000F73                     CRCSHFT         equ	3955	;# 
  2653   000F73                     CRCSHIFTL       equ	3955	;# 
  2654   000F74                     CRCSHIFTH       equ	3956	;# 
  2655   000F75                     CRCXOR          equ	3957	;# 
  2656   000F75                     CRCXORL         equ	3957	;# 
  2657   000F76                     CRCXORH         equ	3958	;# 
  2658   000F77                     CRCCON0         equ	3959	;# 
  2659   000F78                     CRCCON1         equ	3960	;# 
  2660   000F79                     NVMADR          equ	3961	;# 
  2661   000F79                     NVMADRL         equ	3961	;# 
  2662   000F7A                     NVMADRH         equ	3962	;# 
  2663   000F7B                     NVMADRU         equ	3963	;# 
  2664   000F7C                     NVMDAT          equ	3964	;# 
  2665   000F7C                     NVMDATL         equ	3964	;# 
  2666   000F7D                     NVMDATH         equ	3965	;# 
  2667   000F7F                     NVMCON0         equ	3967	;# 
  2668   000F80                     NVMCON1         equ	3968	;# 
  2669   000F81                     NVMCON2         equ	3969	;# 
  2670   000F82                     LATA            equ	3970	;# 
  2671   000F83                     LATB            equ	3971	;# 
  2672   000F84                     LATC            equ	3972	;# 
  2673   000F87                     TRISA           equ	3975	;# 
  2674   000F87                     DDRA            equ	3975	;# 
  2675   000F88                     TRISB           equ	3976	;# 
  2676   000F88                     DDRB            equ	3976	;# 
  2677   000F89                     TRISC           equ	3977	;# 
  2678   000F89                     DDRC            equ	3977	;# 
  2679   000F8C                     PORTA           equ	3980	;# 
  2680   000F8D                     PORTB           equ	3981	;# 
  2681   000F8E                     PORTC           equ	3982	;# 
  2682   000F90                     PORTE           equ	3984	;# 
  2683   000F91                     SSP1BUF         equ	3985	;# 
  2684   000F92                     SSP1ADD         equ	3986	;# 
  2685   000F93                     SSP1MSK         equ	3987	;# 
  2686   000F94                     SSP1STAT        equ	3988	;# 
  2687   000F95                     SSP1CON1        equ	3989	;# 
  2688   000F96                     SSP1CON2        equ	3990	;# 
  2689   000F97                     SSP1CON3        equ	3991	;# 
  2690   000F98                     RC1REG          equ	3992	;# 
  2691   000F98                     RCREG           equ	3992	;# 
  2692   000F98                     RCREG1          equ	3992	;# 
  2693   000F99                     TX1REG          equ	3993	;# 
  2694   000F99                     TXREG1          equ	3993	;# 
  2695   000F99                     TXREG           equ	3993	;# 
  2696   000F9A                     SP1BRG          equ	3994	;# 
  2697   000F9A                     SPBRG           equ	3994	;# 
  2698   000F9A                     SP1BRGL         equ	3994	;# 
  2699   000F9A                     SPBRG1          equ	3994	;# 
  2700   000F9A                     SPBRGL          equ	3994	;# 
  2701   000F9B                     SP1BRGH         equ	3995	;# 
  2702   000F9B                     SPBRGH          equ	3995	;# 
  2703   000F9B                     SPBRGH1         equ	3995	;# 
  2704   000F9C                     RC1STA          equ	3996	;# 
  2705   000F9C                     RCSTA1          equ	3996	;# 
  2706   000F9C                     RCSTA           equ	3996	;# 
  2707   000F9D                     TX1STA          equ	3997	;# 
  2708   000F9D                     TXSTA1          equ	3997	;# 
  2709   000F9D                     TXSTA           equ	3997	;# 
  2710   000F9E                     BAUD1CON        equ	3998	;# 
  2711   000F9E                     BAUDCON1        equ	3998	;# 
  2712   000F9E                     BAUDCTL1        equ	3998	;# 
  2713   000F9E                     BAUDCON         equ	3998	;# 
  2714   000F9E                     BAUDCTL         equ	3998	;# 
  2715   000F9F                     PWM4DC          equ	3999	;# 
  2716   000F9F                     PWM4DCL         equ	3999	;# 
  2717   000FA0                     PWM4DCH         equ	4000	;# 
  2718   000FA1                     PWM4CON         equ	4001	;# 
  2719   000FA2                     PWM3DC          equ	4002	;# 
  2720   000FA2                     PWM3DCL         equ	4002	;# 
  2721   000FA3                     PWM3DCH         equ	4003	;# 
  2722   000FA4                     PWM3CON         equ	4004	;# 
  2723   000FA5                     CCPR2           equ	4005	;# 
  2724   000FA5                     CCPR2L          equ	4005	;# 
  2725   000FA6                     CCPR2H          equ	4006	;# 
  2726   000FA7                     CCP2CON         equ	4007	;# 
  2727   000FA8                     CCP2CAP         equ	4008	;# 
  2728   000FA9                     CCPR1           equ	4009	;# 
  2729   000FA9                     CCPR1L          equ	4009	;# 
  2730   000FAA                     CCPR1H          equ	4010	;# 
  2731   000FAB                     CCP1CON         equ	4011	;# 
  2732   000FAC                     CCP1CAP         equ	4012	;# 
  2733   000FAD                     CCPTMRS         equ	4013	;# 
  2734   000FAE                     T6TMR           equ	4014	;# 
  2735   000FAE                     TMR6            equ	4014	;# 
  2736   000FAF                     T6PR            equ	4015	;# 
  2737   000FAF                     PR6             equ	4015	;# 
  2738   000FB0                     T6CON           equ	4016	;# 
  2739   000FB1                     T6HLT           equ	4017	;# 
  2740   000FB2                     T6CLKCON        equ	4018	;# 
  2741   000FB2                     T6CLK           equ	4018	;# 
  2742   000FB3                     T6RST           equ	4019	;# 
  2743   000FB4                     T4TMR           equ	4020	;# 
  2744   000FB4                     TMR4            equ	4020	;# 
  2745   000FB5                     T4PR            equ	4021	;# 
  2746   000FB5                     PR4             equ	4021	;# 
  2747   000FB6                     T4CON           equ	4022	;# 
  2748   000FB7                     T4HLT           equ	4023	;# 
  2749   000FB8                     T4CLKCON        equ	4024	;# 
  2750   000FB8                     T4CLK           equ	4024	;# 
  2751   000FB9                     T4RST           equ	4025	;# 
  2752   000FBA                     T2TMR           equ	4026	;# 
  2753   000FBA                     TMR2            equ	4026	;# 
  2754   000FBB                     T2PR            equ	4027	;# 
  2755   000FBB                     PR2             equ	4027	;# 
  2756   000FBC                     T2CON           equ	4028	;# 
  2757   000FBD                     T2HLT           equ	4029	;# 
  2758   000FBE                     T2CLKCON        equ	4030	;# 
  2759   000FBE                     T2CLK           equ	4030	;# 
  2760   000FBF                     T2RST           equ	4031	;# 
  2761   000FC0                     TMR5            equ	4032	;# 
  2762   000FC0                     TMR5L           equ	4032	;# 
  2763   000FC1                     TMR5H           equ	4033	;# 
  2764   000FC2                     T5CON           equ	4034	;# 
  2765   000FC2                     TMR5CON         equ	4034	;# 
  2766   000FC3                     T5GCON          equ	4035	;# 
  2767   000FC3                     TMR5GCON        equ	4035	;# 
  2768   000FC4                     T5GATE          equ	4036	;# 
  2769   000FC4                     TMR5GATE        equ	4036	;# 
  2770   000FC5                     T5CLK           equ	4037	;# 
  2771   000FC5                     TMR5CLK         equ	4037	;# 
  2772   000FC5                     PR5             equ	4037	;# 
  2773   000FC6                     TMR3            equ	4038	;# 
  2774   000FC6                     TMR3L           equ	4038	;# 
  2775   000FC7                     TMR3H           equ	4039	;# 
  2776   000FC8                     T3CON           equ	4040	;# 
  2777   000FC8                     TMR3CON         equ	4040	;# 
  2778   000FC9                     T3GCON          equ	4041	;# 
  2779   000FC9                     TMR3GCON        equ	4041	;# 
  2780   000FCA                     T3GATE          equ	4042	;# 
  2781   000FCA                     TMR3GATE        equ	4042	;# 
  2782   000FCB                     T3CLK           equ	4043	;# 
  2783   000FCB                     TMR3CLK         equ	4043	;# 
  2784   000FCB                     PR3             equ	4043	;# 
  2785   000FCC                     TMR1            equ	4044	;# 
  2786   000FCC                     TMR1L           equ	4044	;# 
  2787   000FCD                     TMR1H           equ	4045	;# 
  2788   000FCE                     T1CON           equ	4046	;# 
  2789   000FCE                     TMR1CON         equ	4046	;# 
  2790   000FCF                     T1GCON          equ	4047	;# 
  2791   000FCF                     TMR1GCON        equ	4047	;# 
  2792   000FD0                     T1GATE          equ	4048	;# 
  2793   000FD0                     TMR1GATE        equ	4048	;# 
  2794   000FD1                     T1CLK           equ	4049	;# 
  2795   000FD1                     TMR1CLK         equ	4049	;# 
  2796   000FD1                     PR1             equ	4049	;# 
  2797   000FD2                     TMR0L           equ	4050	;# 
  2798   000FD2                     TMR0            equ	4050	;# 
  2799   000FD3                     TMR0H           equ	4051	;# 
  2800   000FD3                     PR0             equ	4051	;# 
  2801   000FD4                     T0CON0          equ	4052	;# 
  2802   000FD5                     T0CON1          equ	4053	;# 
  2803   000FD6                     PCON1           equ	4054	;# 
  2804   000FD7                     PCON0           equ	4055	;# 
  2805   000FD8                     STATUS          equ	4056	;# 
  2806   000FD9                     FSR2            equ	4057	;# 
  2807   000FD9                     FSR2L           equ	4057	;# 
  2808   000FDA                     FSR2H           equ	4058	;# 
  2809   000FDB                     PLUSW2          equ	4059	;# 
  2810   000FDC                     PREINC2         equ	4060	;# 
  2811   000FDD                     POSTDEC2        equ	4061	;# 
  2812   000FDE                     POSTINC2        equ	4062	;# 
  2813   000FDF                     INDF2           equ	4063	;# 
  2814   000FE0                     BSR             equ	4064	;# 
  2815   000FE1                     FSR1            equ	4065	;# 
  2816   000FE1                     FSR1L           equ	4065	;# 
  2817   000FE2                     FSR1H           equ	4066	;# 
  2818   000FE3                     PLUSW1          equ	4067	;# 
  2819   000FE4                     PREINC1         equ	4068	;# 
  2820   000FE5                     POSTDEC1        equ	4069	;# 
  2821   000FE6                     POSTINC1        equ	4070	;# 
  2822   000FE7                     INDF1           equ	4071	;# 
  2823   000FE8                     WREG            equ	4072	;# 
  2824   000FE9                     FSR0            equ	4073	;# 
  2825   000FE9                     FSR0L           equ	4073	;# 
  2826   000FEA                     FSR0H           equ	4074	;# 
  2827   000FEB                     PLUSW0          equ	4075	;# 
  2828   000FEC                     PREINC0         equ	4076	;# 
  2829   000FED                     POSTDEC0        equ	4077	;# 
  2830   000FEE                     POSTINC0        equ	4078	;# 
  2831   000FEF                     INDF0           equ	4079	;# 
  2832   000FF2                     INTCON          equ	4082	;# 
  2833   000FF3                     PROD            equ	4083	;# 
  2834   000FF3                     PRODL           equ	4083	;# 
  2835   000FF4                     PRODH           equ	4084	;# 
  2836   000FF5                     TABLAT          equ	4085	;# 
  2837   000FF6                     TBLPTR          equ	4086	;# 
  2838   000FF6                     TBLPTRL         equ	4086	;# 
  2839   000FF7                     TBLPTRH         equ	4087	;# 
  2840   000FF8                     TBLPTRU         equ	4088	;# 
  2841   000FF9                     PCLAT           equ	4089	;# 
  2842   000FF9                     PCL             equ	4089	;# 
  2843   000FFA                     PCLATH          equ	4090	;# 
  2844   000FFB                     PCLATU          equ	4091	;# 
  2845   000FFC                     STKPTR          equ	4092	;# 
  2846   000FFD                     TOS             equ	4093	;# 
  2847   000FFD                     TOSL            equ	4093	;# 
  2848   000FFE                     TOSH            equ	4094	;# 
  2849   000FFF                     TOSU            equ	4095	;# 
  2850   000E1F                     CLCIN0PPS       equ	3615	;# 
  2851   000E20                     CLCIN1PPS       equ	3616	;# 
  2852   000E21                     CLCIN2PPS       equ	3617	;# 
  2853   000E22                     CLCIN3PPS       equ	3618	;# 
  2854   000E23                     CLCIN4PPS       equ	3619	;# 
  2855   000E24                     CLCIN5PPS       equ	3620	;# 
  2856   000E25                     CLCIN6PPS       equ	3621	;# 
  2857   000E26                     CLCIN7PPS       equ	3622	;# 
  2858   000E27                     CLC1CON         equ	3623	;# 
  2859   000E28                     CLC1POL         equ	3624	;# 
  2860   000E29                     CLC1SEL0        equ	3625	;# 
  2861   000E2A                     CLC1SEL1        equ	3626	;# 
  2862   000E2B                     CLC1SEL2        equ	3627	;# 
  2863   000E2C                     CLC1SEL3        equ	3628	;# 
  2864   000E2D                     CLC1GLS0        equ	3629	;# 
  2865   000E2E                     CLC1GLS1        equ	3630	;# 
  2866   000E2F                     CLC1GLS2        equ	3631	;# 
  2867   000E30                     CLC1GLS3        equ	3632	;# 
  2868   000E31                     CLC2CON         equ	3633	;# 
  2869   000E32                     CLC2POL         equ	3634	;# 
  2870   000E33                     CLC2SEL0        equ	3635	;# 
  2871   000E34                     CLC2SEL1        equ	3636	;# 
  2872   000E35                     CLC2SEL2        equ	3637	;# 
  2873   000E36                     CLC2SEL3        equ	3638	;# 
  2874   000E37                     CLC2GLS0        equ	3639	;# 
  2875   000E38                     CLC2GLS1        equ	3640	;# 
  2876   000E39                     CLC2GLS2        equ	3641	;# 
  2877   000E3A                     CLC2GLS3        equ	3642	;# 
  2878   000E3B                     CLC3CON         equ	3643	;# 
  2879   000E3C                     CLC3POL         equ	3644	;# 
  2880   000E3D                     CLC3SEL0        equ	3645	;# 
  2881   000E3E                     CLC3SEL1        equ	3646	;# 
  2882   000E3F                     CLC3SEL2        equ	3647	;# 
  2883   000E40                     CLC3SEL3        equ	3648	;# 
  2884   000E41                     CLC3GLS0        equ	3649	;# 
  2885   000E42                     CLC3GLS1        equ	3650	;# 
  2886   000E43                     CLC3GLS2        equ	3651	;# 
  2887   000E44                     CLC3GLS3        equ	3652	;# 
  2888   000E45                     CLC4CON         equ	3653	;# 
  2889   000E46                     CLC4POL         equ	3654	;# 
  2890   000E47                     CLC4SEL0        equ	3655	;# 
  2891   000E48                     CLC4SEL1        equ	3656	;# 
  2892   000E49                     CLC4SEL2        equ	3657	;# 
  2893   000E4A                     CLC4SEL3        equ	3658	;# 
  2894   000E4B                     CLC4GLS0        equ	3659	;# 
  2895   000E4C                     CLC4GLS1        equ	3660	;# 
  2896   000E4D                     CLC4GLS2        equ	3661	;# 
  2897   000E4E                     CLC4GLS3        equ	3662	;# 
  2898   000E4F                     CLC5CON         equ	3663	;# 
  2899   000E50                     CLC5POL         equ	3664	;# 
  2900   000E51                     CLC5SEL0        equ	3665	;# 
  2901   000E52                     CLC5SEL1        equ	3666	;# 
  2902   000E53                     CLC5SEL2        equ	3667	;# 
  2903   000E54                     CLC5SEL3        equ	3668	;# 
  2904   000E55                     CLC5GLS0        equ	3669	;# 
  2905   000E56                     CLC5GLS1        equ	3670	;# 
  2906   000E57                     CLC5GLS2        equ	3671	;# 
  2907   000E58                     CLC5GLS3        equ	3672	;# 
  2908   000E59                     CLC6CON         equ	3673	;# 
  2909   000E5A                     CLC6POL         equ	3674	;# 
  2910   000E5B                     CLC6SEL0        equ	3675	;# 
  2911   000E5C                     CLC6SEL1        equ	3676	;# 
  2912   000E5D                     CLC6SEL2        equ	3677	;# 
  2913   000E5E                     CLC6SEL3        equ	3678	;# 
  2914   000E5F                     CLC6GLS0        equ	3679	;# 
  2915   000E60                     CLC6GLS1        equ	3680	;# 
  2916   000E61                     CLC6GLS2        equ	3681	;# 
  2917   000E62                     CLC6GLS3        equ	3682	;# 
  2918   000E63                     CLC7CON         equ	3683	;# 
  2919   000E64                     CLC7POL         equ	3684	;# 
  2920   000E65                     CLC7SEL0        equ	3685	;# 
  2921   000E66                     CLC7SEL1        equ	3686	;# 
  2922   000E67                     CLC7SEL2        equ	3687	;# 
  2923   000E68                     CLC7SEL3        equ	3688	;# 
  2924   000E69                     CLC7GLS0        equ	3689	;# 
  2925   000E6A                     CLC7GLS1        equ	3690	;# 
  2926   000E6B                     CLC7GLS2        equ	3691	;# 
  2927   000E6C                     CLC7GLS3        equ	3692	;# 
  2928   000E6D                     CLC8CON         equ	3693	;# 
  2929   000E6E                     CLC8POL         equ	3694	;# 
  2930   000E6F                     CLC8SEL0        equ	3695	;# 
  2931   000E70                     CLC8SEL1        equ	3696	;# 
  2932   000E71                     CLC8SEL2        equ	3697	;# 
  2933   000E72                     CLC8SEL3        equ	3698	;# 
  2934   000E73                     CLC8GLS0        equ	3699	;# 
  2935   000E74                     CLC8GLS1        equ	3700	;# 
  2936   000E75                     CLC8GLS2        equ	3701	;# 
  2937   000E76                     CLC8GLS3        equ	3702	;# 
  2938   000E77                     CLCDATA         equ	3703	;# 
  2939   000E88                     RX2PPS          equ	3720	;# 
  2940   000E88                     RXDT2PPS        equ	3720	;# 
  2941   000E89                     CK2PPS          equ	3721	;# 
  2942   000E89                     TXCK2PPS        equ	3721	;# 
  2943   000E89                     TX2PPS          equ	3721	;# 
  2944   000E8A                     SSP2CLKPPS      equ	3722	;# 
  2945   000E8B                     SSP2DATPPS      equ	3723	;# 
  2946   000E8C                     SSP2SSPPS       equ	3724	;# 
  2947   000E8D                     SSP2BUF         equ	3725	;# 
  2948   000E8E                     SSP2ADD         equ	3726	;# 
  2949   000E8F                     SSP2MSK         equ	3727	;# 
  2950   000E90                     SSP2STAT        equ	3728	;# 
  2951   000E91                     SSP2CON1        equ	3729	;# 
  2952   000E92                     SSP2CON2        equ	3730	;# 
  2953   000E93                     SSP2CON3        equ	3731	;# 
  2954   000E94                     RC2REG          equ	3732	;# 
  2955   000E94                     RCREG2          equ	3732	;# 
  2956   000E95                     TX2REG          equ	3733	;# 
  2957   000E95                     TXREG2          equ	3733	;# 
  2958   000E96                     SP2BRG          equ	3734	;# 
  2959   000E96                     SP2BRGL         equ	3734	;# 
  2960   000E96                     SPBRG2          equ	3734	;# 
  2961   000E97                     SP2BRGH         equ	3735	;# 
  2962   000E97                     SPBRGH2         equ	3735	;# 
  2963   000E98                     RC2STA          equ	3736	;# 
  2964   000E98                     RCSTA2          equ	3736	;# 
  2965   000E99                     TX2STA          equ	3737	;# 
  2966   000E99                     TXSTA2          equ	3737	;# 
  2967   000E9A                     BAUD2CON        equ	3738	;# 
  2968   000E9A                     BAUDCON2        equ	3738	;# 
  2969   000E9A                     BAUDCTL2        equ	3738	;# 
  2970   000E9B                     PPSLOCK         equ	3739	;# 
  2971   000E9C                     INT0PPS         equ	3740	;# 
  2972   000E9D                     INT1PPS         equ	3741	;# 
  2973   000E9E                     INT2PPS         equ	3742	;# 
  2974   000E9F                     T0CKIPPS        equ	3743	;# 
  2975   000EA0                     T1CKIPPS        equ	3744	;# 
  2976   000EA1                     T1GPPS          equ	3745	;# 
  2977   000EA2                     T3CKIPPS        equ	3746	;# 
  2978   000EA3                     T3GPPS          equ	3747	;# 
  2979   000EA4                     T5CKIPPS        equ	3748	;# 
  2980   000EA5                     T5GPPS          equ	3749	;# 
  2981   000EA6                     T2INPPS         equ	3750	;# 
  2982   000EA7                     T4INPPS         equ	3751	;# 
  2983   000EA8                     T6INPPS         equ	3752	;# 
  2984   000EA9                     ADACTPPS        equ	3753	;# 
  2985   000EAA                     CCP1PPS         equ	3754	;# 
  2986   000EAB                     CCP2PPS         equ	3755	;# 
  2987   000EAC                     CWG1PPS         equ	3756	;# 
  2988   000EAC                     CWGPPS          equ	3756	;# 
  2989   000EAC                     CWG1INPPS       equ	3756	;# 
  2990   000EAC                     CWGINPPS        equ	3756	;# 
  2991   000EAD                     MDCARLPPS       equ	3757	;# 
  2992   000EAE                     MDCARHPPS       equ	3758	;# 
  2993   000EAF                     MDSRCPPS        equ	3759	;# 
  2994   000EB0                     RX1PPS          equ	3760	;# 
  2995   000EB0                     RXPPS           equ	3760	;# 
  2996   000EB0                     RXDT1PPS        equ	3760	;# 
  2997   000EB1                     CK1PPS          equ	3761	;# 
  2998   000EB1                     TXPPS           equ	3761	;# 
  2999   000EB1                     CKPPS           equ	3761	;# 
  3000   000EB1                     TX1PPS          equ	3761	;# 
  3001   000EB1                     TXCK1PPS        equ	3761	;# 
  3002   000EB2                     SSP1CLKPPS      equ	3762	;# 
  3003   000EB2                     SSPCLKPPS       equ	3762	;# 
  3004   000EB3                     SSP1DATPPS      equ	3763	;# 
  3005   000EB3                     SSPDATPPS       equ	3763	;# 
  3006   000EB4                     SSP1SSPPS       equ	3764	;# 
  3007   000EB4                     SSPSSPPS        equ	3764	;# 
  3008   000EB5                     IPR0            equ	3765	;# 
  3009   000EB6                     IPR1            equ	3766	;# 
  3010   000EB7                     IPR2            equ	3767	;# 
  3011   000EB8                     IPR3            equ	3768	;# 
  3012   000EB9                     IPR4            equ	3769	;# 
  3013   000EBA                     IPR5            equ	3770	;# 
  3014   000EBB                     IPR6            equ	3771	;# 
  3015   000EBC                     IPR7            equ	3772	;# 
  3016   000EBD                     PIE0            equ	3773	;# 
  3017   000EBE                     PIE1            equ	3774	;# 
  3018   000EBF                     PIE2            equ	3775	;# 
  3019   000EC0                     PIE3            equ	3776	;# 
  3020   000EC1                     PIE4            equ	3777	;# 
  3021   000EC2                     PIE5            equ	3778	;# 
  3022   000EC3                     PIE6            equ	3779	;# 
  3023   000EC4                     PIE7            equ	3780	;# 
  3024   000EC5                     PIR0            equ	3781	;# 
  3025   000EC6                     PIR1            equ	3782	;# 
  3026   000EC7                     PIR2            equ	3783	;# 
  3027   000EC8                     PIR3            equ	3784	;# 
  3028   000EC9                     PIR4            equ	3785	;# 
  3029   000ECA                     PIR5            equ	3786	;# 
  3030   000ECB                     PIR6            equ	3787	;# 
  3031   000ECC                     PIR7            equ	3788	;# 
  3032   000ECD                     WDTCON0         equ	3789	;# 
  3033   000ECE                     WDTCON1         equ	3790	;# 
  3034   000ECF                     WDTPSL          equ	3791	;# 
  3035   000ED0                     WDTPSH          equ	3792	;# 
  3036   000ED1                     WDTTMR          equ	3793	;# 
  3037   000ED2                     CPUDOZE         equ	3794	;# 
  3038   000ED3                     OSCCON1         equ	3795	;# 
  3039   000ED4                     OSCCON2         equ	3796	;# 
  3040   000ED5                     OSCCON3         equ	3797	;# 
  3041   000ED6                     OSCSTAT         equ	3798	;# 
  3042   000ED6                     OSCSTAT1        equ	3798	;# 
  3043   000ED7                     OSCEN           equ	3799	;# 
  3044   000ED8                     OSCTUNE         equ	3800	;# 
  3045   000ED9                     OSCFRQ          equ	3801	;# 
  3046   000ED9                     OSCFREQ         equ	3801	;# 
  3047   000EDA                     VREGCON         equ	3802	;# 
  3048   000EDB                     BORCON          equ	3803	;# 
  3049   000EDC                     PMD0            equ	3804	;# 
  3050   000EDD                     PMD1            equ	3805	;# 
  3051   000EDE                     PMD2            equ	3806	;# 
  3052   000EDF                     PMD3            equ	3807	;# 
  3053   000EE0                     PMD4            equ	3808	;# 
  3054   000EE1                     PMD5            equ	3809	;# 
  3055   000EE2                     RA0PPS          equ	3810	;# 
  3056   000EE3                     RA1PPS          equ	3811	;# 
  3057   000EE4                     RA2PPS          equ	3812	;# 
  3058   000EE5                     RA3PPS          equ	3813	;# 
  3059   000EE6                     RA4PPS          equ	3814	;# 
  3060   000EE7                     RA5PPS          equ	3815	;# 
  3061   000EE8                     RA6PPS          equ	3816	;# 
  3062   000EE9                     RA7PPS          equ	3817	;# 
  3063   000EEA                     RB0PPS          equ	3818	;# 
  3064   000EEB                     RB1PPS          equ	3819	;# 
  3065   000EEC                     RB2PPS          equ	3820	;# 
  3066   000EED                     RB3PPS          equ	3821	;# 
  3067   000EEE                     RB4PPS          equ	3822	;# 
  3068   000EEF                     RB5PPS          equ	3823	;# 
  3069   000EF0                     RB6PPS          equ	3824	;# 
  3070   000EF1                     RB7PPS          equ	3825	;# 
  3071   000EF2                     RC0PPS          equ	3826	;# 
  3072   000EF3                     RC1PPS          equ	3827	;# 
  3073   000EF4                     RC2PPS          equ	3828	;# 
  3074   000EF5                     RC3PPS          equ	3829	;# 
  3075   000EF6                     RC4PPS          equ	3830	;# 
  3076   000EF7                     RC5PPS          equ	3831	;# 
  3077   000EF8                     RC6PPS          equ	3832	;# 
  3078   000EF9                     RC7PPS          equ	3833	;# 
  3079   000F05                     IOCAF           equ	3845	;# 
  3080   000F06                     IOCAN           equ	3846	;# 
  3081   000F07                     IOCAP           equ	3847	;# 
  3082   000F08                     INLVLA          equ	3848	;# 
  3083   000F09                     SLRCONA         equ	3849	;# 
  3084   000F0A                     ODCONA          equ	3850	;# 
  3085   000F0B                     WPUA            equ	3851	;# 
  3086   000F0C                     ANSELA          equ	3852	;# 
  3087   000F0D                     IOCBF           equ	3853	;# 
  3088   000F0E                     IOCBN           equ	3854	;# 
  3089   000F0F                     IOCBP           equ	3855	;# 
  3090   000F10                     INLVLB          equ	3856	;# 
  3091   000F11                     SLRCONB         equ	3857	;# 
  3092   000F12                     ODCONB          equ	3858	;# 
  3093   000F13                     WPUB            equ	3859	;# 
  3094   000F14                     ANSELB          equ	3860	;# 
  3095   000F15                     IOCCF           equ	3861	;# 
  3096   000F16                     IOCCN           equ	3862	;# 
  3097   000F17                     IOCCP           equ	3863	;# 
  3098   000F18                     INLVLC          equ	3864	;# 
  3099   000F19                     SLRCONC         equ	3865	;# 
  3100   000F1A                     ODCONC          equ	3866	;# 
  3101   000F1B                     WPUC            equ	3867	;# 
  3102   000F1C                     ANSELC          equ	3868	;# 
  3103   000F22                     IOCEF           equ	3874	;# 
  3104   000F23                     IOCEN           equ	3875	;# 
  3105   000F24                     IOCEP           equ	3876	;# 
  3106   000F25                     INLVLE          equ	3877	;# 
  3107   000F28                     WPUE            equ	3880	;# 
  3108   000F2A                     HLVDCON0        equ	3882	;# 
  3109   000F2B                     HLVDCON1        equ	3883	;# 
  3110   000F2C                     FVRCON          equ	3884	;# 
  3111   000F2D                     ZCDCON          equ	3885	;# 
  3112   000F2E                     DAC1CON0        equ	3886	;# 
  3113   000F2F                     DAC1CON1        equ	3887	;# 
  3114   000F30                     CM2CON0         equ	3888	;# 
  3115   000F31                     CM2CON1         equ	3889	;# 
  3116   000F32                     CM2NCH          equ	3890	;# 
  3117   000F33                     CM2PCH          equ	3891	;# 
  3118   000F34                     CM1CON0         equ	3892	;# 
  3119   000F35                     CM1CON1         equ	3893	;# 
  3120   000F36                     CM1NCH          equ	3894	;# 
  3121   000F37                     CM1PCH          equ	3895	;# 
  3122   000F38                     CMOUT           equ	3896	;# 
  3123   000F39                     CLKRCON         equ	3897	;# 
  3124   000F3A                     CLKRCLK         equ	3898	;# 
  3125   000F3B                     CWG1CLK         equ	3899	;# 
  3126   000F3B                     CWG1CLKCON      equ	3899	;# 
  3127   000F3C                     CWG1ISM         equ	3900	;# 
  3128   000F3D                     CWG1DBR         equ	3901	;# 
  3129   000F3E                     CWG1DBF         equ	3902	;# 
  3130   000F3F                     CWG1CON0        equ	3903	;# 
  3131   000F40                     CWG1CON1        equ	3904	;# 
  3132   000F41                     CWG1AS0         equ	3905	;# 
  3133   000F42                     CWG1AS1         equ	3906	;# 
  3134   000F43                     CWG1STR         equ	3907	;# 
  3135   000F44                     SCANLADR        equ	3908	;# 
  3136   000F44                     SCANLADRL       equ	3908	;# 
  3137   000F45                     SCANLADRH       equ	3909	;# 
  3138   000F46                     SCANLADRU       equ	3910	;# 
  3139   000F47                     SCANHADR        equ	3911	;# 
  3140   000F47                     SCANHADRL       equ	3911	;# 
  3141   000F48                     SCANHADRH       equ	3912	;# 
  3142   000F49                     SCANHADRU       equ	3913	;# 
  3143   000F4A                     SCANCON0        equ	3914	;# 
  3144   000F4B                     SCANTRIG        equ	3915	;# 
  3145   000F4C                     MDCON0          equ	3916	;# 
  3146   000F4D                     MDCON1          equ	3917	;# 
  3147   000F4E                     MDSRC           equ	3918	;# 
  3148   000F4F                     MDCARL          equ	3919	;# 
  3149   000F50                     MDCARH          equ	3920	;# 
  3150   000F51                     ADACT           equ	3921	;# 
  3151   000F52                     ADCLK           equ	3922	;# 
  3152   000F53                     ADREF           equ	3923	;# 
  3153   000F54                     ADCON1          equ	3924	;# 
  3154   000F55                     ADCON2          equ	3925	;# 
  3155   000F56                     ADCON3          equ	3926	;# 
  3156   000F57                     ADACQ           equ	3927	;# 
  3157   000F58                     ADCAP           equ	3928	;# 
  3158   000F59                     ADPRE           equ	3929	;# 
  3159   000F5A                     ADPCH           equ	3930	;# 
  3160   000F5B                     ADCON0          equ	3931	;# 
  3161   000F5C                     ADPREV          equ	3932	;# 
  3162   000F5C                     ADPREVL         equ	3932	;# 
  3163   000F5D                     ADPREVH         equ	3933	;# 
  3164   000F5E                     ADRES           equ	3934	;# 
  3165   000F5E                     ADRESL          equ	3934	;# 
  3166   000F5F                     ADRESH          equ	3935	;# 
  3167   000F60                     ADSTAT          equ	3936	;# 
  3168   000F61                     ADRPT           equ	3937	;# 
  3169   000F62                     ADCNT           equ	3938	;# 
  3170   000F63                     ADSTPT          equ	3939	;# 
  3171   000F63                     ADSTPTL         equ	3939	;# 
  3172   000F64                     ADSTPTH         equ	3940	;# 
  3173   000F65                     ADLTH           equ	3941	;# 
  3174   000F65                     ADLTHL          equ	3941	;# 
  3175   000F66                     ADLTHH          equ	3942	;# 
  3176   000F67                     ADUTH           equ	3943	;# 
  3177   000F67                     ADUTHL          equ	3943	;# 
  3178   000F68                     ADUTHH          equ	3944	;# 
  3179   000F69                     ADERR           equ	3945	;# 
  3180   000F69                     ADERRL          equ	3945	;# 
  3181   000F6A                     ADERRH          equ	3946	;# 
  3182   000F6B                     ADACC           equ	3947	;# 
  3183   000F6B                     ADACCL          equ	3947	;# 
  3184   000F6C                     ADACCH          equ	3948	;# 
  3185   000F6D                     ADFLTR          equ	3949	;# 
  3186   000F6D                     ADFLTRL         equ	3949	;# 
  3187   000F6E                     ADFLTRH         equ	3950	;# 
  3188   000F6F                     CRCDATA         equ	3951	;# 
  3189   000F6F                     CRCDATL         equ	3951	;# 
  3190   000F70                     CRCDATH         equ	3952	;# 
  3191   000F71                     CRCACC          equ	3953	;# 
  3192   000F71                     CRCACCL         equ	3953	;# 
  3193   000F72                     CRCACCH         equ	3954	;# 
  3194   000F73                     CRCSHFT         equ	3955	;# 
  3195   000F73                     CRCSHIFTL       equ	3955	;# 
  3196   000F74                     CRCSHIFTH       equ	3956	;# 
  3197   000F75                     CRCXOR          equ	3957	;# 
  3198   000F75                     CRCXORL         equ	3957	;# 
  3199   000F76                     CRCXORH         equ	3958	;# 
  3200   000F77                     CRCCON0         equ	3959	;# 
  3201   000F78                     CRCCON1         equ	3960	;# 
  3202   000F79                     NVMADR          equ	3961	;# 
  3203   000F79                     NVMADRL         equ	3961	;# 
  3204   000F7A                     NVMADRH         equ	3962	;# 
  3205   000F7B                     NVMADRU         equ	3963	;# 
  3206   000F7C                     NVMDAT          equ	3964	;# 
  3207   000F7C                     NVMDATL         equ	3964	;# 
  3208   000F7D                     NVMDATH         equ	3965	;# 
  3209   000F7F                     NVMCON0         equ	3967	;# 
  3210   000F80                     NVMCON1         equ	3968	;# 
  3211   000F81                     NVMCON2         equ	3969	;# 
  3212   000F82                     LATA            equ	3970	;# 
  3213   000F83                     LATB            equ	3971	;# 
  3214   000F84                     LATC            equ	3972	;# 
  3215   000F87                     TRISA           equ	3975	;# 
  3216   000F87                     DDRA            equ	3975	;# 
  3217   000F88                     TRISB           equ	3976	;# 
  3218   000F88                     DDRB            equ	3976	;# 
  3219   000F89                     TRISC           equ	3977	;# 
  3220   000F89                     DDRC            equ	3977	;# 
  3221   000F8C                     PORTA           equ	3980	;# 
  3222   000F8D                     PORTB           equ	3981	;# 
  3223   000F8E                     PORTC           equ	3982	;# 
  3224   000F90                     PORTE           equ	3984	;# 
  3225   000F91                     SSP1BUF         equ	3985	;# 
  3226   000F92                     SSP1ADD         equ	3986	;# 
  3227   000F93                     SSP1MSK         equ	3987	;# 
  3228   000F94                     SSP1STAT        equ	3988	;# 
  3229   000F95                     SSP1CON1        equ	3989	;# 
  3230   000F96                     SSP1CON2        equ	3990	;# 
  3231   000F97                     SSP1CON3        equ	3991	;# 
  3232   000F98                     RC1REG          equ	3992	;# 
  3233   000F98                     RCREG           equ	3992	;# 
  3234   000F98                     RCREG1          equ	3992	;# 
  3235   000F99                     TX1REG          equ	3993	;# 
  3236   000F99                     TXREG1          equ	3993	;# 
  3237   000F99                     TXREG           equ	3993	;# 
  3238   000F9A                     SP1BRG          equ	3994	;# 
  3239   000F9A                     SPBRG           equ	3994	;# 
  3240   000F9A                     SP1BRGL         equ	3994	;# 
  3241   000F9A                     SPBRG1          equ	3994	;# 
  3242   000F9A                     SPBRGL          equ	3994	;# 
  3243   000F9B                     SP1BRGH         equ	3995	;# 
  3244   000F9B                     SPBRGH          equ	3995	;# 
  3245   000F9B                     SPBRGH1         equ	3995	;# 
  3246   000F9C                     RC1STA          equ	3996	;# 
  3247   000F9C                     RCSTA1          equ	3996	;# 
  3248   000F9C                     RCSTA           equ	3996	;# 
  3249   000F9D                     TX1STA          equ	3997	;# 
  3250   000F9D                     TXSTA1          equ	3997	;# 
  3251   000F9D                     TXSTA           equ	3997	;# 
  3252   000F9E                     BAUD1CON        equ	3998	;# 
  3253   000F9E                     BAUDCON1        equ	3998	;# 
  3254   000F9E                     BAUDCTL1        equ	3998	;# 
  3255   000F9E                     BAUDCON         equ	3998	;# 
  3256   000F9E                     BAUDCTL         equ	3998	;# 
  3257   000F9F                     PWM4DC          equ	3999	;# 
  3258   000F9F                     PWM4DCL         equ	3999	;# 
  3259   000FA0                     PWM4DCH         equ	4000	;# 
  3260   000FA1                     PWM4CON         equ	4001	;# 
  3261   000FA2                     PWM3DC          equ	4002	;# 
  3262   000FA2                     PWM3DCL         equ	4002	;# 
  3263   000FA3                     PWM3DCH         equ	4003	;# 
  3264   000FA4                     PWM3CON         equ	4004	;# 
  3265   000FA5                     CCPR2           equ	4005	;# 
  3266   000FA5                     CCPR2L          equ	4005	;# 
  3267   000FA6                     CCPR2H          equ	4006	;# 
  3268   000FA7                     CCP2CON         equ	4007	;# 
  3269   000FA8                     CCP2CAP         equ	4008	;# 
  3270   000FA9                     CCPR1           equ	4009	;# 
  3271   000FA9                     CCPR1L          equ	4009	;# 
  3272   000FAA                     CCPR1H          equ	4010	;# 
  3273   000FAB                     CCP1CON         equ	4011	;# 
  3274   000FAC                     CCP1CAP         equ	4012	;# 
  3275   000FAD                     CCPTMRS         equ	4013	;# 
  3276   000FAE                     T6TMR           equ	4014	;# 
  3277   000FAE                     TMR6            equ	4014	;# 
  3278   000FAF                     T6PR            equ	4015	;# 
  3279   000FAF                     PR6             equ	4015	;# 
  3280   000FB0                     T6CON           equ	4016	;# 
  3281   000FB1                     T6HLT           equ	4017	;# 
  3282   000FB2                     T6CLKCON        equ	4018	;# 
  3283   000FB2                     T6CLK           equ	4018	;# 
  3284   000FB3                     T6RST           equ	4019	;# 
  3285   000FB4                     T4TMR           equ	4020	;# 
  3286   000FB4                     TMR4            equ	4020	;# 
  3287   000FB5                     T4PR            equ	4021	;# 
  3288   000FB5                     PR4             equ	4021	;# 
  3289   000FB6                     T4CON           equ	4022	;# 
  3290   000FB7                     T4HLT           equ	4023	;# 
  3291   000FB8                     T4CLKCON        equ	4024	;# 
  3292   000FB8                     T4CLK           equ	4024	;# 
  3293   000FB9                     T4RST           equ	4025	;# 
  3294   000FBA                     T2TMR           equ	4026	;# 
  3295   000FBA                     TMR2            equ	4026	;# 
  3296   000FBB                     T2PR            equ	4027	;# 
  3297   000FBB                     PR2             equ	4027	;# 
  3298   000FBC                     T2CON           equ	4028	;# 
  3299   000FBD                     T2HLT           equ	4029	;# 
  3300   000FBE                     T2CLKCON        equ	4030	;# 
  3301   000FBE                     T2CLK           equ	4030	;# 
  3302   000FBF                     T2RST           equ	4031	;# 
  3303   000FC0                     TMR5            equ	4032	;# 
  3304   000FC0                     TMR5L           equ	4032	;# 
  3305   000FC1                     TMR5H           equ	4033	;# 
  3306   000FC2                     T5CON           equ	4034	;# 
  3307   000FC2                     TMR5CON         equ	4034	;# 
  3308   000FC3                     T5GCON          equ	4035	;# 
  3309   000FC3                     TMR5GCON        equ	4035	;# 
  3310   000FC4                     T5GATE          equ	4036	;# 
  3311   000FC4                     TMR5GATE        equ	4036	;# 
  3312   000FC5                     T5CLK           equ	4037	;# 
  3313   000FC5                     TMR5CLK         equ	4037	;# 
  3314   000FC5                     PR5             equ	4037	;# 
  3315   000FC6                     TMR3            equ	4038	;# 
  3316   000FC6                     TMR3L           equ	4038	;# 
  3317   000FC7                     TMR3H           equ	4039	;# 
  3318   000FC8                     T3CON           equ	4040	;# 
  3319   000FC8                     TMR3CON         equ	4040	;# 
  3320   000FC9                     T3GCON          equ	4041	;# 
  3321   000FC9                     TMR3GCON        equ	4041	;# 
  3322   000FCA                     T3GATE          equ	4042	;# 
  3323   000FCA                     TMR3GATE        equ	4042	;# 
  3324   000FCB                     T3CLK           equ	4043	;# 
  3325   000FCB                     TMR3CLK         equ	4043	;# 
  3326   000FCB                     PR3             equ	4043	;# 
  3327   000FCC                     TMR1            equ	4044	;# 
  3328   000FCC                     TMR1L           equ	4044	;# 
  3329   000FCD                     TMR1H           equ	4045	;# 
  3330   000FCE                     T1CON           equ	4046	;# 
  3331   000FCE                     TMR1CON         equ	4046	;# 
  3332   000FCF                     T1GCON          equ	4047	;# 
  3333   000FCF                     TMR1GCON        equ	4047	;# 
  3334   000FD0                     T1GATE          equ	4048	;# 
  3335   000FD0                     TMR1GATE        equ	4048	;# 
  3336   000FD1                     T1CLK           equ	4049	;# 
  3337   000FD1                     TMR1CLK         equ	4049	;# 
  3338   000FD1                     PR1             equ	4049	;# 
  3339   000FD2                     TMR0L           equ	4050	;# 
  3340   000FD2                     TMR0            equ	4050	;# 
  3341   000FD3                     TMR0H           equ	4051	;# 
  3342   000FD3                     PR0             equ	4051	;# 
  3343   000FD4                     T0CON0          equ	4052	;# 
  3344   000FD5                     T0CON1          equ	4053	;# 
  3345   000FD6                     PCON1           equ	4054	;# 
  3346   000FD7                     PCON0           equ	4055	;# 
  3347   000FD8                     STATUS          equ	4056	;# 
  3348   000FD9                     FSR2            equ	4057	;# 
  3349   000FD9                     FSR2L           equ	4057	;# 
  3350   000FDA                     FSR2H           equ	4058	;# 
  3351   000FDB                     PLUSW2          equ	4059	;# 
  3352   000FDC                     PREINC2         equ	4060	;# 
  3353   000FDD                     POSTDEC2        equ	4061	;# 
  3354   000FDE                     POSTINC2        equ	4062	;# 
  3355   000FDF                     INDF2           equ	4063	;# 
  3356   000FE0                     BSR             equ	4064	;# 
  3357   000FE1                     FSR1            equ	4065	;# 
  3358   000FE1                     FSR1L           equ	4065	;# 
  3359   000FE2                     FSR1H           equ	4066	;# 
  3360   000FE3                     PLUSW1          equ	4067	;# 
  3361   000FE4                     PREINC1         equ	4068	;# 
  3362   000FE5                     POSTDEC1        equ	4069	;# 
  3363   000FE6                     POSTINC1        equ	4070	;# 
  3364   000FE7                     INDF1           equ	4071	;# 
  3365   000FE8                     WREG            equ	4072	;# 
  3366   000FE9                     FSR0            equ	4073	;# 
  3367   000FE9                     FSR0L           equ	4073	;# 
  3368   000FEA                     FSR0H           equ	4074	;# 
  3369   000FEB                     PLUSW0          equ	4075	;# 
  3370   000FEC                     PREINC0         equ	4076	;# 
  3371   000FED                     POSTDEC0        equ	4077	;# 
  3372   000FEE                     POSTINC0        equ	4078	;# 
  3373   000FEF                     INDF0           equ	4079	;# 
  3374   000FF2                     INTCON          equ	4082	;# 
  3375   000FF3                     PROD            equ	4083	;# 
  3376   000FF3                     PRODL           equ	4083	;# 
  3377   000FF4                     PRODH           equ	4084	;# 
  3378   000FF5                     TABLAT          equ	4085	;# 
  3379   000FF6                     TBLPTR          equ	4086	;# 
  3380   000FF6                     TBLPTRL         equ	4086	;# 
  3381   000FF7                     TBLPTRH         equ	4087	;# 
  3382   000FF8                     TBLPTRU         equ	4088	;# 
  3383   000FF9                     PCLAT           equ	4089	;# 
  3384   000FF9                     PCL             equ	4089	;# 
  3385   000FFA                     PCLATH          equ	4090	;# 
  3386   000FFB                     PCLATU          equ	4091	;# 
  3387   000FFC                     STKPTR          equ	4092	;# 
  3388   000FFD                     TOS             equ	4093	;# 
  3389   000FFD                     TOSL            equ	4093	;# 
  3390   000FFE                     TOSH            equ	4094	;# 
  3391   000FFF                     TOSU            equ	4095	;# 
  3392                           
  3393                           	psect	nvBANK0
  3394   0000E1                     __pnvBANK0:
  3395                           	callstack 0
  3396   0000E1                     _EUSART1_OverrunErrorHandler:
  3397                           	callstack 0
  3398   0000E1                     	ds	3
  3399   0000E4                     _EUSART1_FramingErrorHandler:
  3400                           	callstack 0
  3401   0000E4                     	ds	3
  3402   0000E7                     _EUSART2_ErrorHandler:
  3403                           	callstack 0
  3404   0000E7                     	ds	3
  3405   0000EA                     _EUSART2_OverrunErrorHandler:
  3406                           	callstack 0
  3407   0000EA                     	ds	3
  3408   0000ED                     _EUSART2_FramingErrorHandler:
  3409                           	callstack 0
  3410   0000ED                     	ds	3
  3411   0000F0                     _EUSART1_RxDefaultInterruptHandler:
  3412                           	callstack 0
  3413   0000F0                     	ds	3
  3414   0000F3                     _EUSART1_TxDefaultInterruptHandler:
  3415                           	callstack 0
  3416   0000F3                     	ds	3
  3417   0000F6                     _EUSART2_RxDefaultInterruptHandler:
  3418                           	callstack 0
  3419   0000F6                     	ds	3
  3420   0000F9                     _EUSART2_TxDefaultInterruptHandler:
  3421                           	callstack 0
  3422   0000F9                     	ds	3
  3423   0000FC                     _seed:
  3424                           	callstack 0
  3425   0000FC                     	ds	4
  3426                           
  3427                           	psect	nvBANK1
  3428   000120                     __pnvBANK1:
  3429                           	callstack 0
  3430   000120                     _EUSART1_ErrorHandler:
  3431                           	callstack 0
  3432   000120                     	ds	3
  3433   000EF8                     _RC6PPS         set	3832
  3434   000EB0                     _RX1PPS         set	3760
  3435   000EE1                     _PMD5           set	3809
  3436   000EE0                     _PMD4           set	3808
  3437   000EDF                     _PMD3           set	3807
  3438   000EDE                     _PMD2           set	3806
  3439   000EDD                     _PMD1           set	3805
  3440   000EDC                     _PMD0           set	3804
  3441   000ED8                     _OSCTUNE        set	3800
  3442   000ED9                     _OSCFRQ         set	3801
  3443   000ED7                     _OSCEN          set	3799
  3444   000ED5                     _OSCCON3        set	3797
  3445   000ED3                     _OSCCON1        set	3795
  3446   000E94                     _RC2REG         set	3732
  3447   000E98                     _RC2STAbits     set	3736
  3448   000E95                     _TX2REG         set	3733
  3449   000E99                     _TX2STAbits     set	3737
  3450   000E97                     _SP2BRGH        set	3735
  3451   000E96                     _SP2BRGL        set	3734
  3452   000E99                     _TX2STA         set	3737
  3453   000E98                     _RC2STA         set	3736
  3454   000E9A                     _BAUD2CON       set	3738
  3455   000EC8                     _PIR3bits       set	3784
  3456   000EC0                     _PIE3bits       set	3776
  3457   000F25                     _INLVLE         set	3877
  3458   000F18                     _INLVLC         set	3864
  3459   000F10                     _INLVLB         set	3856
  3460   000F08                     _INLVLA         set	3848
  3461   000F19                     _SLRCONC        set	3865
  3462   000F11                     _SLRCONB        set	3857
  3463   000F09                     _SLRCONA        set	3849
  3464   000F1A                     _ODCONC         set	3866
  3465   000F12                     _ODCONB         set	3858
  3466   000F0A                     _ODCONA         set	3850
  3467   000F1B                     _WPUC           set	3867
  3468   000F0B                     _WPUA           set	3851
  3469   000F13                     _WPUB           set	3859
  3470   000F28                     _WPUE           set	3880
  3471   000F0C                     _ANSELA         set	3852
  3472   000F14                     _ANSELB         set	3860
  3473   000F1C                     _ANSELC         set	3868
  3474   000F84                     _LATCbits       set	3972
  3475   000F89                     _TRISC          set	3977
  3476   000F88                     _TRISB          set	3976
  3477   000F87                     _TRISA          set	3975
  3478   000F84                     _LATC           set	3972
  3479   000F83                     _LATB           set	3971
  3480   000F82                     _LATA           set	3970
  3481   000F98                     _RC1REG         set	3992
  3482   000F9C                     _RC1STAbits     set	3996
  3483   000F99                     _TX1REG         set	3993
  3484   000F9D                     _TX1STAbits     set	3997
  3485   000F9B                     _SP1BRGH        set	3995
  3486   000F9A                     _SP1BRGL        set	3994
  3487   000F9D                     _TX1STA         set	3997
  3488   000F9C                     _RC1STA         set	3996
  3489   000F9E                     _BAUD1CON       set	3998
  3490   000FF2                     _INTCONbits     set	4082
  3491                           
  3492                           	psect	smallconst
  3493   001000                     __psmallconst:
  3494                           	callstack 0
  3495   001000  00                 	db	0
  3496   001001                     STR_2:
  3497   001001  25                 	db	37
  3498   001002  73                 	db	115	;'s'
  3499   001003  0D                 	db	13
  3500   001004  0A                 	db	10
  3501   001005  00                 	db	0
  3502   001006                     STR_1:
  3503   001006  25                 	db	37
  3504   001007  64                 	db	100	;'d'
  3505   001008  20                 	db	32
  3506   001009  00                 	db	0
  3507   00100A  00                 	db	0	; dummy byte at the end
  3508   000003                     __activetblptr  equ	3
  3509                           
  3510                           ; #config settings
  3511                           
  3512                           	psect	cinit
  3513   001BAE                     __pcinit:
  3514                           	callstack 0
  3515   001BAE                     start_initialization:
  3516                           	callstack 0
  3517   001BAE                     __initialization:
  3518                           	callstack 0
  3519                           
  3520                           ; Clear objects allocated to BANK1 (32 bytes)
  3521   001BAE  EE01  F000         	lfsr	0,__pbssBANK1
  3522   001BB2  0E20               	movlw	32
  3523   001BB4                     clear_0:
  3524   001BB4  6AEE               	clrf	postinc0,c
  3525   001BB6  06E8               	decf	wreg,f,c
  3526   001BB8  E1FD               	bnz	clear_0
  3527                           
  3528                           ; Clear objects allocated to BANK0 (48 bytes)
  3529   001BBA  EE00  F0B1         	lfsr	0,__pbssBANK0
  3530   001BBE  0E30               	movlw	48
  3531   001BC0                     clear_1:
  3532   001BC0  6AEE               	clrf	postinc0,c
  3533   001BC2  06E8               	decf	wreg,f,c
  3534   001BC4  E1FD               	bnz	clear_1
  3535                           
  3536                           ; Clear objects allocated to COMRAM (21 bytes)
  3537   001BC6  EE00  F046         	lfsr	0,__pbssCOMRAM
  3538   001BCA  0E15               	movlw	21
  3539   001BCC                     clear_2:
  3540   001BCC  6AEE               	clrf	postinc0,c
  3541   001BCE  06E8               	decf	wreg,f,c
  3542   001BD0  E1FD               	bnz	clear_2
  3543   001BD2                     end_of_initialization:
  3544                           	callstack 0
  3545   001BD2                     __end_of__initialization:
  3546                           	callstack 0
  3547   001BD2  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3548   001BD4  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3549   001BD6  0100               	movlb	0
  3550   001BD8  EFA0  F00D         	goto	_main	;jump to C main() function
  3551                           
  3552                           	psect	bssCOMRAM
  3553   000046                     __pbssCOMRAM:
  3554                           	callstack 0
  3555   000046                     _nout:
  3556                           	callstack 0
  3557   000046                     	ds	2
  3558   000048                     _width:
  3559                           	callstack 0
  3560   000048                     	ds	2
  3561   00004A                     _prec:
  3562                           	callstack 0
  3563   00004A                     	ds	2
  3564   00004C                     _flags:
  3565                           	callstack 0
  3566   00004C                     	ds	1
  3567   00004D                     _eusart1RxLastError:
  3568                           	callstack 0
  3569   00004D                     	ds	1
  3570   00004E                     _eusart1RxCount:
  3571                           	callstack 0
  3572   00004E                     	ds	1
  3573   00004F                     _eusart1RxTail:
  3574                           	callstack 0
  3575   00004F                     	ds	1
  3576   000050                     _eusart1RxHead:
  3577                           	callstack 0
  3578   000050                     	ds	1
  3579   000051                     _eusart1TxBufferRemaining:
  3580                           	callstack 0
  3581   000051                     	ds	1
  3582   000052                     _eusart1TxTail:
  3583                           	callstack 0
  3584   000052                     	ds	1
  3585   000053                     _eusart1TxHead:
  3586                           	callstack 0
  3587   000053                     	ds	1
  3588   000054                     _eusart2RxLastError:
  3589                           	callstack 0
  3590   000054                     	ds	1
  3591   000055                     _eusart2RxCount:
  3592                           	callstack 0
  3593   000055                     	ds	1
  3594   000056                     _eusart2RxTail:
  3595                           	callstack 0
  3596   000056                     	ds	1
  3597   000057                     _eusart2RxHead:
  3598                           	callstack 0
  3599   000057                     	ds	1
  3600   000058                     _eusart2TxBufferRemaining:
  3601                           	callstack 0
  3602   000058                     	ds	1
  3603   000059                     _eusart2TxTail:
  3604                           	callstack 0
  3605   000059                     	ds	1
  3606   00005A                     _eusart2TxHead:
  3607                           	callstack 0
  3608   00005A                     	ds	1
  3609                           
  3610                           	psect	bssBANK0
  3611   0000B1                     __pbssBANK0:
  3612                           	callstack 0
  3613   0000B1                     _eusart1RxStatusBuffer:
  3614                           	callstack 0
  3615   0000B1                     	ds	8
  3616   0000B9                     _eusart1RxBuffer:
  3617                           	callstack 0
  3618   0000B9                     	ds	8
  3619   0000C1                     _eusart1TxBuffer:
  3620                           	callstack 0
  3621   0000C1                     	ds	8
  3622   0000C9                     _eusart2RxStatusBuffer:
  3623                           	callstack 0
  3624   0000C9                     	ds	8
  3625   0000D1                     _eusart2RxBuffer:
  3626                           	callstack 0
  3627   0000D1                     	ds	8
  3628   0000D9                     _eusart2TxBuffer:
  3629                           	callstack 0
  3630   0000D9                     	ds	8
  3631                           
  3632                           	psect	bssBANK1
  3633   000100                     __pbssBANK1:
  3634                           	callstack 0
  3635   000100                     _dbuf:
  3636                           	callstack 0
  3637   000100                     	ds	32
  3638                           
  3639                           	psect	cstackBANK1
  3640   000123                     __pcstackBANK1:
  3641                           	callstack 0
  3642   000123                     ??_main:
  3643                           
  3644                           ; 1 bytes @ 0x0
  3645   000123                     	ds	2
  3646                           
  3647                           	psect	cstackBANK0
  3648   000060                     __pcstackBANK0:
  3649                           	callstack 0
  3650   000060                     ??_send_mqtt_data_points:
  3651                           
  3652                           ; 1 bytes @ 0x0
  3653   000060                     	ds	1
  3654   000061                     send_mqtt_data_points@buffer:
  3655                           	callstack 0
  3656                           
  3657                           ; 64 bytes @ 0x1
  3658   000061                     	ds	64
  3659   0000A1                     send_mqtt_data_points@data_points:
  3660                           	callstack 0
  3661                           
  3662                           ; 10 bytes @ 0x41
  3663   0000A1                     	ds	10
  3664   0000AB                     send_mqtt_data_points@i:
  3665                           	callstack 0
  3666                           
  3667                           ; 2 bytes @ 0x4B
  3668   0000AB                     	ds	2
  3669   0000AD                     send_mqtt_data_points@message_length:
  3670                           	callstack 0
  3671                           
  3672                           ; 2 bytes @ 0x4D
  3673   0000AD                     	ds	2
  3674   0000AF                     send_mqtt_data_points@i_759:
  3675                           	callstack 0
  3676                           
  3677                           ; 2 bytes @ 0x4F
  3678   0000AF                     	ds	2
  3679                           
  3680                           	psect	cstackCOMRAM
  3681   000001                     __pcstackCOMRAM:
  3682                           	callstack 0
  3683   000001                     ??_INTERRUPT_InterruptManager:
  3684                           
  3685                           ; 1 bytes @ 0x0
  3686   000001                     	ds	4
  3687   000005                     ?___awdiv:
  3688                           	callstack 0
  3689   000005                     ?___lmul:
  3690                           	callstack 0
  3691   000005                     EUSART1_Write@txData:
  3692                           	callstack 0
  3693   000005                     ___awdiv@dividend:
  3694                           	callstack 0
  3695   000005                     srand@s:
  3696                           	callstack 0
  3697   000005                     EUSART2_SetFramingErrorHandler@interruptHandler:
  3698                           	callstack 0
  3699   000005                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  3700                           	callstack 0
  3701   000005                     EUSART2_SetErrorHandler@interruptHandler:
  3702                           	callstack 0
  3703   000005                     EUSART2_SetTxInterruptHandler@interruptHandler:
  3704                           	callstack 0
  3705   000005                     EUSART2_SetRxInterruptHandler@interruptHandler:
  3706                           	callstack 0
  3707   000005                     EUSART1_SetFramingErrorHandler@interruptHandler:
  3708                           	callstack 0
  3709   000005                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  3710                           	callstack 0
  3711   000005                     EUSART1_SetErrorHandler@interruptHandler:
  3712                           	callstack 0
  3713   000005                     EUSART1_SetTxInterruptHandler@interruptHandler:
  3714                           	callstack 0
  3715   000005                     EUSART1_SetRxInterruptHandler@interruptHandler:
  3716                           	callstack 0
  3717   000005                     ___lmul@multiplier:
  3718                           	callstack 0
  3719   000005                     
  3720                           ; 1 bytes @ 0x4
  3721   000005                     	ds	1
  3722   000006                     putch@txData:
  3723                           	callstack 0
  3724   000006                     
  3725                           ; 1 bytes @ 0x5
  3726   000006                     	ds	1
  3727   000007                     ___awdiv@divisor:
  3728                           	callstack 0
  3729   000007                     fputc@c:
  3730                           	callstack 0
  3731   000007                     ??_srand:
  3732                           
  3733                           ; 1 bytes @ 0x6
  3734   000007                     	ds	1
  3735   000008                     
  3736                           ; 1 bytes @ 0x7
  3737   000008                     	ds	1
  3738   000009                     ___awdiv@counter:
  3739                           	callstack 0
  3740   000009                     fputc@fp:
  3741                           	callstack 0
  3742   000009                     ___lmul@multiplicand:
  3743                           	callstack 0
  3744   000009                     
  3745                           ; 1 bytes @ 0x8
  3746   000009                     	ds	1
  3747   00000A                     ___awdiv@sign:
  3748                           	callstack 0
  3749   00000A                     ??_fputc:
  3750                           
  3751                           ; 1 bytes @ 0x9
  3752   00000A                     	ds	1
  3753   00000B                     ___awdiv@quotient:
  3754                           	callstack 0
  3755                           
  3756                           ; 2 bytes @ 0xA
  3757   00000B                     	ds	2
  3758   00000D                     ___lmul@product:
  3759                           	callstack 0
  3760   00000D                     
  3761                           ; 1 bytes @ 0xC
  3762   00000D                     	ds	4
  3763   000011                     ?_rand:
  3764                           	callstack 0
  3765                           
  3766                           ; 2 bytes @ 0x10
  3767   000011                     	ds	2
  3768   000013                     ??_rand:
  3769                           
  3770                           ; 1 bytes @ 0x12
  3771   000013                     	ds	4
  3772   000017                     ?___awmod:
  3773                           	callstack 0
  3774   000017                     ___awmod@dividend:
  3775                           	callstack 0
  3776                           
  3777                           ; 2 bytes @ 0x16
  3778   000017                     	ds	2
  3779   000019                     ___awmod@divisor:
  3780                           	callstack 0
  3781                           
  3782                           ; 2 bytes @ 0x18
  3783   000019                     	ds	2
  3784   00001B                     ___awmod@counter:
  3785                           	callstack 0
  3786   00001B                     
  3787                           ; 1 bytes @ 0x1A
  3788   00001B                     	ds	1
  3789   00001C                     ___awmod@sign:
  3790                           	callstack 0
  3791                           
  3792                           ; 1 bytes @ 0x1B
  3793   00001C                     	ds	1
  3794   00001D                     ?_abs:
  3795                           	callstack 0
  3796   00001D                     abs@a:
  3797                           	callstack 0
  3798                           
  3799                           ; 2 bytes @ 0x1C
  3800   00001D                     	ds	2
  3801   00001F                     ??_abs:
  3802                           
  3803                           ; 1 bytes @ 0x1E
  3804   00001F                     	ds	2
  3805   000021                     ?_vfpfcnvrt:
  3806                           	callstack 0
  3807   000021                     vfpfcnvrt@fp:
  3808                           	callstack 0
  3809                           
  3810                           ; 1 bytes @ 0x20
  3811   000021                     	ds	1
  3812   000022                     vfpfcnvrt@fmt:
  3813                           	callstack 0
  3814                           
  3815                           ; 1 bytes @ 0x21
  3816   000022                     	ds	1
  3817   000023                     vfpfcnvrt@ap:
  3818                           	callstack 0
  3819                           
  3820                           ; 2 bytes @ 0x22
  3821   000023                     	ds	2
  3822   000025                     ??_vfpfcnvrt:
  3823                           
  3824                           ; 1 bytes @ 0x24
  3825   000025                     	ds	1
  3826   000026                     vfpfcnvrt@cp_1296:
  3827                           	callstack 0
  3828                           
  3829                           ; 1 bytes @ 0x25
  3830   000026                     	ds	1
  3831   000027                     vfpfcnvrt@cnt:
  3832                           	callstack 0
  3833                           
  3834                           ; 2 bytes @ 0x26
  3835   000027                     	ds	2
  3836   000029                     vfpfcnvrt@done:
  3837                           	callstack 0
  3838                           
  3839                           ; 1 bytes @ 0x28
  3840   000029                     	ds	1
  3841   00002A                     vfpfcnvrt@cp:
  3842                           	callstack 0
  3843                           
  3844                           ; 1 bytes @ 0x29
  3845   00002A                     	ds	1
  3846   00002B                     vfpfcnvrt@convarg:
  3847                           	callstack 0
  3848                           
  3849                           ; 4 bytes @ 0x2A
  3850   00002B                     	ds	4
  3851   00002F                     vfpfcnvrt@c:
  3852                           	callstack 0
  3853                           
  3854                           ; 1 bytes @ 0x2E
  3855   00002F                     	ds	1
  3856   000030                     ?_vfprintf:
  3857                           	callstack 0
  3858   000030                     vfprintf@fp:
  3859                           	callstack 0
  3860                           
  3861                           ; 1 bytes @ 0x2F
  3862   000030                     	ds	1
  3863   000031                     vfprintf@fmt:
  3864                           	callstack 0
  3865                           
  3866                           ; 1 bytes @ 0x30
  3867   000031                     	ds	1
  3868   000032                     vfprintf@ap:
  3869                           	callstack 0
  3870                           
  3871                           ; 1 bytes @ 0x31
  3872   000032                     	ds	1
  3873   000033                     vfprintf@cfmt:
  3874                           	callstack 0
  3875   000033                     
  3876                           ; 1 bytes @ 0x32
  3877   000033                     	ds	1
  3878   000034                     ?_sprintf:
  3879                           	callstack 0
  3880   000034                     ?_printf:
  3881                           	callstack 0
  3882   000034                     sprintf@s:
  3883                           	callstack 0
  3884   000034                     printf@fmt:
  3885                           	callstack 0
  3886                           
  3887                           ; 1 bytes @ 0x33
  3888   000034                     	ds	1
  3889   000035                     sprintf@fmt:
  3890                           	callstack 0
  3891                           
  3892                           ; 1 bytes @ 0x34
  3893   000035                     	ds	2
  3894   000037                     printf@ap:
  3895                           	callstack 0
  3896   000037                     
  3897                           ; 1 bytes @ 0x36
  3898   000037                     	ds	1
  3899   000038                     sprintf@ret:
  3900                           	callstack 0
  3901   000038                     
  3902                           ; 1 bytes @ 0x37
  3903   000038                     	ds	2
  3904   00003A                     sprintf@ap:
  3905                           	callstack 0
  3906                           
  3907                           ; 1 bytes @ 0x39
  3908   00003A                     	ds	1
  3909   00003B                     sprintf@f:
  3910                           	callstack 0
  3911                           
  3912                           ; 11 bytes @ 0x3A
  3913   00003B                     	ds	11
  3914                           
  3915 ;;
  3916 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3917 ;;
  3918 ;; *************** function _main *****************
  3919 ;; Defined at:
  3920 ;;		line 9 in file "main.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;		None
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;		None
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3936 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3937 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3938 ;;Total ram usage:        2 bytes
  3939 ;; Hardware stack levels required when called: 11
  3940 ;; This function calls:
  3941 ;;		_SYSTEM_Initialize
  3942 ;;		_send_mqtt_data_points
  3943 ;;		_srand
  3944 ;; This function is called by:
  3945 ;;		Startup code after reset
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text0
  3950   001B40                     __ptext0:
  3951                           	callstack 0
  3952   001B40                     _main:
  3953                           	callstack 20
  3954   001B40                     
  3955                           ;main.c: 11:     SYSTEM_Initialize();
  3956   001B40  EC20  F00E         	call	_SYSTEM_Initialize	;wreg free
  3957                           
  3958                           ;main.c: 14:     srand(123456);
  3959   001B44  0EE2               	movlw	226
  3960   001B46  6E06               	movwf	(srand@s+1)^0,c
  3961   001B48  0E40               	movlw	64
  3962   001B4A  6E05               	movwf	srand@s^0,c
  3963   001B4C  EC12  F00E         	call	_srand	;wreg free
  3964   001B50                     
  3965                           ;main.c: 17:     (INTCONbits.GIE = 1);
  3966   001B50  8EF2               	bsf	242,7,c	;volatile
  3967   001B52                     
  3968                           ;main.c: 18:     (INTCONbits.PEIE = 1);
  3969   001B52  8CF2               	bsf	242,6,c	;volatile
  3970   001B54                     l2485:
  3971                           
  3972                           ;main.c: 23:         send_mqtt_data_points();
  3973   001B54  EC9C  F009         	call	_send_mqtt_data_points	;wreg free
  3974   001B58                     
  3975                           ;main.c: 26:         _delay((unsigned long)((2000)*(1000000/4000.0)));
  3976   001B58  0E03               	movlw	3
  3977   001B5A  0101               	movlb	1	; () banked
  3978   001B5C  6F24               	movwf	(??_main+1)& (0+255),b
  3979   001B5E  0E8A               	movlw	138
  3980   001B60  6F23               	movwf	??_main& (0+255),b
  3981   001B62  0E55               	movlw	85
  3982   001B64                     u1667:
  3983   001B64  2EE8               	decfsz	wreg,f,c
  3984   001B66  D7FE               	bra	u1667
  3985   001B68  2F23               	decfsz	??_main& (0+255),f,b
  3986   001B6A  D7FC               	bra	u1667
  3987   001B6C  2F24               	decfsz	(??_main+1)& (0+255),f,b
  3988   001B6E  D7FA               	bra	u1667
  3989   001B70  D000               	nop2	
  3990   001B72  EFAA  F00D         	goto	l2485
  3991   001B76  EF97  F000         	goto	start
  3992   001B7A                     __end_of_main:
  3993                           	callstack 0
  3994                           
  3995 ;; *************** function _srand *****************
  3996 ;; Defined at:
  3997 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\rand.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;  s               2    4[COMRAM] unsigned int 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;		None
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  1    wreg      void 
  4004 ;; Registers used:
  4005 ;;		wreg, status,2, status,0
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4011 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4013 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4014 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4015 ;;Total ram usage:        4 bytes
  4016 ;; Hardware stack levels used: 1
  4017 ;; Hardware stack levels required when called: 4
  4018 ;; This function calls:
  4019 ;;		Nothing
  4020 ;; This function is called by:
  4021 ;;		_main
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text1
  4026   001C24                     __ptext1:
  4027                           	callstack 0
  4028   001C24                     _srand:
  4029                           	callstack 26
  4030   001C24  0EFF               	movlw	255
  4031   001C26  2405               	addwf	srand@s^0,w,c
  4032   001C28  6E07               	movwf	??_srand^0,c
  4033   001C2A  0EFF               	movlw	255
  4034   001C2C  2006               	addwfc	(srand@s+1)^0,w,c
  4035   001C2E  6E08               	movwf	(??_srand+1)^0,c
  4036   001C30  C007  F0FC         	movff	??_srand,_seed
  4037   001C34  C008  F0FD         	movff	??_srand+1,_seed+1
  4038   001C38  0100               	movlb	0	; () banked
  4039   001C3A  6BFE               	clrf	(_seed+2)& (0+255),b
  4040   001C3C  6BFF               	clrf	(_seed+3)& (0+255),b
  4041   001C3E                     
  4042                           ; BSR set to: 0
  4043   001C3E  0012               	return		;funcret
  4044   001C40                     __end_of_srand:
  4045                           	callstack 0
  4046                           
  4047 ;; *************** function _send_mqtt_data_points *****************
  4048 ;; Defined at:
  4049 ;;		line 30 in file "main.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;		None
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;  i               2   79[BANK0 ] int 
  4054 ;;  i               2   75[BANK0 ] int 
  4055 ;;  buffer         64    1[BANK0 ] unsigned char [64]
  4056 ;;  data_points    10   65[BANK0 ] int [5]
  4057 ;;  message_leng    2   77[BANK0 ] int 
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1    wreg      void 
  4060 ;; Registers used:
  4061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4068 ;;      Locals:         0      80       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4069 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4070 ;;      Totals:         0      81       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4071 ;;Total ram usage:       81 bytes
  4072 ;; Hardware stack levels used: 1
  4073 ;; Hardware stack levels required when called: 10
  4074 ;; This function calls:
  4075 ;;		___awmod
  4076 ;;		_printf
  4077 ;;		_rand
  4078 ;;		_sprintf
  4079 ;; This function is called by:
  4080 ;;		_main
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           	psect	text2
  4085   001338                     __ptext2:
  4086                           	callstack 0
  4087   001338                     _send_mqtt_data_points:
  4088                           	callstack 20
  4089   001338                     
  4090                           ;main.c: 32:     int data_points[5];;main.c: 33:     for (int i = 0; i < 5; i++) {
  4091   001338  0E00               	movlw	0
  4092   00133A  0100               	movlb	0	; () banked
  4093   00133C  6FAC               	movwf	(send_mqtt_data_points@i+1)& (0+255),b
  4094   00133E  0E00               	movlw	0
  4095   001340  6FAB               	movwf	send_mqtt_data_points@i& (0+255),b
  4096   001342                     l2449:
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;main.c: 34:         data_points[i] = rand() % 100;
  4100   001342  EC5F  F00C         	call	_rand	;wreg free
  4101   001346  C011  F017         	movff	?_rand,___awmod@dividend
  4102   00134A  C012  F018         	movff	?_rand+1,___awmod@dividend+1
  4103   00134E  0E00               	movlw	0
  4104   001350  6E1A               	movwf	(___awmod@divisor+1)^0,c
  4105   001352  0E64               	movlw	100
  4106   001354  6E19               	movwf	___awmod@divisor^0,c
  4107   001356  EC32  F00B         	call	___awmod	;wreg free
  4108   00135A  0100               	movlb	0	; () banked
  4109   00135C  51AB               	movf	send_mqtt_data_points@i& (0+255),w,b
  4110   00135E  0D02               	mullw	2
  4111   001360  50F3               	movf	243,w,c
  4112   001362  0FA1               	addlw	low send_mqtt_data_points@data_points
  4113   001364  6ED9               	movwf	fsr2l,c
  4114   001366  6ADA               	clrf	fsr2h,c
  4115   001368  C017  FFDE         	movff	?___awmod,postinc2
  4116   00136C  C018  FFDD         	movff	?___awmod+1,postdec2
  4117   001370                     
  4118                           ; BSR set to: 0
  4119                           ;main.c: 35:     }
  4120   001370  4BAB               	infsnz	send_mqtt_data_points@i& (0+255),f,b
  4121   001372  2BAC               	incf	(send_mqtt_data_points@i+1)& (0+255),f,b
  4122   001374                     
  4123                           ; BSR set to: 0
  4124   001374  BFAC               	btfsc	(send_mqtt_data_points@i+1)& (0+255),7,b
  4125   001376  EFC6  F009         	goto	u1631
  4126   00137A  51AC               	movf	(send_mqtt_data_points@i+1)& (0+255),w,b
  4127   00137C  E109               	bnz	u1630
  4128   00137E  0E05               	movlw	5
  4129   001380  5DAB               	subwf	send_mqtt_data_points@i& (0+255),w,b
  4130   001382  A0D8               	btfss	status,0,c
  4131   001384  EFC6  F009         	goto	u1631
  4132   001388  EFC8  F009         	goto	u1630
  4133   00138C                     u1631:
  4134   00138C  EFA1  F009         	goto	l2449
  4135   001390                     u1630:
  4136   001390                     
  4137                           ; BSR set to: 0
  4138                           ;main.c: 37:     char buffer[64];;main.c: 40:     int message_length = 0;
  4139   001390  0E00               	movlw	0
  4140   001392  6FAE               	movwf	(send_mqtt_data_points@message_length+1)& (0+255),b
  4141   001394  0E00               	movlw	0
  4142   001396  6FAD               	movwf	send_mqtt_data_points@message_length& (0+255),b
  4143                           
  4144                           ;main.c: 43:     for (int i = 0; i < 5; i++) {
  4145   001398  0E00               	movlw	0
  4146   00139A  6FB0               	movwf	(send_mqtt_data_points@i_759+1)& (0+255),b
  4147   00139C  0E00               	movlw	0
  4148   00139E  6FAF               	movwf	send_mqtt_data_points@i_759& (0+255),b
  4149   0013A0                     l2461:
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;main.c: 45:         message_length += sprintf(buffer + message_length, "%d ", data_poin
      +                          ts[i]);
  4153   0013A0  51AD               	movf	send_mqtt_data_points@message_length& (0+255),w,b
  4154   0013A2  0F61               	addlw	low send_mqtt_data_points@buffer
  4155   0013A4  6E34               	movwf	sprintf@s^0,c
  4156   0013A6  0E06               	movlw	low STR_1
  4157   0013A8  6E35               	movwf	sprintf@fmt^0,c
  4158   0013AA  51AF               	movf	send_mqtt_data_points@i_759& (0+255),w,b
  4159   0013AC  0D02               	mullw	2
  4160   0013AE  50F3               	movf	243,w,c
  4161   0013B0  0FA1               	addlw	low send_mqtt_data_points@data_points
  4162   0013B2  6ED9               	movwf	fsr2l,c
  4163   0013B4  6ADA               	clrf	fsr2h,c
  4164   0013B6  CFDE F036          	movff	postinc2,?_sprintf+2
  4165   0013BA  CFDD F037          	movff	postdec2,?_sprintf+3
  4166   0013BE  EC41  F00D         	call	_sprintf	;wreg free
  4167   0013C2  5034               	movf	?_sprintf^0,w,c
  4168   0013C4  0100               	movlb	0	; () banked
  4169   0013C6  27AD               	addwf	send_mqtt_data_points@message_length& (0+255),f,b
  4170   0013C8  5035               	movf	(?_sprintf+1)^0,w,c
  4171   0013CA  23AE               	addwfc	(send_mqtt_data_points@message_length+1)& (0+255),f,b
  4172   0013CC                     
  4173                           ; BSR set to: 0
  4174                           ;main.c: 46:     }
  4175   0013CC  4BAF               	infsnz	send_mqtt_data_points@i_759& (0+255),f,b
  4176   0013CE  2BB0               	incf	(send_mqtt_data_points@i_759+1)& (0+255),f,b
  4177   0013D0                     
  4178                           ; BSR set to: 0
  4179   0013D0  BFB0               	btfsc	(send_mqtt_data_points@i_759+1)& (0+255),7,b
  4180   0013D2  EFF4  F009         	goto	u1641
  4181   0013D6  51B0               	movf	(send_mqtt_data_points@i_759+1)& (0+255),w,b
  4182   0013D8  E109               	bnz	u1640
  4183   0013DA  0E05               	movlw	5
  4184   0013DC  5DAF               	subwf	send_mqtt_data_points@i_759& (0+255),w,b
  4185   0013DE  A0D8               	btfss	status,0,c
  4186   0013E0  EFF4  F009         	goto	u1641
  4187   0013E4  EFF6  F009         	goto	u1640
  4188   0013E8                     u1641:
  4189   0013E8  EFD0  F009         	goto	l2461
  4190   0013EC                     u1640:
  4191   0013EC                     
  4192                           ; BSR set to: 0
  4193                           ;main.c: 49:     if (message_length > 0) {
  4194   0013EC  BFAE               	btfsc	(send_mqtt_data_points@message_length+1)& (0+255),7,b
  4195   0013EE  EF01  F00A         	goto	u1651
  4196   0013F2  51AE               	movf	(send_mqtt_data_points@message_length+1)& (0+255),w,b
  4197   0013F4  E108               	bnz	u1650
  4198   0013F6  05AD               	decf	send_mqtt_data_points@message_length& (0+255),w,b
  4199   0013F8  A0D8               	btfss	status,0,c
  4200   0013FA  EF01  F00A         	goto	u1651
  4201   0013FE  EF03  F00A         	goto	u1650
  4202   001402                     u1651:
  4203   001402  EF0C  F00A         	goto	l2471
  4204   001406                     u1650:
  4205   001406                     
  4206                           ; BSR set to: 0
  4207                           ;main.c: 50:         buffer[message_length - 1] = '\0';
  4208   001406  C0AD  F060         	movff	send_mqtt_data_points@message_length,??_send_mqtt_data_points
  4209   00140A  0EFF               	movlw	255
  4210   00140C  2760               	addwf	??_send_mqtt_data_points& (0+255),f,b
  4211   00140E  5160               	movf	??_send_mqtt_data_points& (0+255),w,b
  4212   001410  0F61               	addlw	low send_mqtt_data_points@buffer
  4213   001412  6ED9               	movwf	fsr2l,c
  4214   001414  6ADA               	clrf	fsr2h,c
  4215   001416  6ADF               	clrf	indf2,c
  4216   001418                     l2471:
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;main.c: 54:     printf("%s\r\n", buffer);
  4220   001418  0E01               	movlw	low STR_2
  4221   00141A  6E34               	movwf	printf@fmt^0,c
  4222   00141C  0E61               	movlw	low send_mqtt_data_points@buffer
  4223   00141E  6E35               	movwf	(?_printf+1)^0,c
  4224   001420  6A36               	clrf	(?_printf+2)^0,c
  4225   001422  EC2D  F00E         	call	_printf	;wreg free
  4226   001426  8884               	bsf	132,4,c	;volatile
  4227   001428                     
  4228                           ;main.c: 58:     _delay((unsigned long)((150)*(1000000/4000.0)));
  4229   001428  0E31               	movlw	49
  4230   00142A  0100               	movlb	0	; () banked
  4231   00142C  6F60               	movwf	??_send_mqtt_data_points& (0+255),b
  4232   00142E  0EB2               	movlw	178
  4233   001430                     u1677:
  4234   001430  2EE8               	decfsz	wreg,f,c
  4235   001432  D7FE               	bra	u1677
  4236   001434  2F60               	decfsz	??_send_mqtt_data_points& (0+255),f,b
  4237   001436  D7FC               	bra	u1677
  4238   001438  0000               	nop	
  4239   00143A  9884               	bcf	132,4,c	;volatile
  4240   00143C  0012               	return		;funcret
  4241   00143E                     __end_of_send_mqtt_data_points:
  4242                           	callstack 0
  4243                           
  4244 ;; *************** function _sprintf *****************
  4245 ;; Defined at:
  4246 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  s               1   51[COMRAM] PTR unsigned char 
  4249 ;;		 -> send_mqtt_data_points@buffer(64), 
  4250 ;;  fmt             1   52[COMRAM] PTR const unsigned char 
  4251 ;;		 -> STR_1(4), 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  f              11   58[COMRAM] struct _IO_FILE
  4254 ;;  ret             2   55[COMRAM] int 
  4255 ;;  ap              1   57[COMRAM] PTR void [1]
  4256 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  2   51[COMRAM] int 
  4259 ;; Registers used:
  4260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4266 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4267 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4269 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4270 ;;Total ram usage:       18 bytes
  4271 ;; Hardware stack levels used: 1
  4272 ;; Hardware stack levels required when called: 9
  4273 ;; This function calls:
  4274 ;;		_vfprintf
  4275 ;; This function is called by:
  4276 ;;		_send_mqtt_data_points
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text3
  4281   001A82                     __ptext3:
  4282                           	callstack 0
  4283   001A82                     _sprintf:
  4284                           	callstack 20
  4285   001A82  0E36               	movlw	low (?_sprintf+2)
  4286   001A84  6E3A               	movwf	sprintf@ap^0,c
  4287   001A86  C034  F03B         	movff	sprintf@s,sprintf@f
  4288   001A8A  0E00               	movlw	0
  4289   001A8C  6E3E               	movwf	(sprintf@f+3)^0,c
  4290   001A8E  0E00               	movlw	0
  4291   001A90  6E3D               	movwf	(sprintf@f+2)^0,c
  4292   001A92  0E00               	movlw	0
  4293   001A94  6E45               	movwf	(sprintf@f+10)^0,c
  4294   001A96  0E00               	movlw	0
  4295   001A98  6E44               	movwf	(sprintf@f+9)^0,c
  4296   001A9A  0E3B               	movlw	low sprintf@f
  4297   001A9C  6E30               	movwf	vfprintf@fp^0,c
  4298   001A9E  C035  F031         	movff	sprintf@fmt,vfprintf@fmt
  4299   001AA2  0E3A               	movlw	low sprintf@ap
  4300   001AA4  6E32               	movwf	vfprintf@ap^0,c
  4301   001AA6  ECCB  F00C         	call	_vfprintf	;wreg free
  4302   001AAA  C030  F038         	movff	?_vfprintf,sprintf@ret
  4303   001AAE  C031  F039         	movff	?_vfprintf+1,sprintf@ret+1
  4304   001AB2  5034               	movf	sprintf@s^0,w,c
  4305   001AB4  243D               	addwf	(sprintf@f+2)^0,w,c
  4306   001AB6  6ED9               	movwf	fsr2l,c
  4307   001AB8  6ADA               	clrf	fsr2h,c
  4308   001ABA  6ADF               	clrf	indf2,c
  4309   001ABC  C038  F034         	movff	sprintf@ret,?_sprintf
  4310   001AC0  C039  F035         	movff	sprintf@ret+1,?_sprintf+1
  4311   001AC4  0012               	return		;funcret
  4312   001AC6                     __end_of_sprintf:
  4313                           	callstack 0
  4314                           
  4315 ;; *************** function _rand *****************
  4316 ;; Defined at:
  4317 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\rand.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;		None
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  2   16[COMRAM] int 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0, cstack
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4333 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4334 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4335 ;;Total ram usage:        6 bytes
  4336 ;; Hardware stack levels used: 1
  4337 ;; Hardware stack levels required when called: 5
  4338 ;; This function calls:
  4339 ;;		___lmul
  4340 ;; This function is called by:
  4341 ;;		_send_mqtt_data_points
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text4
  4346   0018BE                     __ptext4:
  4347                           	callstack 0
  4348   0018BE                     _rand:
  4349                           	callstack 24
  4350   0018BE  C0FC  F005         	movff	_seed,___lmul@multiplier
  4351   0018C2  C0FD  F006         	movff	_seed+1,___lmul@multiplier+1
  4352   0018C6  C0FE  F007         	movff	_seed+2,___lmul@multiplier+2
  4353   0018CA  C0FF  F008         	movff	_seed+3,___lmul@multiplier+3
  4354   0018CE  0E2D               	movlw	45
  4355   0018D0  6E09               	movwf	___lmul@multiplicand^0,c
  4356   0018D2  0E7F               	movlw	127
  4357   0018D4  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  4358   0018D6  0E95               	movlw	149
  4359   0018D8  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  4360   0018DA  0E4C               	movlw	76
  4361   0018DC  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  4362   0018DE  EC96  F00C         	call	___lmul	;wreg free
  4363   0018E2  0E01               	movlw	1
  4364   0018E4  2405               	addwf	?___lmul^0,w,c
  4365   0018E6  0100               	movlb	0	; () banked
  4366   0018E8  6FFC               	movwf	_seed& (0+255),b
  4367   0018EA  0E00               	movlw	0
  4368   0018EC  2006               	addwfc	(?___lmul+1)^0,w,c
  4369   0018EE  6FFD               	movwf	(_seed+1)& (0+255),b
  4370   0018F0  0E00               	movlw	0
  4371   0018F2  2007               	addwfc	(?___lmul+2)^0,w,c
  4372   0018F4  6FFE               	movwf	(_seed+2)& (0+255),b
  4373   0018F6  0E00               	movlw	0
  4374   0018F8  2008               	addwfc	(?___lmul+3)^0,w,c
  4375   0018FA  6FFF               	movwf	(_seed+3)& (0+255),b
  4376   0018FC                     
  4377                           ; BSR set to: 0
  4378   0018FC  C0FC  F013         	movff	_seed,??_rand
  4379   001900  C0FD  F014         	movff	_seed+1,??_rand+1
  4380   001904  C0FE  F015         	movff	_seed+2,??_rand+2
  4381   001908  C0FF  F016         	movff	_seed+3,??_rand+3
  4382   00190C  0E12               	movlw	18
  4383   00190E  EF8E  F00C         	goto	u1230
  4384   001912                     u1235:
  4385   001912  90D8               	bcf	status,0,c
  4386   001914  3216               	rrcf	(??_rand+3)^0,f,c
  4387   001916  3215               	rrcf	(??_rand+2)^0,f,c
  4388   001918  3214               	rrcf	(??_rand+1)^0,f,c
  4389   00191A  3213               	rrcf	??_rand^0,f,c
  4390   00191C                     u1230:
  4391   00191C  2EE8               	decfsz	wreg,f,c
  4392   00191E  EF89  F00C         	goto	u1235
  4393   001922  C013  F011         	movff	??_rand,?_rand
  4394   001926  C014  F012         	movff	??_rand+1,?_rand+1
  4395   00192A                     
  4396                           ; BSR set to: 0
  4397   00192A  0012               	return		;funcret
  4398   00192C                     __end_of_rand:
  4399                           	callstack 0
  4400                           
  4401 ;; *************** function ___lmul *****************
  4402 ;; Defined at:
  4403 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul32.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  multiplier      4    4[COMRAM] unsigned long 
  4406 ;;  multiplicand    4    8[COMRAM] unsigned long 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  product         4   12[COMRAM] unsigned long 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  4    4[COMRAM] unsigned long 
  4411 ;; Registers used:
  4412 ;;		wreg, status,2, status,0
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4418 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4419 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4421 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4422 ;;Total ram usage:       12 bytes
  4423 ;; Hardware stack levels used: 1
  4424 ;; Hardware stack levels required when called: 4
  4425 ;; This function calls:
  4426 ;;		Nothing
  4427 ;; This function is called by:
  4428 ;;		_rand
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           	psect	text5
  4433   00192C                     __ptext5:
  4434                           	callstack 0
  4435   00192C                     ___lmul:
  4436                           	callstack 24
  4437   00192C  0E00               	movlw	0
  4438   00192E  6E0D               	movwf	___lmul@product^0,c
  4439   001930  0E00               	movlw	0
  4440   001932  6E0E               	movwf	(___lmul@product+1)^0,c
  4441   001934  0E00               	movlw	0
  4442   001936  6E0F               	movwf	(___lmul@product+2)^0,c
  4443   001938  0E00               	movlw	0
  4444   00193A  6E10               	movwf	(___lmul@product+3)^0,c
  4445   00193C                     l2127:
  4446   00193C  A005               	btfss	___lmul@multiplier^0,0,c
  4447   00193E  EFA3  F00C         	goto	u1201
  4448   001942  EFA5  F00C         	goto	u1200
  4449   001946                     u1201:
  4450   001946  EFAD  F00C         	goto	l2131
  4451   00194A                     u1200:
  4452   00194A  5009               	movf	___lmul@multiplicand^0,w,c
  4453   00194C  260D               	addwf	___lmul@product^0,f,c
  4454   00194E  500A               	movf	(___lmul@multiplicand+1)^0,w,c
  4455   001950  220E               	addwfc	(___lmul@product+1)^0,f,c
  4456   001952  500B               	movf	(___lmul@multiplicand+2)^0,w,c
  4457   001954  220F               	addwfc	(___lmul@product+2)^0,f,c
  4458   001956  500C               	movf	(___lmul@multiplicand+3)^0,w,c
  4459   001958  2210               	addwfc	(___lmul@product+3)^0,f,c
  4460   00195A                     l2131:
  4461   00195A  90D8               	bcf	status,0,c
  4462   00195C  3609               	rlcf	___lmul@multiplicand^0,f,c
  4463   00195E  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4464   001960  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4465   001962  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4466   001964  90D8               	bcf	status,0,c
  4467   001966  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
  4468   001968  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
  4469   00196A  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
  4470   00196C  3205               	rrcf	___lmul@multiplier^0,f,c
  4471   00196E  5005               	movf	___lmul@multiplier^0,w,c
  4472   001970  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
  4473   001972  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
  4474   001974  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
  4475   001976  A4D8               	btfss	status,2,c
  4476   001978  EFC0  F00C         	goto	u1211
  4477   00197C  EFC2  F00C         	goto	u1210
  4478   001980                     u1211:
  4479   001980  EF9E  F00C         	goto	l2127
  4480   001984                     u1210:
  4481   001984  C00D  F005         	movff	___lmul@product,?___lmul
  4482   001988  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  4483   00198C  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  4484   001990  C010  F008         	movff	___lmul@product+3,?___lmul+3
  4485   001994  0012               	return		;funcret
  4486   001996                     __end_of___lmul:
  4487                           	callstack 0
  4488                           
  4489 ;; *************** function _printf *****************
  4490 ;; Defined at:
  4491 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\printf.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;  fmt             1   51[COMRAM] PTR const unsigned char 
  4494 ;;		 -> STR_2(5), 
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;  ret             2    0        int 
  4497 ;;  ap              1   54[COMRAM] PTR void [1]
  4498 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  2   51[COMRAM] int 
  4501 ;; Registers used:
  4502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4508 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4509 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4511 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4512 ;;Total ram usage:        4 bytes
  4513 ;; Hardware stack levels used: 1
  4514 ;; Hardware stack levels required when called: 9
  4515 ;; This function calls:
  4516 ;;		_vfprintf
  4517 ;; This function is called by:
  4518 ;;		_send_mqtt_data_points
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text6
  4523   001C5A                     __ptext6:
  4524                           	callstack 0
  4525   001C5A                     _printf:
  4526                           	callstack 20
  4527   001C5A  0E35               	movlw	low (?_printf+1)
  4528   001C5C  6E37               	movwf	printf@ap^0,c
  4529   001C5E  0E00               	movlw	0
  4530   001C60  6E30               	movwf	vfprintf@fp^0,c
  4531   001C62  C034  F031         	movff	printf@fmt,vfprintf@fmt
  4532   001C66  0E37               	movlw	low printf@ap
  4533   001C68  6E32               	movwf	vfprintf@ap^0,c
  4534   001C6A  ECCB  F00C         	call	_vfprintf	;wreg free
  4535   001C6E  0012               	return		;funcret
  4536   001C70                     __end_of_printf:
  4537                           	callstack 0
  4538                           
  4539 ;; *************** function _vfprintf *****************
  4540 ;; Defined at:
  4541 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  fp              1   47[COMRAM] PTR struct _IO_FILE
  4544 ;;		 -> NULL(0), sprintf@f(11), 
  4545 ;;  fmt             1   48[COMRAM] PTR const unsigned char 
  4546 ;;		 -> STR_2(5), STR_1(4), 
  4547 ;;  ap              1   49[COMRAM] PTR PTR void 
  4548 ;;		 -> printf@ap(1), sprintf@ap(1), 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  cfmt            1   50[COMRAM] PTR unsigned char 
  4551 ;;		 -> STR_2(5), STR_1(4), 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  2   47[COMRAM] int 
  4554 ;; Registers used:
  4555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4561 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4564 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4565 ;;Total ram usage:        4 bytes
  4566 ;; Hardware stack levels used: 1
  4567 ;; Hardware stack levels required when called: 8
  4568 ;; This function calls:
  4569 ;;		_vfpfcnvrt
  4570 ;; This function is called by:
  4571 ;;		_sprintf
  4572 ;;		_printf
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text7
  4577   001996                     __ptext7:
  4578                           	callstack 0
  4579   001996                     _vfprintf:
  4580                           	callstack 20
  4581   001996                     
  4582                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  4583   001996  C031  F033         	movff	vfprintf@fmt,vfprintf@cfmt
  4584   00199A                     
  4585                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  4586   00199A  0E00               	movlw	0
  4587   00199C  6E47               	movwf	(_nout+1)^0,c
  4588   00199E  0E00               	movlw	0
  4589   0019A0  6E46               	movwf	_nout^0,c
  4590                           
  4591                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4592   0019A2  EFE0  F00C         	goto	l2141
  4593   0019A6                     l2139:
  4594                           
  4595                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  4596   0019A6  C030  F021         	movff	vfprintf@fp,vfpfcnvrt@fp
  4597   0019AA  0E33               	movlw	low vfprintf@cfmt
  4598   0019AC  6E22               	movwf	vfpfcnvrt@fmt^0,c
  4599   0019AE  C032  F023         	movff	vfprintf@ap,vfpfcnvrt@ap
  4600   0019B2  6A24               	clrf	(vfpfcnvrt@ap+1)^0,c
  4601   0019B4  EC06  F008         	call	_vfpfcnvrt	;wreg free
  4602   0019B8  5021               	movf	?_vfpfcnvrt^0,w,c
  4603   0019BA  2646               	addwf	_nout^0,f,c
  4604   0019BC  5022               	movf	(?_vfpfcnvrt+1)^0,w,c
  4605   0019BE  2247               	addwfc	(_nout+1)^0,f,c
  4606   0019C0                     l2141:
  4607                           
  4608                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4609   0019C0  C033  FFF6         	movff	vfprintf@cfmt,tblptrl
  4610   0019C4                     	if	1	;There is more than 1 active tblptr byte
  4611   0019C4  0E10               	movlw	high __smallconst
  4612   0019C6  6EF7               	movwf	tblptrh,c
  4613   0019C8                     	endif
  4614   0019C8                     	if	0	;tblptru may be non-zero
  4615   0019C8                     	endif
  4616   0019C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4617   0019C8  0E00               	movlw	low (__smallconst shr (0+16))
  4618   0019CA  6EF8               	movwf	tblptru,c
  4619   0019CC                     	endif
  4620   0019CC  0008               	tblrd		*
  4621   0019CE  50F5               	movf	tablat,w,c
  4622   0019D0  0900               	iorlw	0
  4623   0019D2  A4D8               	btfss	status,2,c
  4624   0019D4  EFEE  F00C         	goto	u1221
  4625   0019D8  EFF0  F00C         	goto	u1220
  4626   0019DC                     u1221:
  4627   0019DC  EFD3  F00C         	goto	l2139
  4628   0019E0                     u1220:
  4629   0019E0                     
  4630                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  4631   0019E0  C046  F030         	movff	_nout,?_vfprintf
  4632   0019E4  C047  F031         	movff	_nout+1,?_vfprintf+1
  4633   0019E8  0012               	return		;funcret
  4634   0019EA                     __end_of_vfprintf:
  4635                           	callstack 0
  4636                           
  4637 ;; *************** function _vfpfcnvrt *****************
  4638 ;; Defined at:
  4639 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;  fp              1   32[COMRAM] PTR struct _IO_FILE
  4642 ;;		 -> NULL(0), sprintf@f(11), 
  4643 ;;  fmt             1   33[COMRAM] PTR PTR unsigned char 
  4644 ;;		 -> vfprintf@cfmt(1), 
  4645 ;;  ap              2   34[COMRAM] PTR PTR void 
  4646 ;;		 -> printf@ap(1), sprintf@ap(1), 
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;  cp              1   37[COMRAM] PTR unsigned char 
  4649 ;;		 -> ?_printf(2), ?_sprintf(2), send_mqtt_data_points@buffer(64), 
  4650 ;;  convarg         4   42[COMRAM] struct .
  4651 ;;  cnt             2   38[COMRAM] int 
  4652 ;;  c               1   46[COMRAM] unsigned char 
  4653 ;;  cp              1   41[COMRAM] PTR unsigned char 
  4654 ;;		 -> STR_2(5), STR_1(4), 
  4655 ;;  done            1   40[COMRAM] _Bool 
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  2   32[COMRAM] int 
  4658 ;; Registers used:
  4659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4665 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4666 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4667 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4668 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4669 ;;Total ram usage:       15 bytes
  4670 ;; Hardware stack levels used: 1
  4671 ;; Hardware stack levels required when called: 7
  4672 ;; This function calls:
  4673 ;;		___awdiv
  4674 ;;		___awmod
  4675 ;;		_abs
  4676 ;;		_fputc
  4677 ;; This function is called by:
  4678 ;;		_vfprintf
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682                           	psect	text8
  4683   00100C                     __ptext8:
  4684                           	callstack 0
  4685   00100C                     _vfpfcnvrt:
  4686                           	callstack 20
  4687   00100C                     
  4688                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1191:  int cnt = 0;
  4689   00100C  0E00               	movlw	0
  4690   00100E  6E28               	movwf	(vfpfcnvrt@cnt+1)^0,c
  4691   001010  0E00               	movlw	0
  4692   001012  6E27               	movwf	vfpfcnvrt@cnt^0,c
  4693   001014                     
  4694                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1201:     if ((*f
      +                          mt)[0] == '%') {
  4695   001014  5022               	movf	vfpfcnvrt@fmt^0,w,c
  4696   001016  6ED9               	movwf	fsr2l,c
  4697   001018  6ADA               	clrf	fsr2h,c
  4698   00101A  CFDF FFF6          	movff	indf2,tblptrl
  4699   00101E                     	if	1	;There is more than 1 active tblptr byte
  4700   00101E  0E10               	movlw	high __smallconst
  4701   001020  6EF7               	movwf	tblptrh,c
  4702   001022                     	endif
  4703   001022                     	if	0	;tblptru may be non-zero
  4704   001022                     	endif
  4705   001022                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4706   001022  0E00               	movlw	low (__smallconst shr (0+16))
  4707   001024  6EF8               	movwf	tblptru,c
  4708   001026                     	endif
  4709   001026  0008               	tblrd		*
  4710   001028  50F5               	movf	tablat,w,c
  4711   00102A  0A25               	xorlw	37
  4712   00102C  A4D8               	btfss	status,2,c
  4713   00102E  EF1B  F008         	goto	u1021
  4714   001032  EF1D  F008         	goto	u1020
  4715   001036                     u1021:
  4716   001036  EF82  F009         	goto	l2077
  4717   00103A                     u1020:
  4718   00103A                     
  4719                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  4720   00103A  5022               	movf	vfpfcnvrt@fmt^0,w,c
  4721   00103C  6ED9               	movwf	fsr2l,c
  4722   00103E  6ADA               	clrf	fsr2h,c
  4723   001040  2ADF               	incf	indf2,f,c
  4724   001042                     
  4725                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  4726   001042  0E00               	movlw	0
  4727   001044  6E49               	movwf	(_width+1)^0,c
  4728   001046  0E00               	movlw	0
  4729   001048  6E48               	movwf	_width^0,c
  4730   00104A  C048  F04C         	movff	_width,_flags
  4731   00104E                     
  4732                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  4733   00104E  684A               	setf	_prec^0,c
  4734   001050  684B               	setf	(_prec+1)^0,c
  4735   001052                     
  4736                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  4737   001052  5022               	movf	vfpfcnvrt@fmt^0,w,c
  4738   001054  6ED9               	movwf	fsr2l,c
  4739   001056  6ADA               	clrf	fsr2h,c
  4740   001058  50DF               	movf	indf2,w,c
  4741   00105A  6E2A               	movwf	vfpfcnvrt@cp^0,c
  4742   00105C                     
  4743                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4744   00105C  C02A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4745   001060                     	if	1	;There is more than 1 active tblptr byte
  4746   001060  0E10               	movlw	high __smallconst
  4747   001062  6EF7               	movwf	tblptrh,c
  4748   001064                     	endif
  4749   001064                     	if	0	;tblptru may be non-zero
  4750   001064                     	endif
  4751   001064                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4752   001064  0E00               	movlw	low (__smallconst shr (0+16))
  4753   001066  6EF8               	movwf	tblptru,c
  4754   001068                     	endif
  4755   001068  0008               	tblrd		*
  4756   00106A  50F5               	movf	tablat,w,c
  4757   00106C  0A64               	xorlw	100
  4758   00106E  B4D8               	btfsc	status,2,c
  4759   001070  EF3C  F008         	goto	u1031
  4760   001074  EF3E  F008         	goto	u1030
  4761   001078                     u1031:
  4762   001078  EF4E  F008         	goto	l2011
  4763   00107C                     u1030:
  4764   00107C  C02A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4765   001080                     	if	1	;There is more than 1 active tblptr byte
  4766   001080  0E10               	movlw	high __smallconst
  4767   001082  6EF7               	movwf	tblptrh,c
  4768   001084                     	endif
  4769   001084                     	if	0	;tblptru may be non-zero
  4770   001084                     	endif
  4771   001084                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4772   001084  0E00               	movlw	low (__smallconst shr (0+16))
  4773   001086  6EF8               	movwf	tblptru,c
  4774   001088                     	endif
  4775   001088  0008               	tblrd		*
  4776   00108A  50F5               	movf	tablat,w,c
  4777   00108C  0A69               	xorlw	105
  4778   00108E  A4D8               	btfss	status,2,c
  4779   001090  EF4C  F008         	goto	u1041
  4780   001094  EF4E  F008         	goto	u1040
  4781   001098                     u1041:
  4782   001098  EFE3  F008         	goto	l1175
  4783   00109C                     u1040:
  4784   00109C                     l2011:
  4785                           
  4786                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4787   00109C  C023  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4788   0010A0  C024  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4789   0010A4  0E02               	movlw	2
  4790   0010A6  26DF               	addwf	indf2,f,c
  4791   0010A8  5CDF               	subwf	indf2,w,c
  4792   0010AA  6ED9               	movwf	fsr2l,c
  4793   0010AC  6ADA               	clrf	fsr2h,c
  4794   0010AE  CFDE F02B          	movff	postinc2,vfpfcnvrt@convarg
  4795   0010B2  CFDE F02C          	movff	postinc2,vfpfcnvrt@convarg+1
  4796   0010B6                     
  4797                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  4798   0010B6  5022               	movf	vfpfcnvrt@fmt^0,w,c
  4799   0010B8  6ED9               	movwf	fsr2l,c
  4800   0010BA  6ADA               	clrf	fsr2h,c
  4801   0010BC  282A               	incf	vfpfcnvrt@cp^0,w,c
  4802   0010BE  6EDF               	movwf	indf2,c
  4803   0010C0                     
  4804                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  4805   0010C0  0E20               	movlw	32
  4806   0010C2  6E2F               	movwf	vfpfcnvrt@c^0,c
  4807   0010C4                     
  4808                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  4809   0010C4  BE2C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  4810   0010C6  EF67  F008         	goto	u1051
  4811   0010CA  EF6A  F008         	goto	u1050
  4812   0010CE                     u1051:
  4813   0010CE  0E01               	movlw	1
  4814   0010D0  EF6B  F008         	goto	u1060
  4815   0010D4                     u1050:
  4816   0010D4  0E00               	movlw	0
  4817   0010D6                     u1060:
  4818   0010D6  6E29               	movwf	vfpfcnvrt@done^0,c
  4819   0010D8                     l2019:
  4820                           
  4821                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  4822   0010D8  062F               	decf	vfpfcnvrt@c^0,f,c
  4823   0010DA  0E00               	movlw	low _dbuf
  4824   0010DC  242F               	addwf	vfpfcnvrt@c^0,w,c
  4825   0010DE  6ED9               	movwf	fsr2l,c
  4826   0010E0  6ADA               	clrf	fsr2h,c
  4827   0010E2  0E01               	movlw	high _dbuf
  4828   0010E4  22DA               	addwfc	fsr2h,f,c
  4829   0010E6  C02B  F017         	movff	vfpfcnvrt@convarg,___awmod@dividend
  4830   0010EA  C02C  F018         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  4831   0010EE  0E00               	movlw	0
  4832   0010F0  6E1A               	movwf	(___awmod@divisor+1)^0,c
  4833   0010F2  0E0A               	movlw	10
  4834   0010F4  6E19               	movwf	___awmod@divisor^0,c
  4835   0010F6  EC32  F00B         	call	___awmod	;wreg free
  4836   0010FA  C017  F01D         	movff	?___awmod,abs@a
  4837   0010FE  C018  F01E         	movff	?___awmod+1,abs@a+1
  4838   001102  ECBD  F00D         	call	_abs	;wreg free
  4839   001106  501D               	movf	?_abs^0,w,c
  4840   001108  0F30               	addlw	48
  4841   00110A  6EDF               	movwf	indf2,c
  4842   00110C                     
  4843                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  4844   00110C  C02B  F005         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  4845   001110  C02C  F006         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  4846   001114  0E00               	movlw	0
  4847   001116  6E08               	movwf	(___awdiv@divisor+1)^0,c
  4848   001118  0E0A               	movlw	10
  4849   00111A  6E07               	movwf	___awdiv@divisor^0,c
  4850   00111C  EC1F  F00A         	call	___awdiv	;wreg free
  4851   001120  C005  F02B         	movff	?___awdiv,vfpfcnvrt@convarg
  4852   001124  C006  F02C         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  4853   001128                     
  4854                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  4855   001128  4A27               	infsnz	vfpfcnvrt@cnt^0,f,c
  4856   00112A  2A28               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  4857   00112C                     
  4858                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  4859   00112C  502B               	movf	vfpfcnvrt@convarg^0,w,c
  4860   00112E  102C               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  4861   001130  B4D8               	btfsc	status,2,c
  4862   001132  EF9D  F008         	goto	u1071
  4863   001136  EF9F  F008         	goto	u1070
  4864   00113A                     u1071:
  4865   00113A  EFA7  F008         	goto	l2029
  4866   00113E                     u1070:
  4867   00113E  502F               	movf	vfpfcnvrt@c^0,w,c
  4868   001140  A4D8               	btfss	status,2,c
  4869   001142  EFA5  F008         	goto	u1081
  4870   001146  EFA7  F008         	goto	u1080
  4871   00114A                     u1081:
  4872   00114A  EF6C  F008         	goto	l2019
  4873   00114E                     u1080:
  4874   00114E                     l2029:
  4875                           
  4876                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  4877   00114E  502F               	movf	vfpfcnvrt@c^0,w,c
  4878   001150  B4D8               	btfsc	status,2,c
  4879   001152  EFAD  F008         	goto	u1091
  4880   001156  EFAF  F008         	goto	u1090
  4881   00115A                     u1091:
  4882   00115A  EFD4  F008         	goto	l2041
  4883   00115E                     u1090:
  4884   00115E  5029               	movf	vfpfcnvrt@done^0,w,c
  4885   001160  B4D8               	btfsc	status,2,c
  4886   001162  EFB5  F008         	goto	u1101
  4887   001166  EFB7  F008         	goto	u1100
  4888   00116A                     u1101:
  4889   00116A  EFD4  F008         	goto	l2041
  4890   00116E                     u1100:
  4891   00116E                     
  4892                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  4893   00116E  062F               	decf	vfpfcnvrt@c^0,f,c
  4894   001170  0E00               	movlw	low _dbuf
  4895   001172  242F               	addwf	vfpfcnvrt@c^0,w,c
  4896   001174  6ED9               	movwf	fsr2l,c
  4897   001176  6ADA               	clrf	fsr2h,c
  4898   001178  0E01               	movlw	high _dbuf
  4899   00117A  22DA               	addwfc	fsr2h,f,c
  4900   00117C  0E2D               	movlw	45
  4901   00117E  6EDF               	movwf	indf2,c
  4902   001180                     
  4903                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  4904   001180  4A27               	infsnz	vfpfcnvrt@cnt^0,f,c
  4905   001182  2A28               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  4906   001184  EFD4  F008         	goto	l2041
  4907   001188                     l2037:
  4908                           
  4909                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  4910   001188  0E00               	movlw	low _dbuf
  4911   00118A  242F               	addwf	vfpfcnvrt@c^0,w,c
  4912   00118C  6ED9               	movwf	fsr2l,c
  4913   00118E  6ADA               	clrf	fsr2h,c
  4914   001190  0E01               	movlw	high _dbuf
  4915   001192  22DA               	addwfc	fsr2h,f,c
  4916   001194  50DF               	movf	indf2,w,c
  4917   001196  6E25               	movwf	??_vfpfcnvrt^0,c
  4918   001198  5025               	movf	??_vfpfcnvrt^0,w,c
  4919   00119A  6E07               	movwf	fputc@c^0,c
  4920   00119C  6A08               	clrf	(fputc@c+1)^0,c
  4921   00119E  C021  F009         	movff	vfpfcnvrt@fp,fputc@fp
  4922   0011A2  EC89  F00B         	call	_fputc	;wreg free
  4923   0011A6  2A2F               	incf	vfpfcnvrt@c^0,f,c
  4924   0011A8                     l2041:
  4925                           
  4926                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  4927   0011A8  0E20               	movlw	32
  4928   0011AA  182F               	xorwf	vfpfcnvrt@c^0,w,c
  4929   0011AC  A4D8               	btfss	status,2,c
  4930   0011AE  EFDB  F008         	goto	u1111
  4931   0011B2  EFDD  F008         	goto	u1110
  4932   0011B6                     u1111:
  4933   0011B6  EFC4  F008         	goto	l2037
  4934   0011BA                     u1110:
  4935   0011BA                     l1185:
  4936                           
  4937                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1427:    return c
      +                          nt;
  4938   0011BA  C027  F021         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  4939   0011BE  C028  F022         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  4940   0011C2  EF9B  F009         	goto	l1186
  4941   0011C6                     l1175:
  4942                           
  4943                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  4944   0011C6  6A29               	clrf	vfpfcnvrt@done^0,c
  4945   0011C8                     
  4946                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  4947   0011C8  5022               	movf	vfpfcnvrt@fmt^0,w,c
  4948   0011CA  6ED9               	movwf	fsr2l,c
  4949   0011CC  6ADA               	clrf	fsr2h,c
  4950   0011CE  CFDF FFF6          	movff	indf2,tblptrl
  4951   0011D2                     	if	1	;There is more than 1 active tblptr byte
  4952   0011D2  0E10               	movlw	high __smallconst
  4953   0011D4  6EF7               	movwf	tblptrh,c
  4954   0011D6                     	endif
  4955   0011D6                     	if	0	;tblptru may be non-zero
  4956   0011D6                     	endif
  4957   0011D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4958   0011D6  0E00               	movlw	low (__smallconst shr (0+16))
  4959   0011D8  6EF8               	movwf	tblptru,c
  4960   0011DA                     	endif
  4961   0011DA  0008               	tblrd		*
  4962   0011DC  50F5               	movf	tablat,w,c
  4963   0011DE  0A73               	xorlw	115
  4964   0011E0  A4D8               	btfss	status,2,c
  4965   0011E2  EFF5  F008         	goto	u1121
  4966   0011E6  EFF7  F008         	goto	u1120
  4967   0011EA                     u1121:
  4968   0011EA  EFFF  F008         	goto	l2049
  4969   0011EE                     u1120:
  4970   0011EE                     
  4971                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  4972   0011EE  5022               	movf	vfpfcnvrt@fmt^0,w,c
  4973   0011F0  6ED9               	movwf	fsr2l,c
  4974   0011F2  6ADA               	clrf	fsr2h,c
  4975   0011F4  2ADF               	incf	indf2,f,c
  4976   0011F6                     l2047:
  4977                           
  4978                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  4979   0011F6  0E01               	movlw	1
  4980   0011F8  6E29               	movwf	vfpfcnvrt@done^0,c
  4981                           
  4982                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1660:   }
  4983   0011FA  EF47  F009         	goto	l2059
  4984   0011FE                     l2049:
  4985   0011FE  5022               	movf	vfpfcnvrt@fmt^0,w,c
  4986   001200  6ED9               	movwf	fsr2l,c
  4987   001202  6ADA               	clrf	fsr2h,c
  4988   001204  CFDF FFF6          	movff	indf2,tblptrl
  4989   001208                     	if	1	;There is more than 1 active tblptr byte
  4990   001208  0E10               	movlw	high __smallconst
  4991   00120A  6EF7               	movwf	tblptrh,c
  4992   00120C                     	endif
  4993   00120C                     	if	0	;tblptru may be non-zero
  4994   00120C                     	endif
  4995   00120C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4996   00120C  0E00               	movlw	low (__smallconst shr (0+16))
  4997   00120E  6EF8               	movwf	tblptru,c
  4998   001210                     	endif
  4999   001210  0008               	tblrd		*
  5000   001212  50F5               	movf	tablat,w,c
  5001   001214  0A6C               	xorlw	108
  5002   001216  A4D8               	btfss	status,2,c
  5003   001218  EF10  F009         	goto	u1131
  5004   00121C  EF12  F009         	goto	u1130
  5005   001220                     u1131:
  5006   001220  EF47  F009         	goto	l2059
  5007   001224                     u1130:
  5008   001224  5022               	movf	vfpfcnvrt@fmt^0,w,c
  5009   001226  6ED9               	movwf	fsr2l,c
  5010   001228  6ADA               	clrf	fsr2h,c
  5011   00122A  50DF               	movf	indf2,w,c
  5012   00122C  6E25               	movwf	??_vfpfcnvrt^0,c
  5013   00122E  0E01               	movlw	1
  5014   001230  2625               	addwf	??_vfpfcnvrt^0,f,c
  5015   001232  C025  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5016   001236                     	if	1	;There is more than 1 active tblptr byte
  5017   001236  0E10               	movlw	high __smallconst
  5018   001238  6EF7               	movwf	tblptrh,c
  5019   00123A                     	endif
  5020   00123A                     	if	0	;tblptru may be non-zero
  5021   00123A                     	endif
  5022   00123A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5023   00123A  0E00               	movlw	low (__smallconst shr (0+16))
  5024   00123C  6EF8               	movwf	tblptru,c
  5025   00123E                     	endif
  5026   00123E  0008               	tblrd		*
  5027   001240  50F5               	movf	tablat,w,c
  5028   001242  0A6C               	xorlw	108
  5029   001244  A4D8               	btfss	status,2,c
  5030   001246  EF27  F009         	goto	u1141
  5031   00124A  EF29  F009         	goto	u1140
  5032   00124E                     u1141:
  5033   00124E  EF47  F009         	goto	l2059
  5034   001252                     u1140:
  5035   001252  5022               	movf	vfpfcnvrt@fmt^0,w,c
  5036   001254  6ED9               	movwf	fsr2l,c
  5037   001256  6ADA               	clrf	fsr2h,c
  5038   001258  50DF               	movf	indf2,w,c
  5039   00125A  6E25               	movwf	??_vfpfcnvrt^0,c
  5040   00125C  0E02               	movlw	2
  5041   00125E  2625               	addwf	??_vfpfcnvrt^0,f,c
  5042   001260  C025  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5043   001264                     	if	1	;There is more than 1 active tblptr byte
  5044   001264  0E10               	movlw	high __smallconst
  5045   001266  6EF7               	movwf	tblptrh,c
  5046   001268                     	endif
  5047   001268                     	if	0	;tblptru may be non-zero
  5048   001268                     	endif
  5049   001268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5050   001268  0E00               	movlw	low (__smallconst shr (0+16))
  5051   00126A  6EF8               	movwf	tblptru,c
  5052   00126C                     	endif
  5053   00126C  0008               	tblrd		*
  5054   00126E  50F5               	movf	tablat,w,c
  5055   001270  0A73               	xorlw	115
  5056   001272  A4D8               	btfss	status,2,c
  5057   001274  EF3E  F009         	goto	u1151
  5058   001278  EF40  F009         	goto	u1150
  5059   00127C                     u1151:
  5060   00127C  EF47  F009         	goto	l2059
  5061   001280                     u1150:
  5062   001280                     
  5063                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  5064   001280  5022               	movf	vfpfcnvrt@fmt^0,w,c
  5065   001282  6ED9               	movwf	fsr2l,c
  5066   001284  6ADA               	clrf	fsr2h,c
  5067   001286  0E03               	movlw	3
  5068   001288  26DF               	addwf	indf2,f,c
  5069   00128A  EFFB  F008         	goto	l2047
  5070   00128E                     l2059:
  5071                           
  5072                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  5073   00128E  5029               	movf	vfpfcnvrt@done^0,w,c
  5074   001290  B4D8               	btfsc	status,2,c
  5075   001292  EF4D  F009         	goto	u1161
  5076   001296  EF4F  F009         	goto	u1160
  5077   00129A                     u1161:
  5078   00129A  EF78  F009         	goto	l2071
  5079   00129E                     u1160:
  5080   00129E                     
  5081                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1669:    for (cha
      +                          r * cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0)); *cp != '\0'; cp++) {
  5082   00129E  C023  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5083   0012A2  C024  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5084   0012A6  0E02               	movlw	2
  5085   0012A8  26DF               	addwf	indf2,f,c
  5086   0012AA  5CDF               	subwf	indf2,w,c
  5087   0012AC  6ED9               	movwf	fsr2l,c
  5088   0012AE  6ADA               	clrf	fsr2h,c
  5089   0012B0  CFDE F026          	movff	postinc2,vfpfcnvrt@cp_1296
  5090   0012B4  EF6B  F009         	goto	l2069
  5091   0012B8                     l2063:
  5092                           
  5093                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1670:     fputc(*
      +                          cp, fp);
  5094   0012B8  5026               	movf	vfpfcnvrt@cp_1296^0,w,c
  5095   0012BA  6ED9               	movwf	fsr2l,c
  5096   0012BC  6ADA               	clrf	fsr2h,c
  5097   0012BE  50DF               	movf	indf2,w,c
  5098   0012C0  6E25               	movwf	??_vfpfcnvrt^0,c
  5099   0012C2  5025               	movf	??_vfpfcnvrt^0,w,c
  5100   0012C4  6E07               	movwf	fputc@c^0,c
  5101   0012C6  6A08               	clrf	(fputc@c+1)^0,c
  5102   0012C8  C021  F009         	movff	vfpfcnvrt@fp,fputc@fp
  5103   0012CC  EC89  F00B         	call	_fputc	;wreg free
  5104   0012D0                     
  5105                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1672:     cnt++;
  5106   0012D0  4A27               	infsnz	vfpfcnvrt@cnt^0,f,c
  5107   0012D2  2A28               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  5108   0012D4                     
  5109                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1674:    }
  5110   0012D4  2A26               	incf	vfpfcnvrt@cp_1296^0,f,c
  5111   0012D6                     l2069:
  5112   0012D6  5026               	movf	vfpfcnvrt@cp_1296^0,w,c
  5113   0012D8  6ED9               	movwf	fsr2l,c
  5114   0012DA  6ADA               	clrf	fsr2h,c
  5115   0012DC  50DF               	movf	indf2,w,c
  5116   0012DE  A4D8               	btfss	status,2,c
  5117   0012E0  EF74  F009         	goto	u1171
  5118   0012E4  EF76  F009         	goto	u1170
  5119   0012E8                     u1171:
  5120   0012E8  EF5C  F009         	goto	l2063
  5121   0012EC                     u1170:
  5122   0012EC  EFDD  F008         	goto	l1185
  5123   0012F0                     l2071:
  5124                           
  5125                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  5126   0012F0  5022               	movf	vfpfcnvrt@fmt^0,w,c
  5127   0012F2  6ED9               	movwf	fsr2l,c
  5128   0012F4  6ADA               	clrf	fsr2h,c
  5129   0012F6  2ADF               	incf	indf2,f,c
  5130   0012F8                     
  5131                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1807:         ret
      +                          urn (int) 0;
  5132   0012F8  0E00               	movlw	0
  5133   0012FA  6E22               	movwf	(?_vfpfcnvrt+1)^0,c
  5134   0012FC  0E00               	movlw	0
  5135   0012FE  6E21               	movwf	?_vfpfcnvrt^0,c
  5136   001300  EF9B  F009         	goto	l1186
  5137   001304                     l2077:
  5138                           
  5139                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  5140   001304  5022               	movf	vfpfcnvrt@fmt^0,w,c
  5141   001306  6ED9               	movwf	fsr2l,c
  5142   001308  6ADA               	clrf	fsr2h,c
  5143   00130A  CFDF FFF6          	movff	indf2,tblptrl
  5144   00130E                     	if	1	;There is more than 1 active tblptr byte
  5145   00130E  0E10               	movlw	high __smallconst
  5146   001310  6EF7               	movwf	tblptrh,c
  5147   001312                     	endif
  5148   001312                     	if	0	;tblptru may be non-zero
  5149   001312                     	endif
  5150   001312                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5151   001312  0E00               	movlw	low (__smallconst shr (0+16))
  5152   001314  6EF8               	movwf	tblptru,c
  5153   001316                     	endif
  5154   001316  0008               	tblrd		*
  5155   001318  50F5               	movf	tablat,w,c
  5156   00131A  6E07               	movwf	fputc@c^0,c
  5157   00131C  6A08               	clrf	(fputc@c+1)^0,c
  5158   00131E  C021  F009         	movff	vfpfcnvrt@fp,fputc@fp
  5159   001322  EC89  F00B         	call	_fputc	;wreg free
  5160   001326                     
  5161                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  5162   001326  5022               	movf	vfpfcnvrt@fmt^0,w,c
  5163   001328  6ED9               	movwf	fsr2l,c
  5164   00132A  6ADA               	clrf	fsr2h,c
  5165   00132C  2ADF               	incf	indf2,f,c
  5166   00132E                     
  5167                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1813:     return 
      +                          (int) 1;
  5168   00132E  0E00               	movlw	0
  5169   001330  6E22               	movwf	(?_vfpfcnvrt+1)^0,c
  5170   001332  0E01               	movlw	1
  5171   001334  6E21               	movwf	?_vfpfcnvrt^0,c
  5172   001336                     l1186:
  5173   001336  0012               	return		;funcret
  5174   001338                     __end_of_vfpfcnvrt:
  5175                           	callstack 0
  5176                           
  5177 ;; *************** function _fputc *****************
  5178 ;; Defined at:
  5179 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  c               2    6[COMRAM] int 
  5182 ;;  fp              1    8[COMRAM] PTR struct _IO_FILE
  5183 ;;		 -> NULL(0), sprintf@f(11), 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;		None
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  2    6[COMRAM] int 
  5188 ;; Registers used:
  5189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5195 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5197 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5198 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5199 ;;Total ram usage:        8 bytes
  5200 ;; Hardware stack levels used: 1
  5201 ;; Hardware stack levels required when called: 6
  5202 ;; This function calls:
  5203 ;;		_putch
  5204 ;; This function is called by:
  5205 ;;		_vfpfcnvrt
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text9
  5210   001712                     __ptext9:
  5211                           	callstack 0
  5212   001712                     _fputc:
  5213                           	callstack 20
  5214   001712  5009               	movf	fputc@fp^0,w,c
  5215   001714  B4D8               	btfsc	status,2,c
  5216   001716  EF8F  F00B         	goto	u971
  5217   00171A  EF91  F00B         	goto	u970
  5218   00171E                     u971:
  5219   00171E  EF99  F00B         	goto	l1981
  5220   001722                     u970:
  5221   001722  5009               	movf	fputc@fp^0,w,c
  5222   001724  A4D8               	btfss	status,2,c
  5223   001726  EF97  F00B         	goto	u981
  5224   00172A  EF99  F00B         	goto	u980
  5225   00172E                     u981:
  5226   00172E  EF9E  F00B         	goto	l1983
  5227   001732                     u980:
  5228   001732                     l1981:
  5229   001732  5007               	movf	fputc@c^0,w,c
  5230   001734  EC8F  F00E         	call	_putch
  5231   001738  EFDD  F00B         	goto	l1218
  5232   00173C                     l1983:
  5233   00173C  5009               	movf	fputc@fp^0,w,c
  5234   00173E  6ED9               	movwf	fsr2l,c
  5235   001740  6ADA               	clrf	fsr2h,c
  5236   001742  0E09               	movlw	9
  5237   001744  26D9               	addwf	fsr2l,f,c
  5238   001746  50DE               	movf	postinc2,w,c
  5239   001748  10DE               	iorwf	postinc2,w,c
  5240   00174A  B4D8               	btfsc	status,2,c
  5241   00174C  EFAA  F00B         	goto	u991
  5242   001750  EFAC  F00B         	goto	u990
  5243   001754                     u991:
  5244   001754  EFC5  F00B         	goto	l1987
  5245   001758                     u990:
  5246   001758  5009               	movf	fputc@fp^0,w,c
  5247   00175A  6ED9               	movwf	fsr2l,c
  5248   00175C  6ADA               	clrf	fsr2h,c
  5249   00175E  0E09               	movlw	9
  5250   001760  26D9               	addwf	fsr2l,f,c
  5251   001762  5009               	movf	fputc@fp^0,w,c
  5252   001764  6EE1               	movwf	fsr1l,c
  5253   001766  6AE2               	clrf	fsr1h,c
  5254   001768  0E02               	movlw	2
  5255   00176A  26E1               	addwf	fsr1l,f,c
  5256   00176C  50DE               	movf	postinc2,w,c
  5257   00176E  5CE6               	subwf	postinc1,w,c
  5258   001770  50E6               	movf	postinc1,w,c
  5259   001772  0A80               	xorlw	128
  5260   001774  6E0E               	movwf	(??_fputc+4)^0,c
  5261   001776  50DE               	movf	postinc2,w,c
  5262   001778  0A80               	xorlw	128
  5263   00177A  580E               	subwfb	(??_fputc+4)^0,w,c
  5264   00177C  B0D8               	btfsc	status,0,c
  5265   00177E  EFC3  F00B         	goto	u1001
  5266   001782  EFC5  F00B         	goto	u1000
  5267   001786                     u1001:
  5268   001786  EFDD  F00B         	goto	l1218
  5269   00178A                     u1000:
  5270   00178A                     l1987:
  5271   00178A  5009               	movf	fputc@fp^0,w,c
  5272   00178C  6ED9               	movwf	fsr2l,c
  5273   00178E  6ADA               	clrf	fsr2h,c
  5274   001790  0E02               	movlw	2
  5275   001792  26D9               	addwf	fsr2l,f,c
  5276   001794  50DF               	movf	indf2,w,c
  5277   001796  6E0A               	movwf	??_fputc^0,c
  5278   001798  5009               	movf	fputc@fp^0,w,c
  5279   00179A  6ED9               	movwf	fsr2l,c
  5280   00179C  6ADA               	clrf	fsr2h,c
  5281   00179E  50DF               	movf	indf2,w,c
  5282   0017A0  240A               	addwf	??_fputc^0,w,c
  5283   0017A2  6ED9               	movwf	fsr2l,c
  5284   0017A4  6ADA               	clrf	fsr2h,c
  5285   0017A6  C007  FFDF         	movff	fputc@c,indf2
  5286   0017AA  5009               	movf	fputc@fp^0,w,c
  5287   0017AC  6ED9               	movwf	fsr2l,c
  5288   0017AE  6ADA               	clrf	fsr2h,c
  5289   0017B0  0E02               	movlw	2
  5290   0017B2  26D9               	addwf	fsr2l,f,c
  5291   0017B4  2ADE               	incf	postinc2,f,c
  5292   0017B6  0E00               	movlw	0
  5293   0017B8  22DD               	addwfc	postdec2,f,c
  5294   0017BA                     l1218:
  5295   0017BA  0012               	return		;funcret
  5296   0017BC                     __end_of_fputc:
  5297                           	callstack 0
  5298                           
  5299 ;; *************** function _putch *****************
  5300 ;; Defined at:
  5301 ;;		line 201 in file "mcc_generated_files/eusart1.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  txData          1    wreg     unsigned char 
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;  txData          1    5[COMRAM] unsigned char 
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  1    wreg      void 
  5308 ;; Registers used:
  5309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5316 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5318 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5319 ;;Total ram usage:        1 bytes
  5320 ;; Hardware stack levels used: 1
  5321 ;; Hardware stack levels required when called: 5
  5322 ;; This function calls:
  5323 ;;		_EUSART1_Write
  5324 ;; This function is called by:
  5325 ;;		_fputc
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text10
  5330   001D1E                     __ptext10:
  5331                           	callstack 0
  5332   001D1E                     _putch:
  5333                           	callstack 20
  5334                           
  5335                           ;incstack = 0
  5336                           ;putch@txData stored from wreg
  5337   001D1E  6E06               	movwf	putch@txData^0,c
  5338   001D20                     
  5339                           ;mcc_generated_files/eusart1.c: 201: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 202: {;mcc_generated_files/eusart1.c: 203:     EUSART1_Write(txData);
  5340   001D20  5006               	movf	putch@txData^0,w,c
  5341   001D22  ECF5  F00C         	call	_EUSART1_Write
  5342   001D26  0012               	return		;funcret
  5343   001D28                     __end_of_putch:
  5344                           	callstack 0
  5345                           
  5346 ;; *************** function _EUSART1_Write *****************
  5347 ;; Defined at:
  5348 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  txData          1    wreg     unsigned char 
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;  txData          1    4[COMRAM] unsigned char 
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5365 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5366 ;;Total ram usage:        1 bytes
  5367 ;; Hardware stack levels used: 1
  5368 ;; Hardware stack levels required when called: 4
  5369 ;; This function calls:
  5370 ;;		Nothing
  5371 ;; This function is called by:
  5372 ;;		_putch
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           	psect	text11
  5377   0019EA                     __ptext11:
  5378                           	callstack 0
  5379   0019EA                     _EUSART1_Write:
  5380                           	callstack 20
  5381                           
  5382                           ;incstack = 0
  5383                           ;EUSART1_Write@txData stored from wreg
  5384   0019EA  6E05               	movwf	EUSART1_Write@txData^0,c
  5385   0019EC                     l1879:
  5386                           
  5387                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  5388   0019EC  5051               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  5389   0019EE  B4D8               	btfsc	status,2,c
  5390   0019F0  EFFC  F00C         	goto	u821
  5391   0019F4  EFFE  F00C         	goto	u820
  5392   0019F8                     u821:
  5393   0019F8  EFF6  F00C         	goto	l1879
  5394   0019FC                     u820:
  5395   0019FC                     
  5396                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
  5397   0019FC  010E               	movlb	14	; () banked
  5398   0019FE  B9C0               	btfsc	192,4,b	;volatile
  5399   001A00  EF04  F00D         	goto	u831
  5400   001A04  EF06  F00D         	goto	u830
  5401   001A08                     u831:
  5402   001A08  EF0A  F00D         	goto	l276
  5403   001A0C                     u830:
  5404   001A0C                     
  5405                           ; BSR set to: 14
  5406                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
  5407   001A0C  C005  FF99         	movff	EUSART1_Write@txData,3993	;volatile
  5408                           
  5409                           ;mcc_generated_files/eusart1.c: 182:     }
  5410   001A10  EF1C  F00D         	goto	l1893
  5411   001A14                     l276:
  5412                           
  5413                           ; BSR set to: 14
  5414                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
  5415   001A14  99C0               	bcf	192,4,b	;volatile
  5416   001A16                     
  5417                           ; BSR set to: 14
  5418                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  5419   001A16  5053               	movf	_eusart1TxHead^0,w,c
  5420   001A18  0FC1               	addlw	low _eusart1TxBuffer
  5421   001A1A  6ED9               	movwf	fsr2l,c
  5422   001A1C  6ADA               	clrf	fsr2h,c
  5423   001A1E  C005  FFDF         	movff	EUSART1_Write@txData,indf2
  5424   001A22                     
  5425                           ; BSR set to: 14
  5426   001A22  2A53               	incf	_eusart1TxHead^0,f,c	;volatile
  5427   001A24                     
  5428                           ; BSR set to: 14
  5429                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  5430   001A24  0E07               	movlw	7
  5431   001A26  6453               	cpfsgt	_eusart1TxHead^0,c	;volatile
  5432   001A28  EF18  F00D         	goto	u841
  5433   001A2C  EF1A  F00D         	goto	u840
  5434   001A30                     u841:
  5435   001A30  EF1B  F00D         	goto	l1891
  5436   001A34                     u840:
  5437   001A34                     
  5438                           ; BSR set to: 14
  5439                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  5440   001A34  6A53               	clrf	_eusart1TxHead^0,c	;volatile
  5441   001A36                     l1891:
  5442                           
  5443                           ; BSR set to: 14
  5444                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  5445   001A36  0651               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  5446   001A38                     l1893:
  5447                           
  5448                           ; BSR set to: 14
  5449                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
  5450   001A38  89C0               	bsf	192,4,b	;volatile
  5451   001A3A                     
  5452                           ; BSR set to: 14
  5453   001A3A  0012               	return		;funcret
  5454   001A3C                     __end_of_EUSART1_Write:
  5455                           	callstack 0
  5456                           
  5457 ;; *************** function _abs *****************
  5458 ;; Defined at:
  5459 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  a               2   28[COMRAM] int 
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;		None
  5464 ;; Return value:  Size  Location     Type
  5465 ;;                  2   28[COMRAM] int 
  5466 ;; Registers used:
  5467 ;;		wreg, status,2, status,0
  5468 ;; Tracked objects:
  5469 ;;		On entry : 0/0
  5470 ;;		On exit  : 0/0
  5471 ;;		Unchanged: 0/0
  5472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5475 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5476 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5477 ;;Total ram usage:        4 bytes
  5478 ;; Hardware stack levels used: 1
  5479 ;; Hardware stack levels required when called: 4
  5480 ;; This function calls:
  5481 ;;		Nothing
  5482 ;; This function is called by:
  5483 ;;		_vfpfcnvrt
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           	psect	text12
  5488   001B7A                     __ptext12:
  5489                           	callstack 0
  5490   001B7A                     _abs:
  5491                           	callstack 22
  5492   001B7A  BE1E               	btfsc	(abs@a+1)^0,7,c
  5493   001B7C  EFC2  F00D         	goto	u1011
  5494   001B80  EFC4  F00D         	goto	u1010
  5495   001B84                     u1011:
  5496   001B84  EFCA  F00D         	goto	l1203
  5497   001B88                     u1010:
  5498   001B88  C01D  F01D         	movff	abs@a,?_abs
  5499   001B8C  C01E  F01E         	movff	abs@a+1,?_abs+1
  5500   001B90  EFD6  F00D         	goto	l1206
  5501   001B94                     l1203:
  5502   001B94  C01D  F01F         	movff	abs@a,??_abs
  5503   001B98  C01E  F020         	movff	abs@a+1,??_abs+1
  5504   001B9C  1E1F               	comf	??_abs^0,f,c
  5505   001B9E  1E20               	comf	(??_abs+1)^0,f,c
  5506   001BA0  4A1F               	infsnz	??_abs^0,f,c
  5507   001BA2  2A20               	incf	(??_abs+1)^0,f,c
  5508   001BA4  C01F  F01D         	movff	??_abs,?_abs
  5509   001BA8  C020  F01E         	movff	??_abs+1,?_abs+1
  5510   001BAC                     l1206:
  5511   001BAC  0012               	return		;funcret
  5512   001BAE                     __end_of_abs:
  5513                           	callstack 0
  5514                           
  5515 ;; *************** function ___awmod *****************
  5516 ;; Defined at:
  5517 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;  dividend        2   22[COMRAM] int 
  5520 ;;  divisor         2   24[COMRAM] int 
  5521 ;; Auto vars:     Size  Location     Type
  5522 ;;  sign            1   27[COMRAM] unsigned char 
  5523 ;;  counter         1   26[COMRAM] unsigned char 
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  2   22[COMRAM] int 
  5526 ;; Registers used:
  5527 ;;		wreg, status,2, status,0
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5533 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5536 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5537 ;;Total ram usage:        6 bytes
  5538 ;; Hardware stack levels used: 1
  5539 ;; Hardware stack levels required when called: 4
  5540 ;; This function calls:
  5541 ;;		Nothing
  5542 ;; This function is called by:
  5543 ;;		_send_mqtt_data_points
  5544 ;;		_vfpfcnvrt
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           	psect	text13
  5549   001664                     __ptext13:
  5550                           	callstack 0
  5551   001664                     ___awmod:
  5552                           	callstack 22
  5553   001664  6A1C               	clrf	___awmod@sign^0,c
  5554   001666  BE18               	btfsc	(___awmod@dividend+1)^0,7,c
  5555   001668  EF3A  F00B         	goto	u910
  5556   00166C  EF38  F00B         	goto	u911
  5557   001670                     u911:
  5558   001670  EF40  F00B         	goto	l1949
  5559   001674                     u910:
  5560   001674  6C17               	negf	___awmod@dividend^0,c
  5561   001676  1E18               	comf	(___awmod@dividend+1)^0,f,c
  5562   001678  B0D8               	btfsc	status,0,c
  5563   00167A  2A18               	incf	(___awmod@dividend+1)^0,f,c
  5564   00167C  0E01               	movlw	1
  5565   00167E  6E1C               	movwf	___awmod@sign^0,c
  5566   001680                     l1949:
  5567   001680  BE1A               	btfsc	(___awmod@divisor+1)^0,7,c
  5568   001682  EF47  F00B         	goto	u920
  5569   001686  EF45  F00B         	goto	u921
  5570   00168A                     u921:
  5571   00168A  EF4B  F00B         	goto	l1953
  5572   00168E                     u920:
  5573   00168E  6C19               	negf	___awmod@divisor^0,c
  5574   001690  1E1A               	comf	(___awmod@divisor+1)^0,f,c
  5575   001692  B0D8               	btfsc	status,0,c
  5576   001694  2A1A               	incf	(___awmod@divisor+1)^0,f,c
  5577   001696                     l1953:
  5578   001696  5019               	movf	___awmod@divisor^0,w,c
  5579   001698  101A               	iorwf	(___awmod@divisor+1)^0,w,c
  5580   00169A  B4D8               	btfsc	status,2,c
  5581   00169C  EF52  F00B         	goto	u931
  5582   0016A0  EF54  F00B         	goto	u930
  5583   0016A4                     u931:
  5584   0016A4  EF78  F00B         	goto	l1969
  5585   0016A8                     u930:
  5586   0016A8  0E01               	movlw	1
  5587   0016AA  6E1B               	movwf	___awmod@counter^0,c
  5588   0016AC  EF5C  F00B         	goto	l1959
  5589   0016B0                     l1957:
  5590   0016B0  90D8               	bcf	status,0,c
  5591   0016B2  3619               	rlcf	___awmod@divisor^0,f,c
  5592   0016B4  361A               	rlcf	(___awmod@divisor+1)^0,f,c
  5593   0016B6  2A1B               	incf	___awmod@counter^0,f,c
  5594   0016B8                     l1959:
  5595   0016B8  AE1A               	btfss	(___awmod@divisor+1)^0,7,c
  5596   0016BA  EF61  F00B         	goto	u941
  5597   0016BE  EF63  F00B         	goto	u940
  5598   0016C2                     u941:
  5599   0016C2  EF58  F00B         	goto	l1957
  5600   0016C6                     u940:
  5601   0016C6                     l1961:
  5602   0016C6  5019               	movf	___awmod@divisor^0,w,c
  5603   0016C8  5C17               	subwf	___awmod@dividend^0,w,c
  5604   0016CA  501A               	movf	(___awmod@divisor+1)^0,w,c
  5605   0016CC  5818               	subwfb	(___awmod@dividend+1)^0,w,c
  5606   0016CE  A0D8               	btfss	status,0,c
  5607   0016D0  EF6C  F00B         	goto	u951
  5608   0016D4  EF6E  F00B         	goto	u950
  5609   0016D8                     u951:
  5610   0016D8  EF72  F00B         	goto	l1965
  5611   0016DC                     u950:
  5612   0016DC  5019               	movf	___awmod@divisor^0,w,c
  5613   0016DE  5E17               	subwf	___awmod@dividend^0,f,c
  5614   0016E0  501A               	movf	(___awmod@divisor+1)^0,w,c
  5615   0016E2  5A18               	subwfb	(___awmod@dividend+1)^0,f,c
  5616   0016E4                     l1965:
  5617   0016E4  90D8               	bcf	status,0,c
  5618   0016E6  321A               	rrcf	(___awmod@divisor+1)^0,f,c
  5619   0016E8  3219               	rrcf	___awmod@divisor^0,f,c
  5620   0016EA  2E1B               	decfsz	___awmod@counter^0,f,c
  5621   0016EC  EF63  F00B         	goto	l1961
  5622   0016F0                     l1969:
  5623   0016F0  501C               	movf	___awmod@sign^0,w,c
  5624   0016F2  B4D8               	btfsc	status,2,c
  5625   0016F4  EF7E  F00B         	goto	u961
  5626   0016F8  EF80  F00B         	goto	u960
  5627   0016FC                     u961:
  5628   0016FC  EF84  F00B         	goto	l1973
  5629   001700                     u960:
  5630   001700  6C17               	negf	___awmod@dividend^0,c
  5631   001702  1E18               	comf	(___awmod@dividend+1)^0,f,c
  5632   001704  B0D8               	btfsc	status,0,c
  5633   001706  2A18               	incf	(___awmod@dividend+1)^0,f,c
  5634   001708                     l1973:
  5635   001708  C017  F017         	movff	___awmod@dividend,?___awmod
  5636   00170C  C018  F018         	movff	___awmod@dividend+1,?___awmod+1
  5637   001710  0012               	return		;funcret
  5638   001712                     __end_of___awmod:
  5639                           	callstack 0
  5640                           
  5641 ;; *************** function ___awdiv *****************
  5642 ;; Defined at:
  5643 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;  dividend        2    4[COMRAM] int 
  5646 ;;  divisor         2    6[COMRAM] int 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  quotient        2   10[COMRAM] int 
  5649 ;;  sign            1    9[COMRAM] unsigned char 
  5650 ;;  counter         1    8[COMRAM] unsigned char 
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  2    4[COMRAM] int 
  5653 ;; Registers used:
  5654 ;;		wreg, status,2, status,0
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5661 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5663 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5664 ;;Total ram usage:        8 bytes
  5665 ;; Hardware stack levels used: 1
  5666 ;; Hardware stack levels required when called: 4
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_vfpfcnvrt
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           	psect	text14
  5675   00143E                     __ptext14:
  5676                           	callstack 0
  5677   00143E                     ___awdiv:
  5678                           	callstack 22
  5679   00143E  6A0A               	clrf	___awdiv@sign^0,c
  5680   001440  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  5681   001442  EF27  F00A         	goto	u850
  5682   001446  EF25  F00A         	goto	u851
  5683   00144A                     u851:
  5684   00144A  EF2D  F00A         	goto	l1905
  5685   00144E                     u850:
  5686   00144E  6C07               	negf	___awdiv@divisor^0,c
  5687   001450  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  5688   001452  B0D8               	btfsc	status,0,c
  5689   001454  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  5690   001456  0E01               	movlw	1
  5691   001458  6E0A               	movwf	___awdiv@sign^0,c
  5692   00145A                     l1905:
  5693   00145A  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  5694   00145C  EF34  F00A         	goto	u860
  5695   001460  EF32  F00A         	goto	u861
  5696   001464                     u861:
  5697   001464  EF3A  F00A         	goto	l1911
  5698   001468                     u860:
  5699   001468  6C05               	negf	___awdiv@dividend^0,c
  5700   00146A  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  5701   00146C  B0D8               	btfsc	status,0,c
  5702   00146E  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  5703   001470  0E01               	movlw	1
  5704   001472  1A0A               	xorwf	___awdiv@sign^0,f,c
  5705   001474                     l1911:
  5706   001474  0E00               	movlw	0
  5707   001476  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  5708   001478  0E00               	movlw	0
  5709   00147A  6E0B               	movwf	___awdiv@quotient^0,c
  5710   00147C  5007               	movf	___awdiv@divisor^0,w,c
  5711   00147E  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  5712   001480  B4D8               	btfsc	status,2,c
  5713   001482  EF45  F00A         	goto	u871
  5714   001486  EF47  F00A         	goto	u870
  5715   00148A                     u871:
  5716   00148A  EF6F  F00A         	goto	l1933
  5717   00148E                     u870:
  5718   00148E  0E01               	movlw	1
  5719   001490  6E09               	movwf	___awdiv@counter^0,c
  5720   001492  EF4F  F00A         	goto	l1919
  5721   001496                     l1917:
  5722   001496  90D8               	bcf	status,0,c
  5723   001498  3607               	rlcf	___awdiv@divisor^0,f,c
  5724   00149A  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  5725   00149C  2A09               	incf	___awdiv@counter^0,f,c
  5726   00149E                     l1919:
  5727   00149E  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  5728   0014A0  EF54  F00A         	goto	u881
  5729   0014A4  EF56  F00A         	goto	u880
  5730   0014A8                     u881:
  5731   0014A8  EF4B  F00A         	goto	l1917
  5732   0014AC                     u880:
  5733   0014AC                     l1921:
  5734   0014AC  90D8               	bcf	status,0,c
  5735   0014AE  360B               	rlcf	___awdiv@quotient^0,f,c
  5736   0014B0  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  5737   0014B2  5007               	movf	___awdiv@divisor^0,w,c
  5738   0014B4  5C05               	subwf	___awdiv@dividend^0,w,c
  5739   0014B6  5008               	movf	(___awdiv@divisor+1)^0,w,c
  5740   0014B8  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  5741   0014BA  A0D8               	btfss	status,0,c
  5742   0014BC  EF62  F00A         	goto	u891
  5743   0014C0  EF64  F00A         	goto	u890
  5744   0014C4                     u891:
  5745   0014C4  EF69  F00A         	goto	l1929
  5746   0014C8                     u890:
  5747   0014C8  5007               	movf	___awdiv@divisor^0,w,c
  5748   0014CA  5E05               	subwf	___awdiv@dividend^0,f,c
  5749   0014CC  5008               	movf	(___awdiv@divisor+1)^0,w,c
  5750   0014CE  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  5751   0014D0  800B               	bsf	___awdiv@quotient^0,0,c
  5752   0014D2                     l1929:
  5753   0014D2  90D8               	bcf	status,0,c
  5754   0014D4  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  5755   0014D6  3207               	rrcf	___awdiv@divisor^0,f,c
  5756   0014D8  2E09               	decfsz	___awdiv@counter^0,f,c
  5757   0014DA  EF56  F00A         	goto	l1921
  5758   0014DE                     l1933:
  5759   0014DE  500A               	movf	___awdiv@sign^0,w,c
  5760   0014E0  B4D8               	btfsc	status,2,c
  5761   0014E2  EF75  F00A         	goto	u901
  5762   0014E6  EF77  F00A         	goto	u900
  5763   0014EA                     u901:
  5764   0014EA  EF7B  F00A         	goto	l1937
  5765   0014EE                     u900:
  5766   0014EE  6C0B               	negf	___awdiv@quotient^0,c
  5767   0014F0  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  5768   0014F2  B0D8               	btfsc	status,0,c
  5769   0014F4  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  5770   0014F6                     l1937:
  5771   0014F6  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  5772   0014FA  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  5773   0014FE  0012               	return		;funcret
  5774   001500                     __end_of___awdiv:
  5775                           	callstack 0
  5776                           
  5777 ;; *************** function _SYSTEM_Initialize *****************
  5778 ;; Defined at:
  5779 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;		None
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;		None
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      void 
  5786 ;; Registers used:
  5787 ;;		wreg, status,2, status,0, cstack
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5797 ;;Total ram usage:        0 bytes
  5798 ;; Hardware stack levels used: 1
  5799 ;; Hardware stack levels required when called: 6
  5800 ;; This function calls:
  5801 ;;		_EUSART1_Initialize
  5802 ;;		_EUSART2_Initialize
  5803 ;;		_INTERRUPT_Initialize
  5804 ;;		_OSCILLATOR_Initialize
  5805 ;;		_PIN_MANAGER_Initialize
  5806 ;;		_PMD_Initialize
  5807 ;; This function is called by:
  5808 ;;		_main
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text15
  5813   001C40                     __ptext15:
  5814                           	callstack 0
  5815   001C40                     _SYSTEM_Initialize:
  5816                           	callstack 24
  5817   001C40                     
  5818                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  5819   001C40  ECA1  F00E         	call	_INTERRUPT_Initialize	;wreg free
  5820                           
  5821                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  5822   001C44  EC41  F00E         	call	_PMD_Initialize	;wreg free
  5823   001C48                     
  5824                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5825   001C48  EC1E  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  5826   001C4C                     
  5827                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5828   001C4C  EC38  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  5829   001C50                     
  5830                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  5831   001C50  EC1F  F00C         	call	_EUSART1_Initialize	;wreg free
  5832   001C54                     
  5833                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  5834   001C54  ECDE  F00B         	call	_EUSART2_Initialize	;wreg free
  5835   001C58  0012               	return		;funcret
  5836   001C5A                     __end_of_SYSTEM_Initialize:
  5837                           	callstack 0
  5838                           
  5839 ;; *************** function _PMD_Initialize *****************
  5840 ;; Defined at:
  5841 ;;		line 74 in file "mcc_generated_files/mcc.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;		None
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;		None
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  1    wreg      void 
  5848 ;; Registers used:
  5849 ;;		None
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5859 ;;Total ram usage:        0 bytes
  5860 ;; Hardware stack levels used: 1
  5861 ;; Hardware stack levels required when called: 4
  5862 ;; This function calls:
  5863 ;;		Nothing
  5864 ;; This function is called by:
  5865 ;;		_SYSTEM_Initialize
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text16
  5870   001C82                     __ptext16:
  5871                           	callstack 0
  5872   001C82                     _PMD_Initialize:
  5873                           	callstack 25
  5874   001C82                     
  5875                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  5876   001C82  010E               	movlb	14	; () banked
  5877   001C84  6BDC               	clrf	220,b	;volatile
  5878                           
  5879                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  5880   001C86  6BDD               	clrf	221,b	;volatile
  5881                           
  5882                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  5883   001C88  6BDE               	clrf	222,b	;volatile
  5884                           
  5885                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  5886   001C8A  6BDF               	clrf	223,b	;volatile
  5887                           
  5888                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  5889   001C8C  6BE0               	clrf	224,b	;volatile
  5890                           
  5891                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  5892   001C8E  6BE1               	clrf	225,b	;volatile
  5893   001C90                     
  5894                           ; BSR set to: 14
  5895   001C90  0012               	return		;funcret
  5896   001C92                     __end_of_PMD_Initialize:
  5897                           	callstack 0
  5898                           
  5899 ;; *************** function _PIN_MANAGER_Initialize *****************
  5900 ;; Defined at:
  5901 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;		None
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;		None
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  1    wreg      void 
  5908 ;; Registers used:
  5909 ;;		wreg, status,2
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5919 ;;Total ram usage:        0 bytes
  5920 ;; Hardware stack levels used: 1
  5921 ;; Hardware stack levels required when called: 4
  5922 ;; This function calls:
  5923 ;;		Nothing
  5924 ;; This function is called by:
  5925 ;;		_SYSTEM_Initialize
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           
  5929                           	psect	text17
  5930   001A3C                     __ptext17:
  5931                           	callstack 0
  5932   001A3C                     _PIN_MANAGER_Initialize:
  5933                           	callstack 25
  5934   001A3C                     
  5935                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5936   001A3C  6A82               	clrf	130,c	;volatile
  5937                           
  5938                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5939   001A3E  6A83               	clrf	131,c	;volatile
  5940                           
  5941                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5942   001A40  6A84               	clrf	132,c	;volatile
  5943                           
  5944                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  5945   001A42  6887               	setf	135,c	;volatile
  5946                           
  5947                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  5948   001A44  6888               	setf	136,c	;volatile
  5949   001A46                     
  5950                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xAF;
  5951   001A46  0EAF               	movlw	175
  5952   001A48  6E89               	movwf	137,c	;volatile
  5953                           
  5954                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x0F;
  5955   001A4A  0E0F               	movlw	15
  5956   001A4C  010F               	movlb	15	; () banked
  5957   001A4E  6F1C               	movwf	28,b	;volatile
  5958                           
  5959                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xBF;
  5960   001A50  0EBF               	movlw	191
  5961   001A52  6F14               	movwf	20,b	;volatile
  5962                           
  5963                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xFE;
  5964   001A54  0EFE               	movlw	254
  5965   001A56  6F0C               	movwf	12,b	;volatile
  5966   001A58                     
  5967                           ; BSR set to: 15
  5968                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  5969   001A58  6B28               	clrf	40,b	;volatile
  5970   001A5A                     
  5971                           ; BSR set to: 15
  5972                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  5973   001A5A  6B13               	clrf	19,b	;volatile
  5974   001A5C                     
  5975                           ; BSR set to: 15
  5976                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  5977   001A5C  6B0B               	clrf	11,b	;volatile
  5978   001A5E                     
  5979                           ; BSR set to: 15
  5980                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  5981   001A5E  6B1B               	clrf	27,b	;volatile
  5982   001A60                     
  5983                           ; BSR set to: 15
  5984                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  5985   001A60  6B0A               	clrf	10,b	;volatile
  5986   001A62                     
  5987                           ; BSR set to: 15
  5988                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  5989   001A62  6B12               	clrf	18,b	;volatile
  5990   001A64                     
  5991                           ; BSR set to: 15
  5992                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  5993   001A64  6B1A               	clrf	26,b	;volatile
  5994   001A66                     
  5995                           ; BSR set to: 15
  5996                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  5997   001A66  6909               	setf	9,b	;volatile
  5998   001A68                     
  5999                           ; BSR set to: 15
  6000                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  6001   001A68  6911               	setf	17,b	;volatile
  6002   001A6A                     
  6003                           ; BSR set to: 15
  6004                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  6005   001A6A  6919               	setf	25,b	;volatile
  6006   001A6C                     
  6007                           ; BSR set to: 15
  6008                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  6009   001A6C  6908               	setf	8,b	;volatile
  6010   001A6E                     
  6011                           ; BSR set to: 15
  6012                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  6013   001A6E  6910               	setf	16,b	;volatile
  6014   001A70                     
  6015                           ; BSR set to: 15
  6016                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  6017   001A70  6918               	setf	24,b	;volatile
  6018                           
  6019                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x0F;
  6020   001A72  0E0F               	movlw	15
  6021   001A74  6F25               	movwf	37,b	;volatile
  6022                           
  6023                           ;mcc_generated_files/pin_manager.c: 115:     RX1PPS = 0x17;
  6024   001A76  0E17               	movlw	23
  6025   001A78  010E               	movlb	14	; () banked
  6026   001A7A  6FB0               	movwf	176,b	;volatile
  6027                           
  6028                           ;mcc_generated_files/pin_manager.c: 116:     RC6PPS = 0x09;
  6029   001A7C  0E09               	movlw	9
  6030   001A7E  6FF8               	movwf	248,b	;volatile
  6031   001A80                     
  6032                           ; BSR set to: 14
  6033   001A80  0012               	return		;funcret
  6034   001A82                     __end_of_PIN_MANAGER_Initialize:
  6035                           	callstack 0
  6036                           
  6037 ;; *************** function _OSCILLATOR_Initialize *****************
  6038 ;; Defined at:
  6039 ;;		line 60 in file "mcc_generated_files/mcc.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;		None
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;		None
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      void 
  6046 ;; Registers used:
  6047 ;;		wreg, status,2
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6057 ;;Total ram usage:        0 bytes
  6058 ;; Hardware stack levels used: 1
  6059 ;; Hardware stack levels required when called: 4
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_SYSTEM_Initialize
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text18
  6068   001C70                     __ptext18:
  6069                           	callstack 0
  6070   001C70                     _OSCILLATOR_Initialize:
  6071                           	callstack 25
  6072   001C70                     
  6073                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
  6074   001C70  0E62               	movlw	98
  6075   001C72  010E               	movlb	14	; () banked
  6076   001C74  6FD3               	movwf	211,b	;volatile
  6077   001C76                     
  6078                           ; BSR set to: 14
  6079                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  6080   001C76  6BD5               	clrf	213,b	;volatile
  6081   001C78                     
  6082                           ; BSR set to: 14
  6083                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  6084   001C78  6BD7               	clrf	215,b	;volatile
  6085                           
  6086                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x02;
  6087   001C7A  0E02               	movlw	2
  6088   001C7C  6FD9               	movwf	217,b	;volatile
  6089   001C7E                     
  6090                           ; BSR set to: 14
  6091                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  6092   001C7E  6BD8               	clrf	216,b	;volatile
  6093   001C80                     
  6094                           ; BSR set to: 14
  6095   001C80  0012               	return		;funcret
  6096   001C82                     __end_of_OSCILLATOR_Initialize:
  6097                           	callstack 0
  6098                           
  6099 ;; *************** function _INTERRUPT_Initialize *****************
  6100 ;; Defined at:
  6101 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;		None
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;		None
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  1    wreg      void 
  6108 ;; Registers used:
  6109 ;;		None
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6119 ;;Total ram usage:        0 bytes
  6120 ;; Hardware stack levels used: 1
  6121 ;; Hardware stack levels required when called: 4
  6122 ;; This function calls:
  6123 ;;		Nothing
  6124 ;; This function is called by:
  6125 ;;		_SYSTEM_Initialize
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           	psect	text19
  6130   001D42                     __ptext19:
  6131                           	callstack 0
  6132   001D42                     _INTERRUPT_Initialize:
  6133                           	callstack 25
  6134   001D42                     
  6135                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  6136   001D42  9AF2               	bcf	242,5,c	;volatile
  6137   001D44  0012               	return		;funcret
  6138   001D46                     __end_of_INTERRUPT_Initialize:
  6139                           	callstack 0
  6140                           
  6141 ;; *************** function _EUSART2_Initialize *****************
  6142 ;; Defined at:
  6143 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;		None
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;		None
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  1    wreg      void 
  6150 ;; Registers used:
  6151 ;;		wreg, status,2, status,0, cstack
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/0
  6154 ;;		On exit  : 0/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6161 ;;Total ram usage:        0 bytes
  6162 ;; Hardware stack levels used: 1
  6163 ;; Hardware stack levels required when called: 5
  6164 ;; This function calls:
  6165 ;;		_EUSART2_SetErrorHandler
  6166 ;;		_EUSART2_SetFramingErrorHandler
  6167 ;;		_EUSART2_SetOverrunErrorHandler
  6168 ;;		_EUSART2_SetRxInterruptHandler
  6169 ;;		_EUSART2_SetTxInterruptHandler
  6170 ;; This function is called by:
  6171 ;;		_SYSTEM_Initialize
  6172 ;; This function uses a non-reentrant model
  6173 ;;
  6174                           
  6175                           	psect	text20
  6176   0017BC                     __ptext20:
  6177                           	callstack 0
  6178   0017BC                     _EUSART2_Initialize:
  6179                           	callstack 24
  6180   0017BC                     
  6181                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  6182   0017BC  010E               	movlb	14	; () banked
  6183   0017BE  9FC0               	bcf	192,7,b	;volatile
  6184   0017C0                     
  6185                           ; BSR set to: 14
  6186                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  6187   0017C0  0E00               	movlw	low _EUSART2_Receive_ISR
  6188   0017C2  6E05               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler^0,c
  6189   0017C4  0E15               	movlw	high _EUSART2_Receive_ISR
  6190   0017C6  6E06               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)^0,c
  6191   0017C8  0E00               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
  6192   0017CA  6E07               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)^0,c
  6193   0017CC  EC50  F00E         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  6194   0017D0                     
  6195                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  6196   0017D0  010E               	movlb	14	; () banked
  6197   0017D2  9DC0               	bcf	192,6,b	;volatile
  6198                           
  6199                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  6200   0017D4  0EC6               	movlw	low _EUSART2_Transmit_ISR
  6201   0017D6  6E05               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler^0,c
  6202   0017D8  0E1A               	movlw	high _EUSART2_Transmit_ISR
  6203   0017DA  6E06               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)^0,c
  6204   0017DC  0E00               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
  6205   0017DE  6E07               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)^0,c
  6206   0017E0  EC49  F00E         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  6207   0017E4                     
  6208                           ;mcc_generated_files/eusart2.c: 98:     BAUD2CON = 0x08;
  6209   0017E4  0E08               	movlw	8
  6210   0017E6  010E               	movlb	14	; () banked
  6211   0017E8  6F9A               	movwf	154,b	;volatile
  6212   0017EA                     
  6213                           ; BSR set to: 14
  6214                           ;mcc_generated_files/eusart2.c: 101:     RC2STA = 0x90;
  6215   0017EA  0E90               	movlw	144
  6216   0017EC  6F98               	movwf	152,b	;volatile
  6217   0017EE                     
  6218                           ; BSR set to: 14
  6219                           ;mcc_generated_files/eusart2.c: 104:     TX2STA = 0x24;
  6220   0017EE  0E24               	movlw	36
  6221   0017F0  6F99               	movwf	153,b	;volatile
  6222   0017F2                     
  6223                           ; BSR set to: 14
  6224                           ;mcc_generated_files/eusart2.c: 107:     SP2BRGL = 0x19;
  6225   0017F2  0E19               	movlw	25
  6226   0017F4  6F96               	movwf	150,b	;volatile
  6227   0017F6                     
  6228                           ; BSR set to: 14
  6229                           ;mcc_generated_files/eusart2.c: 110:     SP2BRGH = 0x00;
  6230   0017F6  6B97               	clrf	151,b	;volatile
  6231                           
  6232                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  6233   0017F8  0E46               	movlw	low _EUSART2_DefaultFramingErrorHandler
  6234   0017FA  6E05               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  6235   0017FC  0E1D               	movlw	high _EUSART2_DefaultFramingErrorHandler
  6236   0017FE  6E06               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  6237   001800  0E00               	movlw	low (_EUSART2_DefaultFramingErrorHandler shr (0+16))
  6238   001802  6E07               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+2)^0,c
  6239   001804  EC5E  F00E         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  6240                           
  6241                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  6242   001808  0E28               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  6243   00180A  6E05               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  6244   00180C  0E1D               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  6245   00180E  6E06               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6246   001810  0E00               	movlw	low (_EUSART2_DefaultOverrunErrorHandler shr (0+16))
  6247   001812  6E07               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+2)^0,c
  6248   001814  EC57  F00E         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  6249                           
  6250                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  6251   001818  0E30               	movlw	low _EUSART2_DefaultErrorHandler
  6252   00181A  6E05               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  6253   00181C  0E1D               	movlw	high _EUSART2_DefaultErrorHandler
  6254   00181E  6E06               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  6255   001820  0E00               	movlw	low (_EUSART2_DefaultErrorHandler shr (0+16))
  6256   001822  6E07               	movwf	(EUSART2_SetErrorHandler@interruptHandler+2)^0,c
  6257   001824  EC65  F00E         	call	_EUSART2_SetErrorHandler	;wreg free
  6258   001828                     
  6259                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  6260   001828  6A54               	clrf	_eusart2RxLastError^0,c	;volatile
  6261   00182A                     
  6262                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  6263   00182A  6A5A               	clrf	_eusart2TxHead^0,c	;volatile
  6264   00182C                     
  6265                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  6266   00182C  6A59               	clrf	_eusart2TxTail^0,c	;volatile
  6267   00182E                     
  6268                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  6269   00182E  0E08               	movlw	8
  6270   001830  6E58               	movwf	_eusart2TxBufferRemaining^0,c	;volatile
  6271   001832                     
  6272                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  6273   001832  6A57               	clrf	_eusart2RxHead^0,c	;volatile
  6274   001834                     
  6275                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  6276   001834  6A56               	clrf	_eusart2RxTail^0,c	;volatile
  6277   001836                     
  6278                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  6279   001836  6A55               	clrf	_eusart2RxCount^0,c	;volatile
  6280   001838                     
  6281                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  6282   001838  010E               	movlb	14	; () banked
  6283   00183A  8FC0               	bsf	192,7,b	;volatile
  6284   00183C                     
  6285                           ; BSR set to: 14
  6286   00183C  0012               	return		;funcret
  6287   00183E                     __end_of_EUSART2_Initialize:
  6288                           	callstack 0
  6289                           
  6290 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  6291 ;; Defined at:
  6292 ;;		line 276 in file "mcc_generated_files/eusart2.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;  interruptHan    3    4[COMRAM] PTR FTN()void 
  6295 ;;		 -> EUSART2_Transmit_ISR(1), 
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;		None
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  1    wreg      void 
  6300 ;; Registers used:
  6301 ;;		wreg, status,2, status,0
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/0
  6304 ;;		On exit  : 0/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6307 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6310 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6311 ;;Total ram usage:        3 bytes
  6312 ;; Hardware stack levels used: 1
  6313 ;; Hardware stack levels required when called: 4
  6314 ;; This function calls:
  6315 ;;		Nothing
  6316 ;; This function is called by:
  6317 ;;		_EUSART2_Initialize
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           	psect	text21
  6322   001C92                     __ptext21:
  6323                           	callstack 0
  6324   001C92                     _EUSART2_SetTxInterruptHandler:
  6325                           	callstack 24
  6326   001C92                     
  6327                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6328   001C92  C005  F0F9         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  6329   001C96  C006  F0FA         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  6330   001C9A  C007  F0FB         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
  6331   001C9E  0012               	return		;funcret
  6332   001CA0                     __end_of_EUSART2_SetTxInterruptHandler:
  6333                           	callstack 0
  6334                           
  6335 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  6336 ;; Defined at:
  6337 ;;		line 280 in file "mcc_generated_files/eusart2.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  interruptHan    3    4[COMRAM] PTR FTN()void 
  6340 ;;		 -> EUSART2_Receive_ISR(1), 
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;		None
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  1    wreg      void 
  6345 ;; Registers used:
  6346 ;;		wreg, status,2, status,0
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6352 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6355 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6356 ;;Total ram usage:        3 bytes
  6357 ;; Hardware stack levels used: 1
  6358 ;; Hardware stack levels required when called: 4
  6359 ;; This function calls:
  6360 ;;		Nothing
  6361 ;; This function is called by:
  6362 ;;		_EUSART2_Initialize
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           	psect	text22
  6367   001CA0                     __ptext22:
  6368                           	callstack 0
  6369   001CA0                     _EUSART2_SetRxInterruptHandler:
  6370                           	callstack 24
  6371   001CA0                     
  6372                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6373   001CA0  C005  F0F6         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  6374   001CA4  C006  F0F7         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  6375   001CA8  C007  F0F8         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
  6376   001CAC  0012               	return		;funcret
  6377   001CAE                     __end_of_EUSART2_SetRxInterruptHandler:
  6378                           	callstack 0
  6379                           
  6380 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  6381 ;; Defined at:
  6382 ;;		line 268 in file "mcc_generated_files/eusart2.c"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;  interruptHan    3    4[COMRAM] PTR FTN()void 
  6385 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;		None
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  1    wreg      void 
  6390 ;; Registers used:
  6391 ;;		wreg, status,2, status,0
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/0
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6397 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6400 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6401 ;;Total ram usage:        3 bytes
  6402 ;; Hardware stack levels used: 1
  6403 ;; Hardware stack levels required when called: 4
  6404 ;; This function calls:
  6405 ;;		Nothing
  6406 ;; This function is called by:
  6407 ;;		_EUSART2_Initialize
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           	psect	text23
  6412   001CAE                     __ptext23:
  6413                           	callstack 0
  6414   001CAE                     _EUSART2_SetOverrunErrorHandler:
  6415                           	callstack 24
  6416   001CAE                     
  6417                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
  6418   001CAE  C005  F0EA         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  6419   001CB2  C006  F0EB         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  6420   001CB6  C007  F0EC         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+2,_EUSART2_OverrunErrorHandler+2
  6421   001CBA  0012               	return		;funcret
  6422   001CBC                     __end_of_EUSART2_SetOverrunErrorHandler:
  6423                           	callstack 0
  6424                           
  6425 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  6426 ;; Defined at:
  6427 ;;		line 264 in file "mcc_generated_files/eusart2.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;  interruptHan    3    4[COMRAM] PTR FTN()void 
  6430 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;		None
  6433 ;; Return value:  Size  Location     Type
  6434 ;;                  1    wreg      void 
  6435 ;; Registers used:
  6436 ;;		wreg, status,2, status,0
  6437 ;; Tracked objects:
  6438 ;;		On entry : 0/0
  6439 ;;		On exit  : 0/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6442 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6445 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6446 ;;Total ram usage:        3 bytes
  6447 ;; Hardware stack levels used: 1
  6448 ;; Hardware stack levels required when called: 4
  6449 ;; This function calls:
  6450 ;;		Nothing
  6451 ;; This function is called by:
  6452 ;;		_EUSART2_Initialize
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           	psect	text24
  6457   001CBC                     __ptext24:
  6458                           	callstack 0
  6459   001CBC                     _EUSART2_SetFramingErrorHandler:
  6460                           	callstack 24
  6461   001CBC                     
  6462                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
  6463   001CBC  C005  F0ED         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  6464   001CC0  C006  F0EE         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  6465   001CC4  C007  F0EF         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+2,_EUSART2_FramingErrorHandler+2
  6466   001CC8  0012               	return		;funcret
  6467   001CCA                     __end_of_EUSART2_SetFramingErrorHandler:
  6468                           	callstack 0
  6469                           
  6470 ;; *************** function _EUSART2_SetErrorHandler *****************
  6471 ;; Defined at:
  6472 ;;		line 272 in file "mcc_generated_files/eusart2.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;  interruptHan    3    4[COMRAM] PTR FTN()void 
  6475 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;		None
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  1    wreg      void 
  6480 ;; Registers used:
  6481 ;;		wreg, status,2, status,0
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6487 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6490 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6491 ;;Total ram usage:        3 bytes
  6492 ;; Hardware stack levels used: 1
  6493 ;; Hardware stack levels required when called: 4
  6494 ;; This function calls:
  6495 ;;		Nothing
  6496 ;; This function is called by:
  6497 ;;		_EUSART2_Initialize
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           	psect	text25
  6502   001CCA                     __ptext25:
  6503                           	callstack 0
  6504   001CCA                     _EUSART2_SetErrorHandler:
  6505                           	callstack 24
  6506   001CCA                     
  6507                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
  6508   001CCA  C005  F0E7         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  6509   001CCE  C006  F0E8         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  6510   001CD2  C007  F0E9         	movff	EUSART2_SetErrorHandler@interruptHandler+2,_EUSART2_ErrorHandler+2
  6511   001CD6  0012               	return		;funcret
  6512   001CD8                     __end_of_EUSART2_SetErrorHandler:
  6513                           	callstack 0
  6514                           
  6515 ;; *************** function _EUSART1_Initialize *****************
  6516 ;; Defined at:
  6517 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;		None
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;		None
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  1    wreg      void 
  6524 ;; Registers used:
  6525 ;;		wreg, status,2, status,0, cstack
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6535 ;;Total ram usage:        0 bytes
  6536 ;; Hardware stack levels used: 1
  6537 ;; Hardware stack levels required when called: 5
  6538 ;; This function calls:
  6539 ;;		_EUSART1_SetErrorHandler
  6540 ;;		_EUSART1_SetFramingErrorHandler
  6541 ;;		_EUSART1_SetOverrunErrorHandler
  6542 ;;		_EUSART1_SetRxInterruptHandler
  6543 ;;		_EUSART1_SetTxInterruptHandler
  6544 ;; This function is called by:
  6545 ;;		_SYSTEM_Initialize
  6546 ;; This function uses a non-reentrant model
  6547 ;;
  6548                           
  6549                           	psect	text26
  6550   00183E                     __ptext26:
  6551                           	callstack 0
  6552   00183E                     _EUSART1_Initialize:
  6553                           	callstack 24
  6554   00183E                     
  6555                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  6556   00183E  010E               	movlb	14	; () banked
  6557   001840  9BC0               	bcf	192,5,b	;volatile
  6558   001842                     
  6559                           ; BSR set to: 14
  6560                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  6561   001842  0EB4               	movlw	low _EUSART1_Receive_ISR
  6562   001844  6E05               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  6563   001846  0E15               	movlw	high _EUSART1_Receive_ISR
  6564   001848  6E06               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  6565   00184A  0E00               	movlw	low (_EUSART1_Receive_ISR shr (0+16))
  6566   00184C  6E07               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+2)^0,c
  6567   00184E  EC73  F00E         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  6568   001852                     
  6569                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  6570   001852  010E               	movlb	14	; () banked
  6571   001854  99C0               	bcf	192,4,b	;volatile
  6572                           
  6573                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  6574   001856  0E04               	movlw	low _EUSART1_Transmit_ISR
  6575   001858  6E05               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  6576   00185A  0E1B               	movlw	high _EUSART1_Transmit_ISR
  6577   00185C  6E06               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  6578   00185E  0E00               	movlw	low (_EUSART1_Transmit_ISR shr (0+16))
  6579   001860  6E07               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+2)^0,c
  6580   001862  EC6C  F00E         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  6581   001866                     
  6582                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  6583   001866  0E08               	movlw	8
  6584   001868  6E9E               	movwf	158,c	;volatile
  6585   00186A                     
  6586                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  6587   00186A  0E90               	movlw	144
  6588   00186C  6E9C               	movwf	156,c	;volatile
  6589   00186E                     
  6590                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  6591   00186E  0E24               	movlw	36
  6592   001870  6E9D               	movwf	157,c	;volatile
  6593   001872                     
  6594                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x19;
  6595   001872  0E19               	movlw	25
  6596   001874  6E9A               	movwf	154,c	;volatile
  6597   001876                     
  6598                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
  6599   001876  6A9B               	clrf	155,c	;volatile
  6600                           
  6601                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  6602   001878  0E48               	movlw	low _EUSART1_DefaultFramingErrorHandler
  6603   00187A  6E05               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  6604   00187C  0E1D               	movlw	high _EUSART1_DefaultFramingErrorHandler
  6605   00187E  6E06               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  6606   001880  0E00               	movlw	low (_EUSART1_DefaultFramingErrorHandler shr (0+16))
  6607   001882  6E07               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+2)^0,c
  6608   001884  EC81  F00E         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  6609                           
  6610                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  6611   001888  0E36               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  6612   00188A  6E05               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  6613   00188C  0E1D               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  6614   00188E  6E06               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6615   001890  0E00               	movlw	low (_EUSART1_DefaultOverrunErrorHandler shr (0+16))
  6616   001892  6E07               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
  6617   001894  EC7A  F00E         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  6618                           
  6619                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  6620   001898  0E3C               	movlw	low _EUSART1_DefaultErrorHandler
  6621   00189A  6E05               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  6622   00189C  0E1D               	movlw	high _EUSART1_DefaultErrorHandler
  6623   00189E  6E06               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  6624   0018A0  0E00               	movlw	low (_EUSART1_DefaultErrorHandler shr (0+16))
  6625   0018A2  6E07               	movwf	(EUSART1_SetErrorHandler@interruptHandler+2)^0,c
  6626   0018A4  EC88  F00E         	call	_EUSART1_SetErrorHandler	;wreg free
  6627   0018A8                     
  6628                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  6629   0018A8  6A4D               	clrf	_eusart1RxLastError^0,c	;volatile
  6630   0018AA                     
  6631                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  6632   0018AA  6A53               	clrf	_eusart1TxHead^0,c	;volatile
  6633   0018AC                     
  6634                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  6635   0018AC  6A52               	clrf	_eusart1TxTail^0,c	;volatile
  6636   0018AE                     
  6637                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  6638   0018AE  0E08               	movlw	8
  6639   0018B0  6E51               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  6640   0018B2                     
  6641                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  6642   0018B2  6A50               	clrf	_eusart1RxHead^0,c	;volatile
  6643   0018B4                     
  6644                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  6645   0018B4  6A4F               	clrf	_eusart1RxTail^0,c	;volatile
  6646   0018B6                     
  6647                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  6648   0018B6  6A4E               	clrf	_eusart1RxCount^0,c	;volatile
  6649   0018B8                     
  6650                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  6651   0018B8  010E               	movlb	14	; () banked
  6652   0018BA  8BC0               	bsf	192,5,b	;volatile
  6653   0018BC                     
  6654                           ; BSR set to: 14
  6655   0018BC  0012               	return		;funcret
  6656   0018BE                     __end_of_EUSART1_Initialize:
  6657                           	callstack 0
  6658                           
  6659 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  6660 ;; Defined at:
  6661 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;  interruptHan    3    4[COMRAM] PTR FTN()void 
  6664 ;;		 -> EUSART1_Transmit_ISR(1), 
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;		None
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  1    wreg      void 
  6669 ;; Registers used:
  6670 ;;		wreg, status,2, status,0
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 0/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6676 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6679 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6680 ;;Total ram usage:        3 bytes
  6681 ;; Hardware stack levels used: 1
  6682 ;; Hardware stack levels required when called: 4
  6683 ;; This function calls:
  6684 ;;		Nothing
  6685 ;; This function is called by:
  6686 ;;		_EUSART1_Initialize
  6687 ;; This function uses a non-reentrant model
  6688 ;;
  6689                           
  6690                           	psect	text27
  6691   001CD8                     __ptext27:
  6692                           	callstack 0
  6693   001CD8                     _EUSART1_SetTxInterruptHandler:
  6694                           	callstack 24
  6695   001CD8                     
  6696                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6697   001CD8  C005  F0F3         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  6698   001CDC  C006  F0F4         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  6699   001CE0  C007  F0F5         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+2,_EUSART1_TxDefaultInterruptHandl
      +                          er+2
  6700   001CE4  0012               	return		;funcret
  6701   001CE6                     __end_of_EUSART1_SetTxInterruptHandler:
  6702                           	callstack 0
  6703                           
  6704 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  6705 ;; Defined at:
  6706 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  interruptHan    3    4[COMRAM] PTR FTN()void 
  6709 ;;		 -> EUSART1_Receive_ISR(1), 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;		None
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  1    wreg      void 
  6714 ;; Registers used:
  6715 ;;		wreg, status,2, status,0
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6721 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6724 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6725 ;;Total ram usage:        3 bytes
  6726 ;; Hardware stack levels used: 1
  6727 ;; Hardware stack levels required when called: 4
  6728 ;; This function calls:
  6729 ;;		Nothing
  6730 ;; This function is called by:
  6731 ;;		_EUSART1_Initialize
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text28
  6736   001CE6                     __ptext28:
  6737                           	callstack 0
  6738   001CE6                     _EUSART1_SetRxInterruptHandler:
  6739                           	callstack 24
  6740   001CE6                     
  6741                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  6742   001CE6  C005  F0F0         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  6743   001CEA  C006  F0F1         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  6744   001CEE  C007  F0F2         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+2,_EUSART1_RxDefaultInterruptHandl
      +                          er+2
  6745   001CF2  0012               	return		;funcret
  6746   001CF4                     __end_of_EUSART1_SetRxInterruptHandler:
  6747                           	callstack 0
  6748                           
  6749 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6750 ;; Defined at:
  6751 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;  interruptHan    3    4[COMRAM] PTR FTN()void 
  6754 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;		None
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  1    wreg      void 
  6759 ;; Registers used:
  6760 ;;		wreg, status,2, status,0
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6766 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6769 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6770 ;;Total ram usage:        3 bytes
  6771 ;; Hardware stack levels used: 1
  6772 ;; Hardware stack levels required when called: 4
  6773 ;; This function calls:
  6774 ;;		Nothing
  6775 ;; This function is called by:
  6776 ;;		_EUSART1_Initialize
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780                           	psect	text29
  6781   001CF4                     __ptext29:
  6782                           	callstack 0
  6783   001CF4                     _EUSART1_SetOverrunErrorHandler:
  6784                           	callstack 24
  6785   001CF4                     
  6786                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  6787   001CF4  C005  F0E1         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  6788   001CF8  C006  F0E2         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  6789   001CFC  C007  F0E3         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+2,_EUSART1_OverrunErrorHandler+2
  6790   001D00  0012               	return		;funcret
  6791   001D02                     __end_of_EUSART1_SetOverrunErrorHandler:
  6792                           	callstack 0
  6793                           
  6794 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6795 ;; Defined at:
  6796 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;  interruptHan    3    4[COMRAM] PTR FTN()void 
  6799 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;		None
  6802 ;; Return value:  Size  Location     Type
  6803 ;;                  1    wreg      void 
  6804 ;; Registers used:
  6805 ;;		wreg, status,2, status,0
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6811 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6814 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6815 ;;Total ram usage:        3 bytes
  6816 ;; Hardware stack levels used: 1
  6817 ;; Hardware stack levels required when called: 4
  6818 ;; This function calls:
  6819 ;;		Nothing
  6820 ;; This function is called by:
  6821 ;;		_EUSART1_Initialize
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text30
  6826   001D02                     __ptext30:
  6827                           	callstack 0
  6828   001D02                     _EUSART1_SetFramingErrorHandler:
  6829                           	callstack 24
  6830   001D02                     
  6831                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  6832   001D02  C005  F0E4         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  6833   001D06  C006  F0E5         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  6834   001D0A  C007  F0E6         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+2,_EUSART1_FramingErrorHandler+2
  6835   001D0E  0012               	return		;funcret
  6836   001D10                     __end_of_EUSART1_SetFramingErrorHandler:
  6837                           	callstack 0
  6838                           
  6839 ;; *************** function _EUSART1_SetErrorHandler *****************
  6840 ;; Defined at:
  6841 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  interruptHan    3    4[COMRAM] PTR FTN()void 
  6844 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;		None
  6847 ;; Return value:  Size  Location     Type
  6848 ;;                  1    wreg      void 
  6849 ;; Registers used:
  6850 ;;		wreg, status,2, status,0
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6856 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6859 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6860 ;;Total ram usage:        3 bytes
  6861 ;; Hardware stack levels used: 1
  6862 ;; Hardware stack levels required when called: 4
  6863 ;; This function calls:
  6864 ;;		Nothing
  6865 ;; This function is called by:
  6866 ;;		_EUSART1_Initialize
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text31
  6871   001D10                     __ptext31:
  6872                           	callstack 0
  6873   001D10                     _EUSART1_SetErrorHandler:
  6874                           	callstack 24
  6875   001D10                     
  6876                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  6877   001D10  C005  F120         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  6878   001D14  C006  F121         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  6879   001D18  C007  F122         	movff	EUSART1_SetErrorHandler@interruptHandler+2,_EUSART1_ErrorHandler+2
  6880   001D1C  0012               	return		;funcret
  6881   001D1E                     __end_of_EUSART1_SetErrorHandler:
  6882                           	callstack 0
  6883                           
  6884 ;; *************** function _INTERRUPT_InterruptManager *****************
  6885 ;; Defined at:
  6886 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6887 ;; Parameters:    Size  Location     Type
  6888 ;;		None
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;		None
  6891 ;; Return value:  Size  Location     Type
  6892 ;;                  1    wreg      void 
  6893 ;; Registers used:
  6894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6895 ;; Tracked objects:
  6896 ;;		On entry : 0/0
  6897 ;;		On exit  : 0/0
  6898 ;;		Unchanged: 0/0
  6899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6902 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6903 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6904 ;;Total ram usage:        4 bytes
  6905 ;; Hardware stack levels used: 1
  6906 ;; Hardware stack levels required when called: 3
  6907 ;; This function calls:
  6908 ;;		NULL
  6909 ;;		_EUSART1_Receive_ISR
  6910 ;;		_EUSART1_Transmit_ISR
  6911 ;;		_EUSART2_Receive_ISR
  6912 ;;		_EUSART2_Transmit_ISR
  6913 ;; This function is called by:
  6914 ;;		Interrupt level 2
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           	psect	intcode
  6919   000008                     __pintcode:
  6920                           	callstack 0
  6921   000008                     _INTERRUPT_InterruptManager:
  6922                           	callstack 20
  6923                           
  6924                           ;incstack = 0
  6925   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6926   00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  6927   00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6928   000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6929   000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6930   00001A                     
  6931                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6932   00001A  ACF2               	btfss	242,6,c	;volatile
  6933   00001C  EF12  F000         	goto	i2u145_41
  6934   000020  EF14  F000         	goto	i2u145_40
  6935   000024                     i2u145_41:
  6936   000024  EF8D  F000         	goto	i2l32
  6937   000028                     i2u145_40:
  6938   000028                     
  6939                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  6940   000028  010E               	movlb	14	; () banked
  6941   00002A  ADC0               	btfss	192,6,b	;volatile
  6942   00002C  EF1A  F000         	goto	i2u146_41
  6943   000030  EF1C  F000         	goto	i2u146_40
  6944   000034                     i2u146_41:
  6945   000034  EF33  F000         	goto	i2l23
  6946   000038                     i2u146_40:
  6947   000038                     
  6948                           ; BSR set to: 14
  6949   000038  ADC8               	btfss	200,6,b	;volatile
  6950   00003A  EF21  F000         	goto	i2u147_41
  6951   00003E  EF23  F000         	goto	i2u147_40
  6952   000042                     i2u147_41:
  6953   000042  EF33  F000         	goto	i2l23
  6954   000046                     i2u147_40:
  6955   000046                     
  6956                           ; BSR set to: 14
  6957                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
  6958   000046  D802               	call	i2u148_48
  6959   000048  EF31  F000         	goto	i2u148_49
  6960   00004C                     i2u148_48:
  6961   00004C  0005               	push	
  6962   00004E  6EFA               	movwf	pclath,c
  6963   000050  0100               	movlb	0	; () banked
  6964   000052  51F9               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
  6965   000054  6EFD               	movwf	tosl,c
  6966   000056  51FA               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
  6967   000058  6EFE               	movwf	tosh,c
  6968   00005A  51FB               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
  6969   00005C  6EFF               	movwf	tosu,c
  6970   00005E  50FA               	movf	pclath,w,c
  6971   000060  0012               	return		;indir
  6972   000062                     i2u148_49:
  6973                           
  6974                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  6975   000062  EF8D  F000         	goto	i2l32
  6976   000066                     i2l23:
  6977                           
  6978                           ; BSR set to: 14
  6979   000066  AFC0               	btfss	192,7,b	;volatile
  6980   000068  EF38  F000         	goto	i2u149_41
  6981   00006C  EF3A  F000         	goto	i2u149_40
  6982   000070                     i2u149_41:
  6983   000070  EF51  F000         	goto	i2l25
  6984   000074                     i2u149_40:
  6985   000074                     
  6986                           ; BSR set to: 14
  6987   000074  AFC8               	btfss	200,7,b	;volatile
  6988   000076  EF3F  F000         	goto	i2u150_41
  6989   00007A  EF41  F000         	goto	i2u150_40
  6990   00007E                     i2u150_41:
  6991   00007E  EF51  F000         	goto	i2l25
  6992   000082                     i2u150_40:
  6993   000082                     
  6994                           ; BSR set to: 14
  6995                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
  6996   000082  D802               	call	i2u151_48
  6997   000084  EF4F  F000         	goto	i2u151_49
  6998   000088                     i2u151_48:
  6999   000088  0005               	push	
  7000   00008A  6EFA               	movwf	pclath,c
  7001   00008C  0100               	movlb	0	; () banked
  7002   00008E  51F6               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
  7003   000090  6EFD               	movwf	tosl,c
  7004   000092  51F7               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
  7005   000094  6EFE               	movwf	tosh,c
  7006   000096  51F8               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
  7007   000098  6EFF               	movwf	tosu,c
  7008   00009A  50FA               	movf	pclath,w,c
  7009   00009C  0012               	return		;indir
  7010   00009E                     i2u151_49:
  7011                           
  7012                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  7013   00009E  EF8D  F000         	goto	i2l32
  7014   0000A2                     i2l25:
  7015                           
  7016                           ; BSR set to: 14
  7017   0000A2  A9C0               	btfss	192,4,b	;volatile
  7018   0000A4  EF56  F000         	goto	i2u152_41
  7019   0000A8  EF58  F000         	goto	i2u152_40
  7020   0000AC                     i2u152_41:
  7021   0000AC  EF6F  F000         	goto	i2l27
  7022   0000B0                     i2u152_40:
  7023   0000B0                     
  7024                           ; BSR set to: 14
  7025   0000B0  A9C8               	btfss	200,4,b	;volatile
  7026   0000B2  EF5D  F000         	goto	i2u153_41
  7027   0000B6  EF5F  F000         	goto	i2u153_40
  7028   0000BA                     i2u153_41:
  7029   0000BA  EF6F  F000         	goto	i2l27
  7030   0000BE                     i2u153_40:
  7031   0000BE                     
  7032                           ; BSR set to: 14
  7033                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_TxDefaultInterruptHandler();
  7034   0000BE  D802               	call	i2u154_48
  7035   0000C0  EF6D  F000         	goto	i2u154_49
  7036   0000C4                     i2u154_48:
  7037   0000C4  0005               	push	
  7038   0000C6  6EFA               	movwf	pclath,c
  7039   0000C8  0100               	movlb	0	; () banked
  7040   0000CA  51F3               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
  7041   0000CC  6EFD               	movwf	tosl,c
  7042   0000CE  51F4               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
  7043   0000D0  6EFE               	movwf	tosh,c
  7044   0000D2  51F5               	movf	(_EUSART1_TxDefaultInterruptHandler+2)& (0+255),w,b
  7045   0000D4  6EFF               	movwf	tosu,c
  7046   0000D6  50FA               	movf	pclath,w,c
  7047   0000D8  0012               	return		;indir
  7048   0000DA                     i2u154_49:
  7049                           
  7050                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  7051   0000DA  EF8D  F000         	goto	i2l32
  7052   0000DE                     i2l27:
  7053                           
  7054                           ; BSR set to: 14
  7055   0000DE  ABC0               	btfss	192,5,b	;volatile
  7056   0000E0  EF74  F000         	goto	i2u155_41
  7057   0000E4  EF76  F000         	goto	i2u155_40
  7058   0000E8                     i2u155_41:
  7059   0000E8  EF8D  F000         	goto	i2l26
  7060   0000EC                     i2u155_40:
  7061   0000EC                     
  7062                           ; BSR set to: 14
  7063   0000EC  ABC8               	btfss	200,5,b	;volatile
  7064   0000EE  EF7B  F000         	goto	i2u156_41
  7065   0000F2  EF7D  F000         	goto	i2u156_40
  7066   0000F6                     i2u156_41:
  7067   0000F6  EF8D  F000         	goto	i2l26
  7068   0000FA                     i2u156_40:
  7069   0000FA                     
  7070                           ; BSR set to: 14
  7071                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART1_RxDefaultInterruptHandler();
  7072   0000FA  D802               	call	i2u157_48
  7073   0000FC  EF8B  F000         	goto	i2u157_49
  7074   000100                     i2u157_48:
  7075   000100  0005               	push	
  7076   000102  6EFA               	movwf	pclath,c
  7077   000104  0100               	movlb	0	; () banked
  7078   000106  51F0               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
  7079   000108  6EFD               	movwf	tosl,c
  7080   00010A  51F1               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
  7081   00010C  6EFE               	movwf	tosh,c
  7082   00010E  51F2               	movf	(_EUSART1_RxDefaultInterruptHandler+2)& (0+255),w,b
  7083   000110  6EFF               	movwf	tosu,c
  7084   000112  50FA               	movf	pclath,w,c
  7085   000114  0012               	return		;indir
  7086   000116                     i2u157_49:
  7087                           
  7088                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  7089   000116  EF8D  F000         	goto	i2l32
  7090   00011A                     i2l26:
  7091   00011A                     i2l32:
  7092   00011A  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  7093   00011E  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  7094   000122  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7095   000126  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7096   00012A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7097   00012C  0011               	retfie		f
  7098   00012E                     __end_of_INTERRUPT_InterruptManager:
  7099                           	callstack 0
  7100                           
  7101 ;; *************** function _EUSART2_Transmit_ISR *****************
  7102 ;; Defined at:
  7103 ;;		line 197 in file "mcc_generated_files/eusart2.c"
  7104 ;; Parameters:    Size  Location     Type
  7105 ;;		None
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;		None
  7108 ;; Return value:  Size  Location     Type
  7109 ;;                  1    wreg      void 
  7110 ;; Registers used:
  7111 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7112 ;; Tracked objects:
  7113 ;;		On entry : 0/0
  7114 ;;		On exit  : 0/0
  7115 ;;		Unchanged: 0/0
  7116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7121 ;;Total ram usage:        0 bytes
  7122 ;; Hardware stack levels used: 1
  7123 ;; This function calls:
  7124 ;;		Nothing
  7125 ;; This function is called by:
  7126 ;;		_EUSART2_Initialize
  7127 ;;		_INTERRUPT_InterruptManager
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131                           	psect	text33
  7132   001AC6                     __ptext33:
  7133                           	callstack 0
  7134   001AC6                     _EUSART2_Transmit_ISR:
  7135                           	callstack 22
  7136   001AC6                     
  7137                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
  7138   001AC6  0E08               	movlw	8
  7139   001AC8  6058               	cpfslt	_eusart2TxBufferRemaining^0,c	;volatile
  7140   001ACA  EF69  F00D         	goto	i2u124_41
  7141   001ACE  EF6B  F00D         	goto	i2u124_40
  7142   001AD2                     i2u124_41:
  7143   001AD2  EF7F  F00D         	goto	i2l138
  7144   001AD6                     i2u124_40:
  7145   001AD6                     
  7146                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          X2REG = eusart2TxBuffer[eusart2TxTail++];
  7147   001AD6  5059               	movf	_eusart2TxTail^0,w,c
  7148   001AD8  0FD9               	addlw	low _eusart2TxBuffer
  7149   001ADA  6ED9               	movwf	fsr2l,c
  7150   001ADC  6ADA               	clrf	fsr2h,c
  7151   001ADE  50DF               	movf	indf2,w,c
  7152   001AE0  010E               	movlb	14	; () banked
  7153   001AE2  6F95               	movwf	149,b	;volatile
  7154   001AE4                     
  7155                           ; BSR set to: 14
  7156   001AE4  2A59               	incf	_eusart2TxTail^0,f,c	;volatile
  7157   001AE6                     
  7158                           ; BSR set to: 14
  7159                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
  7160   001AE6  0E07               	movlw	7
  7161   001AE8  6459               	cpfsgt	_eusart2TxTail^0,c	;volatile
  7162   001AEA  EF79  F00D         	goto	i2u125_41
  7163   001AEE  EF7B  F00D         	goto	i2u125_40
  7164   001AF2                     i2u125_41:
  7165   001AF2  EF7C  F00D         	goto	i2l2251
  7166   001AF6                     i2u125_40:
  7167   001AF6                     
  7168                           ; BSR set to: 14
  7169                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
  7170   001AF6  6A59               	clrf	_eusart2TxTail^0,c	;volatile
  7171   001AF8                     i2l2251:
  7172                           
  7173                           ; BSR set to: 14
  7174                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
  7175   001AF8  2A58               	incf	_eusart2TxBufferRemaining^0,f,c	;volatile
  7176                           
  7177                           ;mcc_generated_files/eusart2.c: 209:     }
  7178   001AFA  EF81  F00D         	goto	i2l141
  7179   001AFE                     i2l138:
  7180                           
  7181                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
  7182   001AFE  010E               	movlb	14	; () banked
  7183   001B00  9DC0               	bcf	192,6,b	;volatile
  7184   001B02                     i2l141:
  7185                           
  7186                           ; BSR set to: 14
  7187   001B02  0012               	return		;funcret
  7188   001B04                     __end_of_EUSART2_Transmit_ISR:
  7189                           	callstack 0
  7190                           
  7191 ;; *************** function _EUSART2_Receive_ISR *****************
  7192 ;; Defined at:
  7193 ;;		line 216 in file "mcc_generated_files/eusart2.c"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;		None
  7196 ;; Auto vars:     Size  Location     Type
  7197 ;;		None
  7198 ;; Return value:  Size  Location     Type
  7199 ;;                  1    wreg      void 
  7200 ;; Registers used:
  7201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7202 ;; Tracked objects:
  7203 ;;		On entry : 0/0
  7204 ;;		On exit  : 0/0
  7205 ;;		Unchanged: 0/0
  7206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7211 ;;Total ram usage:        0 bytes
  7212 ;; Hardware stack levels used: 1
  7213 ;; Hardware stack levels required when called: 2
  7214 ;; This function calls:
  7215 ;;		NULL
  7216 ;;		_EUSART2_DefaultErrorHandler
  7217 ;;		_EUSART2_DefaultFramingErrorHandler
  7218 ;;		_EUSART2_DefaultOverrunErrorHandler
  7219 ;;		_EUSART2_RxDataHandler
  7220 ;; This function is called by:
  7221 ;;		_EUSART2_Initialize
  7222 ;;		_INTERRUPT_InterruptManager
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text34
  7227   001500                     __ptext34:
  7228                           	callstack 0
  7229   001500                     _EUSART2_Receive_ISR:
  7230                           	callstack 20
  7231   001500                     
  7232                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
  7233   001500  5057               	movf	_eusart2RxHead^0,w,c
  7234   001502  0FC9               	addlw	low _eusart2RxStatusBuffer
  7235   001504  6ED9               	movwf	fsr2l,c
  7236   001506  6ADA               	clrf	fsr2h,c
  7237   001508  6ADF               	clrf	indf2,c
  7238   00150A                     
  7239                           ;mcc_generated_files/eusart2.c: 221:     if(RC2STAbits.FERR){
  7240   00150A  010E               	movlb	14	; () banked
  7241   00150C  A598               	btfss	152,2,b	;volatile
  7242   00150E  EF8B  F00A         	goto	i2u126_41
  7243   001512  EF8D  F00A         	goto	i2u126_40
  7244   001516                     i2u126_41:
  7245   001516  EFA0  F00A         	goto	i2l2261
  7246   00151A                     i2u126_40:
  7247   00151A                     
  7248                           ; BSR set to: 14
  7249                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
  7250   00151A  5057               	movf	_eusart2RxHead^0,w,c
  7251   00151C  0FC9               	addlw	low _eusart2RxStatusBuffer
  7252   00151E  6ED9               	movwf	fsr2l,c
  7253   001520  6ADA               	clrf	fsr2h,c
  7254   001522  0100               	movlb	0	; () banked
  7255   001524  82DF               	bsf	indf2,1,c
  7256   001526                     
  7257                           ; BSR set to: 0
  7258                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
  7259   001526  D802               	call	i2u127_48
  7260   001528  EFA0  F00A         	goto	i2u127_49
  7261   00152C                     i2u127_48:
  7262   00152C  0005               	push	
  7263   00152E  6EFA               	movwf	pclath,c
  7264   001530  51ED               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
  7265   001532  6EFD               	movwf	tosl,c
  7266   001534  51EE               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
  7267   001536  6EFE               	movwf	tosh,c
  7268   001538  51EF               	movf	(_EUSART2_FramingErrorHandler+2)& (0+255),w,b
  7269   00153A  6EFF               	movwf	tosu,c
  7270   00153C  50FA               	movf	pclath,w,c
  7271   00153E  0012               	return		;indir
  7272   001540                     i2u127_49:
  7273   001540                     i2l2261:
  7274                           
  7275                           ;mcc_generated_files/eusart2.c: 226:     if(RC2STAbits.OERR){
  7276   001540  010E               	movlb	14	; () banked
  7277   001542  A398               	btfss	152,1,b	;volatile
  7278   001544  EFA6  F00A         	goto	i2u128_41
  7279   001548  EFA8  F00A         	goto	i2u128_40
  7280   00154C                     i2u128_41:
  7281   00154C  EFBB  F00A         	goto	i2l2267
  7282   001550                     i2u128_40:
  7283   001550                     
  7284                           ; BSR set to: 14
  7285                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
  7286   001550  5057               	movf	_eusart2RxHead^0,w,c
  7287   001552  0FC9               	addlw	low _eusart2RxStatusBuffer
  7288   001554  6ED9               	movwf	fsr2l,c
  7289   001556  6ADA               	clrf	fsr2h,c
  7290   001558  0100               	movlb	0	; () banked
  7291   00155A  84DF               	bsf	indf2,2,c
  7292   00155C                     
  7293                           ; BSR set to: 0
  7294                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
  7295   00155C  D802               	call	i2u129_48
  7296   00155E  EFBB  F00A         	goto	i2u129_49
  7297   001562                     i2u129_48:
  7298   001562  0005               	push	
  7299   001564  6EFA               	movwf	pclath,c
  7300   001566  51EA               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
  7301   001568  6EFD               	movwf	tosl,c
  7302   00156A  51EB               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
  7303   00156C  6EFE               	movwf	tosh,c
  7304   00156E  51EC               	movf	(_EUSART2_OverrunErrorHandler+2)& (0+255),w,b
  7305   001570  6EFF               	movwf	tosu,c
  7306   001572  50FA               	movf	pclath,w,c
  7307   001574  0012               	return		;indir
  7308   001576                     i2u129_49:
  7309   001576                     i2l2267:
  7310                           
  7311                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
  7312   001576  5057               	movf	_eusart2RxHead^0,w,c
  7313   001578  0FC9               	addlw	low _eusart2RxStatusBuffer
  7314   00157A  6ED9               	movwf	fsr2l,c
  7315   00157C  6ADA               	clrf	fsr2h,c
  7316   00157E  50DF               	movf	indf2,w,c
  7317   001580  B4D8               	btfsc	status,2,c
  7318   001582  EFC5  F00A         	goto	i2u130_41
  7319   001586  EFC7  F00A         	goto	i2u130_40
  7320   00158A                     i2u130_41:
  7321   00158A  EFD7  F00A         	goto	i2l2271
  7322   00158E                     i2u130_40:
  7323   00158E                     
  7324                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
  7325   00158E  D802               	call	i2u131_48
  7326   001590  EFD5  F00A         	goto	i2u131_49
  7327   001594                     i2u131_48:
  7328   001594  0005               	push	
  7329   001596  6EFA               	movwf	pclath,c
  7330   001598  0100               	movlb	0	; () banked
  7331   00159A  51E7               	movf	_EUSART2_ErrorHandler& (0+255),w,b
  7332   00159C  6EFD               	movwf	tosl,c
  7333   00159E  51E8               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
  7334   0015A0  6EFE               	movwf	tosh,c
  7335   0015A2  51E9               	movf	(_EUSART2_ErrorHandler+2)& (0+255),w,b
  7336   0015A4  6EFF               	movwf	tosu,c
  7337   0015A6  50FA               	movf	pclath,w,c
  7338   0015A8  0012               	return		;indir
  7339   0015AA                     i2u131_49:
  7340                           
  7341                           ;mcc_generated_files/eusart2.c: 233:     } else {
  7342   0015AA  EFD9  F00A         	goto	i2l148
  7343   0015AE                     i2l2271:
  7344                           
  7345                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
  7346   0015AE  ECEE  F00D         	call	_EUSART2_RxDataHandler	;wreg free
  7347   0015B2                     i2l148:
  7348   0015B2  0012               	return		;funcret
  7349   0015B4                     __end_of_EUSART2_Receive_ISR:
  7350                           	callstack 0
  7351                           
  7352 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
  7353 ;; Defined at:
  7354 ;;		line 252 in file "mcc_generated_files/eusart2.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;		None
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;		None
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  1    wreg      void 
  7361 ;; Registers used:
  7362 ;;		None
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7372 ;;Total ram usage:        0 bytes
  7373 ;; Hardware stack levels used: 1
  7374 ;; This function calls:
  7375 ;;		Nothing
  7376 ;; This function is called by:
  7377 ;;		_EUSART2_Initialize
  7378 ;;		_EUSART2_Receive_ISR
  7379 ;; This function uses a non-reentrant model
  7380 ;;
  7381                           
  7382                           	psect	text35
  7383   001D28                     __ptext35:
  7384                           	callstack 0
  7385   001D28                     _EUSART2_DefaultOverrunErrorHandler:
  7386                           	callstack 21
  7387   001D28                     
  7388                           ;mcc_generated_files/eusart2.c: 255:     RC2STAbits.CREN = 0;
  7389   001D28  010E               	movlb	14	; () banked
  7390   001D2A  9998               	bcf	152,4,b	;volatile
  7391                           
  7392                           ;mcc_generated_files/eusart2.c: 256:     RC2STAbits.CREN = 1;
  7393   001D2C  8998               	bsf	152,4,b	;volatile
  7394   001D2E                     
  7395                           ; BSR set to: 14
  7396   001D2E  0012               	return		;funcret
  7397   001D30                     __end_of_EUSART2_DefaultOverrunErrorHandler:
  7398                           	callstack 0
  7399                           
  7400 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
  7401 ;; Defined at:
  7402 ;;		line 250 in file "mcc_generated_files/eusart2.c"
  7403 ;; Parameters:    Size  Location     Type
  7404 ;;		None
  7405 ;; Auto vars:     Size  Location     Type
  7406 ;;		None
  7407 ;; Return value:  Size  Location     Type
  7408 ;;                  1    wreg      void 
  7409 ;; Registers used:
  7410 ;;		None
  7411 ;; Tracked objects:
  7412 ;;		On entry : 0/0
  7413 ;;		On exit  : 0/0
  7414 ;;		Unchanged: 0/0
  7415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7420 ;;Total ram usage:        0 bytes
  7421 ;; Hardware stack levels used: 1
  7422 ;; This function calls:
  7423 ;;		Nothing
  7424 ;; This function is called by:
  7425 ;;		_EUSART2_Initialize
  7426 ;;		_EUSART2_Receive_ISR
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           	psect	text36
  7431   001D46                     __ptext36:
  7432                           	callstack 0
  7433   001D46                     _EUSART2_DefaultFramingErrorHandler:
  7434                           	callstack 21
  7435   001D46  0012               	return		;funcret
  7436   001D48                     __end_of_EUSART2_DefaultFramingErrorHandler:
  7437                           	callstack 0
  7438                           
  7439 ;; *************** function _EUSART2_DefaultErrorHandler *****************
  7440 ;; Defined at:
  7441 ;;		line 260 in file "mcc_generated_files/eusart2.c"
  7442 ;; Parameters:    Size  Location     Type
  7443 ;;		None
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;		None
  7446 ;; Return value:  Size  Location     Type
  7447 ;;                  1    wreg      void 
  7448 ;; Registers used:
  7449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7450 ;; Tracked objects:
  7451 ;;		On entry : 0/0
  7452 ;;		On exit  : 0/0
  7453 ;;		Unchanged: 0/0
  7454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7459 ;;Total ram usage:        0 bytes
  7460 ;; Hardware stack levels used: 1
  7461 ;; Hardware stack levels required when called: 1
  7462 ;; This function calls:
  7463 ;;		_EUSART2_RxDataHandler
  7464 ;; This function is called by:
  7465 ;;		_EUSART2_Initialize
  7466 ;;		_EUSART2_Receive_ISR
  7467 ;; This function uses a non-reentrant model
  7468 ;;
  7469                           
  7470                           	psect	text37
  7471   001D30                     __ptext37:
  7472                           	callstack 0
  7473   001D30                     _EUSART2_DefaultErrorHandler:
  7474                           	callstack 20
  7475   001D30                     
  7476                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
  7477   001D30  ECEE  F00D         	call	_EUSART2_RxDataHandler	;wreg free
  7478   001D34  0012               	return		;funcret
  7479   001D36                     __end_of_EUSART2_DefaultErrorHandler:
  7480                           	callstack 0
  7481                           
  7482 ;; *************** function _EUSART2_RxDataHandler *****************
  7483 ;; Defined at:
  7484 ;;		line 240 in file "mcc_generated_files/eusart2.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;		None
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;		None
  7489 ;; Return value:  Size  Location     Type
  7490 ;;                  1    wreg      void 
  7491 ;; Registers used:
  7492 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7502 ;;Total ram usage:        0 bytes
  7503 ;; Hardware stack levels used: 1
  7504 ;; This function calls:
  7505 ;;		Nothing
  7506 ;; This function is called by:
  7507 ;;		_EUSART2_Receive_ISR
  7508 ;;		_EUSART2_DefaultErrorHandler
  7509 ;; This function uses a non-reentrant model
  7510 ;;
  7511                           
  7512                           	psect	text38
  7513   001BDC                     __ptext38:
  7514                           	callstack 0
  7515   001BDC                     _EUSART2_RxDataHandler:
  7516                           	callstack 21
  7517   001BDC                     
  7518                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  7519   001BDC  5057               	movf	_eusart2RxHead^0,w,c
  7520   001BDE  0FD1               	addlw	low _eusart2RxBuffer
  7521   001BE0  6ED9               	movwf	fsr2l,c
  7522   001BE2  6ADA               	clrf	fsr2h,c
  7523   001BE4  CE94 FFDF          	movff	3732,indf2	;volatile
  7524   001BE8  2A57               	incf	_eusart2RxHead^0,f,c	;volatile
  7525   001BEA                     
  7526                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  7527   001BEA  0E07               	movlw	7
  7528   001BEC  6457               	cpfsgt	_eusart2RxHead^0,c	;volatile
  7529   001BEE  EFFB  F00D         	goto	i2u118_41
  7530   001BF2  EFFD  F00D         	goto	i2u118_40
  7531   001BF6                     i2u118_41:
  7532   001BF6  EFFE  F00D         	goto	i2l2103
  7533   001BFA                     i2u118_40:
  7534   001BFA                     
  7535                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
  7536   001BFA  6A57               	clrf	_eusart2RxHead^0,c	;volatile
  7537   001BFC                     i2l2103:
  7538                           
  7539                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
  7540   001BFC  2A55               	incf	_eusart2RxCount^0,f,c	;volatile
  7541   001BFE  0012               	return		;funcret
  7542   001C00                     __end_of_EUSART2_RxDataHandler:
  7543                           	callstack 0
  7544                           
  7545 ;; *************** function _EUSART1_Transmit_ISR *****************
  7546 ;; Defined at:
  7547 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  7548 ;; Parameters:    Size  Location     Type
  7549 ;;		None
  7550 ;; Auto vars:     Size  Location     Type
  7551 ;;		None
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  1    wreg      void 
  7554 ;; Registers used:
  7555 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;Total ram usage:        0 bytes
  7566 ;; Hardware stack levels used: 1
  7567 ;; This function calls:
  7568 ;;		Nothing
  7569 ;; This function is called by:
  7570 ;;		_EUSART1_Initialize
  7571 ;;		_INTERRUPT_InterruptManager
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           	psect	text39
  7576   001B04                     __ptext39:
  7577                           	callstack 0
  7578   001B04                     _EUSART1_Transmit_ISR:
  7579                           	callstack 22
  7580   001B04                     
  7581                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  7582   001B04  0E08               	movlw	8
  7583   001B06  6051               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  7584   001B08  EF88  F00D         	goto	i2u134_41
  7585   001B0C  EF8A  F00D         	goto	i2u134_40
  7586   001B10                     i2u134_41:
  7587   001B10  EF9D  F00D         	goto	i2l288
  7588   001B14                     i2u134_40:
  7589   001B14                     
  7590                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
  7591   001B14  5052               	movf	_eusart1TxTail^0,w,c
  7592   001B16  0FC1               	addlw	low _eusart1TxBuffer
  7593   001B18  6ED9               	movwf	fsr2l,c
  7594   001B1A  6ADA               	clrf	fsr2h,c
  7595   001B1C  50DF               	movf	indf2,w,c
  7596   001B1E  6E99               	movwf	153,c	;volatile
  7597   001B20  2A52               	incf	_eusart1TxTail^0,f,c	;volatile
  7598   001B22                     
  7599                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  7600   001B22  0E07               	movlw	7
  7601   001B24  6452               	cpfsgt	_eusart1TxTail^0,c	;volatile
  7602   001B26  EF97  F00D         	goto	i2u135_41
  7603   001B2A  EF99  F00D         	goto	i2u135_40
  7604   001B2E                     i2u135_41:
  7605   001B2E  EF9A  F00D         	goto	i2l2303
  7606   001B32                     i2u135_40:
  7607   001B32                     
  7608                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  7609   001B32  6A52               	clrf	_eusart1TxTail^0,c	;volatile
  7610   001B34                     i2l2303:
  7611                           
  7612                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  7613   001B34  2A51               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  7614                           
  7615                           ;mcc_generated_files/eusart1.c: 218:     }
  7616   001B36  EF9F  F00D         	goto	i2l291
  7617   001B3A                     i2l288:
  7618                           
  7619                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
  7620   001B3A  010E               	movlb	14	; () banked
  7621   001B3C  99C0               	bcf	192,4,b	;volatile
  7622   001B3E                     i2l291:
  7623   001B3E  0012               	return		;funcret
  7624   001B40                     __end_of_EUSART1_Transmit_ISR:
  7625                           	callstack 0
  7626                           
  7627 ;; *************** function _EUSART1_Receive_ISR *****************
  7628 ;; Defined at:
  7629 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;		None
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;		None
  7634 ;; Return value:  Size  Location     Type
  7635 ;;                  1    wreg      void 
  7636 ;; Registers used:
  7637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7638 ;; Tracked objects:
  7639 ;;		On entry : 0/0
  7640 ;;		On exit  : 0/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7647 ;;Total ram usage:        0 bytes
  7648 ;; Hardware stack levels used: 1
  7649 ;; Hardware stack levels required when called: 2
  7650 ;; This function calls:
  7651 ;;		NULL
  7652 ;;		_EUSART1_DefaultErrorHandler
  7653 ;;		_EUSART1_DefaultFramingErrorHandler
  7654 ;;		_EUSART1_DefaultOverrunErrorHandler
  7655 ;;		_EUSART1_RxDataHandler
  7656 ;; This function is called by:
  7657 ;;		_EUSART1_Initialize
  7658 ;;		_INTERRUPT_InterruptManager
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           	psect	text40
  7663   0015B4                     __ptext40:
  7664                           	callstack 0
  7665   0015B4                     _EUSART1_Receive_ISR:
  7666                           	callstack 20
  7667   0015B4                     
  7668                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  7669   0015B4  5050               	movf	_eusart1RxHead^0,w,c
  7670   0015B6  0FB1               	addlw	low _eusart1RxStatusBuffer
  7671   0015B8  6ED9               	movwf	fsr2l,c
  7672   0015BA  6ADA               	clrf	fsr2h,c
  7673   0015BC  6ADF               	clrf	indf2,c
  7674   0015BE                     
  7675                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
  7676   0015BE  A49C               	btfss	156,2,c	;volatile
  7677   0015C0  EFE4  F00A         	goto	i2u136_41
  7678   0015C4  EFE6  F00A         	goto	i2u136_40
  7679   0015C8                     i2u136_41:
  7680   0015C8  EFF9  F00A         	goto	i2l2313
  7681   0015CC                     i2u136_40:
  7682   0015CC                     
  7683                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  7684   0015CC  5050               	movf	_eusart1RxHead^0,w,c
  7685   0015CE  0FB1               	addlw	low _eusart1RxStatusBuffer
  7686   0015D0  6ED9               	movwf	fsr2l,c
  7687   0015D2  6ADA               	clrf	fsr2h,c
  7688   0015D4  0100               	movlb	0	; () banked
  7689   0015D6  82DF               	bsf	indf2,1,c
  7690   0015D8                     
  7691                           ; BSR set to: 0
  7692                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  7693   0015D8  D802               	call	i2u137_48
  7694   0015DA  EFF9  F00A         	goto	i2u137_49
  7695   0015DE                     i2u137_48:
  7696   0015DE  0005               	push	
  7697   0015E0  6EFA               	movwf	pclath,c
  7698   0015E2  51E4               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  7699   0015E4  6EFD               	movwf	tosl,c
  7700   0015E6  51E5               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  7701   0015E8  6EFE               	movwf	tosh,c
  7702   0015EA  51E6               	movf	(_EUSART1_FramingErrorHandler+2)& (0+255),w,b
  7703   0015EC  6EFF               	movwf	tosu,c
  7704   0015EE  50FA               	movf	pclath,w,c
  7705   0015F0  0012               	return		;indir
  7706   0015F2                     i2u137_49:
  7707   0015F2                     i2l2313:
  7708                           
  7709                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
  7710   0015F2  A29C               	btfss	156,1,c	;volatile
  7711   0015F4  EFFE  F00A         	goto	i2u138_41
  7712   0015F8  EF00  F00B         	goto	i2u138_40
  7713   0015FC                     i2u138_41:
  7714   0015FC  EF13  F00B         	goto	i2l2319
  7715   001600                     i2u138_40:
  7716   001600                     
  7717                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  7718   001600  5050               	movf	_eusart1RxHead^0,w,c
  7719   001602  0FB1               	addlw	low _eusart1RxStatusBuffer
  7720   001604  6ED9               	movwf	fsr2l,c
  7721   001606  6ADA               	clrf	fsr2h,c
  7722   001608  0100               	movlb	0	; () banked
  7723   00160A  84DF               	bsf	indf2,2,c
  7724   00160C                     
  7725                           ; BSR set to: 0
  7726                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  7727   00160C  D802               	call	i2u139_48
  7728   00160E  EF13  F00B         	goto	i2u139_49
  7729   001612                     i2u139_48:
  7730   001612  0005               	push	
  7731   001614  6EFA               	movwf	pclath,c
  7732   001616  51E1               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  7733   001618  6EFD               	movwf	tosl,c
  7734   00161A  51E2               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  7735   00161C  6EFE               	movwf	tosh,c
  7736   00161E  51E3               	movf	(_EUSART1_OverrunErrorHandler+2)& (0+255),w,b
  7737   001620  6EFF               	movwf	tosu,c
  7738   001622  50FA               	movf	pclath,w,c
  7739   001624  0012               	return		;indir
  7740   001626                     i2u139_49:
  7741   001626                     i2l2319:
  7742                           
  7743                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  7744   001626  5050               	movf	_eusart1RxHead^0,w,c
  7745   001628  0FB1               	addlw	low _eusart1RxStatusBuffer
  7746   00162A  6ED9               	movwf	fsr2l,c
  7747   00162C  6ADA               	clrf	fsr2h,c
  7748   00162E  50DF               	movf	indf2,w,c
  7749   001630  B4D8               	btfsc	status,2,c
  7750   001632  EF1D  F00B         	goto	i2u140_41
  7751   001636  EF1F  F00B         	goto	i2u140_40
  7752   00163A                     i2u140_41:
  7753   00163A  EF2F  F00B         	goto	i2l2323
  7754   00163E                     i2u140_40:
  7755   00163E                     
  7756                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  7757   00163E  D802               	call	i2u141_48
  7758   001640  EF2D  F00B         	goto	i2u141_49
  7759   001644                     i2u141_48:
  7760   001644  0005               	push	
  7761   001646  6EFA               	movwf	pclath,c
  7762   001648  0101               	movlb	1	; () banked
  7763   00164A  5120               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  7764   00164C  6EFD               	movwf	tosl,c
  7765   00164E  5121               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  7766   001650  6EFE               	movwf	tosh,c
  7767   001652  5122               	movf	(_EUSART1_ErrorHandler+2)& (0+255),w,b
  7768   001654  6EFF               	movwf	tosu,c
  7769   001656  50FA               	movf	pclath,w,c
  7770   001658  0012               	return		;indir
  7771   00165A                     i2u141_49:
  7772                           
  7773                           ;mcc_generated_files/eusart1.c: 242:     } else {
  7774   00165A  EF31  F00B         	goto	i2l298
  7775   00165E                     i2l2323:
  7776                           
  7777                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  7778   00165E  EC00  F00E         	call	_EUSART1_RxDataHandler	;wreg free
  7779   001662                     i2l298:
  7780   001662  0012               	return		;funcret
  7781   001664                     __end_of_EUSART1_Receive_ISR:
  7782                           	callstack 0
  7783                           
  7784 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  7785 ;; Defined at:
  7786 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;		None
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;		None
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  1    wreg      void 
  7793 ;; Registers used:
  7794 ;;		None
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 0/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7804 ;;Total ram usage:        0 bytes
  7805 ;; Hardware stack levels used: 1
  7806 ;; This function calls:
  7807 ;;		Nothing
  7808 ;; This function is called by:
  7809 ;;		_EUSART1_Initialize
  7810 ;;		_EUSART1_Receive_ISR
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           	psect	text41
  7815   001D36                     __ptext41:
  7816                           	callstack 0
  7817   001D36                     _EUSART1_DefaultOverrunErrorHandler:
  7818                           	callstack 21
  7819   001D36                     
  7820                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
  7821   001D36  989C               	bcf	156,4,c	;volatile
  7822                           
  7823                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
  7824   001D38  889C               	bsf	156,4,c	;volatile
  7825   001D3A  0012               	return		;funcret
  7826   001D3C                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  7827                           	callstack 0
  7828                           
  7829 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  7830 ;; Defined at:
  7831 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;		None
  7834 ;; Auto vars:     Size  Location     Type
  7835 ;;		None
  7836 ;; Return value:  Size  Location     Type
  7837 ;;                  1    wreg      void 
  7838 ;; Registers used:
  7839 ;;		None
  7840 ;; Tracked objects:
  7841 ;;		On entry : 0/0
  7842 ;;		On exit  : 0/0
  7843 ;;		Unchanged: 0/0
  7844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7849 ;;Total ram usage:        0 bytes
  7850 ;; Hardware stack levels used: 1
  7851 ;; This function calls:
  7852 ;;		Nothing
  7853 ;; This function is called by:
  7854 ;;		_EUSART1_Initialize
  7855 ;;		_EUSART1_Receive_ISR
  7856 ;; This function uses a non-reentrant model
  7857 ;;
  7858                           
  7859                           	psect	text42
  7860   001D48                     __ptext42:
  7861                           	callstack 0
  7862   001D48                     _EUSART1_DefaultFramingErrorHandler:
  7863                           	callstack 21
  7864   001D48  0012               	return		;funcret
  7865   001D4A                     __end_of_EUSART1_DefaultFramingErrorHandler:
  7866                           	callstack 0
  7867                           
  7868 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  7869 ;; Defined at:
  7870 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;		None
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;		None
  7875 ;; Return value:  Size  Location     Type
  7876 ;;                  1    wreg      void 
  7877 ;; Registers used:
  7878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7879 ;; Tracked objects:
  7880 ;;		On entry : 0/0
  7881 ;;		On exit  : 0/0
  7882 ;;		Unchanged: 0/0
  7883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7888 ;;Total ram usage:        0 bytes
  7889 ;; Hardware stack levels used: 1
  7890 ;; Hardware stack levels required when called: 1
  7891 ;; This function calls:
  7892 ;;		_EUSART1_RxDataHandler
  7893 ;; This function is called by:
  7894 ;;		_EUSART1_Initialize
  7895 ;;		_EUSART1_Receive_ISR
  7896 ;; This function uses a non-reentrant model
  7897 ;;
  7898                           
  7899                           	psect	text43
  7900   001D3C                     __ptext43:
  7901                           	callstack 0
  7902   001D3C                     _EUSART1_DefaultErrorHandler:
  7903                           	callstack 20
  7904   001D3C                     
  7905                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  7906   001D3C  EC00  F00E         	call	_EUSART1_RxDataHandler	;wreg free
  7907   001D40  0012               	return		;funcret
  7908   001D42                     __end_of_EUSART1_DefaultErrorHandler:
  7909                           	callstack 0
  7910                           
  7911 ;; *************** function _EUSART1_RxDataHandler *****************
  7912 ;; Defined at:
  7913 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;		None
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;		None
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  1    wreg      void 
  7920 ;; Registers used:
  7921 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7931 ;;Total ram usage:        0 bytes
  7932 ;; Hardware stack levels used: 1
  7933 ;; This function calls:
  7934 ;;		Nothing
  7935 ;; This function is called by:
  7936 ;;		_EUSART1_Receive_ISR
  7937 ;;		_EUSART1_DefaultErrorHandler
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           	psect	text44
  7942   001C00                     __ptext44:
  7943                           	callstack 0
  7944   001C00                     _EUSART1_RxDataHandler:
  7945                           	callstack 21
  7946   001C00                     
  7947                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  7948   001C00  5050               	movf	_eusart1RxHead^0,w,c
  7949   001C02  0FB9               	addlw	low _eusart1RxBuffer
  7950   001C04  6ED9               	movwf	fsr2l,c
  7951   001C06  6ADA               	clrf	fsr2h,c
  7952   001C08  CF98 FFDF          	movff	3992,indf2	;volatile
  7953   001C0C  2A50               	incf	_eusart1RxHead^0,f,c	;volatile
  7954   001C0E                     
  7955                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  7956   001C0E  0E07               	movlw	7
  7957   001C10  6450               	cpfsgt	_eusart1RxHead^0,c	;volatile
  7958   001C12  EF0D  F00E         	goto	i2u119_41
  7959   001C16  EF0F  F00E         	goto	i2u119_40
  7960   001C1A                     i2u119_41:
  7961   001C1A  EF10  F00E         	goto	i2l2123
  7962   001C1E                     i2u119_40:
  7963   001C1E                     
  7964                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  7965   001C1E  6A50               	clrf	_eusart1RxHead^0,c	;volatile
  7966   001C20                     i2l2123:
  7967                           
  7968                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  7969   001C20  2A4E               	incf	_eusart1RxCount^0,f,c	;volatile
  7970   001C22  0012               	return		;funcret
  7971   001C24                     __end_of_EUSART1_RxDataHandler:
  7972                           	callstack 0
  7973                           
  7974                           	psect	rparam
  7975   000001                     ___rparam_used  equ	1
  7976   000000                     ___param_bank   equ	0
  7977   000000                     __Lparam        equ	__Lrparam
  7978   000000                     __Hparam        equ	__Hrparam
  7979                           
  7980                           	psect	temp
  7981   00005B                     btemp:
  7982                           	callstack 0
  7983   00005B                     	ds	1
  7984   00005B                     int$flags       set	btemp
  7985   00005C                     wtemp8          set	btemp+1
  7986   00005C                     ttemp5          set	btemp+1
  7987   00005F                     ttemp6          set	btemp+4
  7988   000063                     ttemp7          set	btemp+8
  7989                           
  7990                           	psect	config
  7991                           
  7992                           ;Config register CONFIG1L @ 0x300000
  7993                           ;	External Oscillator mode Selection bits
  7994                           ;	FEXTOSC = OFF, Oscillator not enabled
  7995                           ;	Power-up default value for COSC bits
  7996                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  7997   300000                     	org	3145728
  7998   300000  EC                 	db	236
  7999                           
  8000                           ;Config register CONFIG1H @ 0x300001
  8001                           ;	Clock Out Enable bit
  8002                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  8003                           ;	Clock Switch Enable bit
  8004                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8005                           ;	Fail-Safe Clock Monitor Enable bit
  8006                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  8007   300001                     	org	3145729
  8008   300001  FF                 	db	255
  8009                           
  8010                           ;Config register CONFIG2L @ 0x300002
  8011                           ;	Master Clear Enable bit
  8012                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
  8013                           ;	Power-up Timer Enable bit
  8014                           ;	PWRTE = OFF, Power up timer disabled
  8015                           ;	Low-power BOR enable bit
  8016                           ;	LPBOREN = OFF, Low power BOR is disabled
  8017                           ;	Brown-out Reset Enable bits
  8018                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  8019   300002                     	org	3145730
  8020   300002  FF                 	db	255
  8021                           
  8022                           ;Config register CONFIG2H @ 0x300003
  8023                           ;	Brown Out Reset Voltage selection bits
  8024                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  8025                           ;	ZCD Disable bit
  8026                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  8027                           ;	PPSLOCK bit One-Way Set Enable bit
  8028                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  8029                           ;	Stack Full/Underflow Reset Enable bit
  8030                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8031                           ;	Extended Instruction Set Enable bit
  8032                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  8033   300003                     	org	3145731
  8034   300003  FF                 	db	255
  8035                           
  8036                           ;Config register CONFIG3L @ 0x300004
  8037                           ;	WDT Period Select bits
  8038                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8039                           ;	WDT operating mode
  8040                           ;	WDTE = OFF, WDT Disabled
  8041   300004                     	org	3145732
  8042   300004  9F                 	db	159
  8043                           
  8044                           ;Config register CONFIG3H @ 0x300005
  8045                           ;	WDT Window Select bits
  8046                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8047                           ;	WDT input clock selector
  8048                           ;	WDTCCS = SC, Software Control
  8049   300005                     	org	3145733
  8050   300005  FF                 	db	255
  8051                           
  8052                           ;Config register CONFIG4L @ 0x300006
  8053                           ;	Write Protection Block 0
  8054                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  8055                           ;	Write Protection Block 1
  8056                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  8057                           ;	Write Protection Block 2
  8058                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  8059                           ;	Write Protection Block 3
  8060                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  8061                           ;	Write Protection Block 4
  8062                           ;	WRT4 = 0x1, unprogrammed default
  8063                           ;	Write Protection Block 5
  8064                           ;	WRT5 = 0x1, unprogrammed default
  8065                           ;	Write Protection Block 6
  8066                           ;	WRT6 = 0x1, unprogrammed default
  8067                           ;	Write Protection Block 7
  8068                           ;	WRT7 = 0x1, unprogrammed default
  8069   300006                     	org	3145734
  8070   300006  FF                 	db	255
  8071                           
  8072                           ;Config register CONFIG4H @ 0x300007
  8073                           ;	Configuration Register Write Protection bit
  8074                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  8075                           ;	Boot Block Write Protection bit
  8076                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8077                           ;	Data EEPROM Write Protection bit
  8078                           ;	WRTD = OFF, Data EEPROM not write-protected
  8079                           ;	Scanner Enable bit
  8080                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  8081                           ;	Low Voltage Programming Enable bit
  8082                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  8083   300007                     	org	3145735
  8084   300007  FF                 	db	255
  8085                           
  8086                           ;Config register CONFIG5L @ 0x300008
  8087                           ;	UserNVM Program Memory Code Protection bit
  8088                           ;	CP = OFF, UserNVM code protection disabled
  8089                           ;	DataNVM Memory Code Protection bit
  8090                           ;	CPD = OFF, DataNVM code protection disabled
  8091   300008                     	org	3145736
  8092   300008  FF                 	db	255
  8093                           
  8094                           ;Config register CONFIG5H @ 0x300009
  8095                           ;	unspecified, using default values
  8096   300009                     	org	3145737
  8097   300009  FF                 	db	255
  8098                           
  8099                           ;Config register CONFIG6L @ 0x30000A
  8100                           ;	Table Read Protection Block 0
  8101                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8102                           ;	Table Read Protection Block 1
  8103                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8104                           ;	Table Read Protection Block 2
  8105                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8106                           ;	Table Read Protection Block 3
  8107                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8108                           ;	Table Read Protection Block 4
  8109                           ;	EBTR4 = 0x1, unprogrammed default
  8110                           ;	Table Read Protection Block 5
  8111                           ;	EBTR5 = 0x1, unprogrammed default
  8112                           ;	Table Read Protection Block 6
  8113                           ;	EBTR6 = 0x1, unprogrammed default
  8114                           ;	Table Read Protection Block 7
  8115                           ;	EBTR7 = 0x1, unprogrammed default
  8116   30000A                     	org	3145738
  8117   30000A  FF                 	db	255
  8118                           
  8119                           ;Config register CONFIG6H @ 0x30000B
  8120                           ;	Boot Block Table Read Protection bit
  8121                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8122   30000B                     	org	3145739
  8123   30000B  FF                 	db	255
  8124                           tosu	equ	0xFFF
  8125                           tosh	equ	0xFFE
  8126                           tosl	equ	0xFFD
  8127                           stkptr	equ	0xFFC
  8128                           pclatu	equ	0xFFB
  8129                           pclath	equ	0xFFA
  8130                           pcl	equ	0xFF9
  8131                           tblptru	equ	0xFF8
  8132                           tblptrh	equ	0xFF7
  8133                           tblptrl	equ	0xFF6
  8134                           tablat	equ	0xFF5
  8135                           prodh	equ	0xFF4
  8136                           prodl	equ	0xFF3
  8137                           indf0	equ	0xFEF
  8138                           postinc0	equ	0xFEE
  8139                           postdec0	equ	0xFED
  8140                           preinc0	equ	0xFEC
  8141                           plusw0	equ	0xFEB
  8142                           fsr0h	equ	0xFEA
  8143                           fsr0l	equ	0xFE9
  8144                           wreg	equ	0xFE8
  8145                           indf1	equ	0xFE7
  8146                           postinc1	equ	0xFE6
  8147                           postdec1	equ	0xFE5
  8148                           preinc1	equ	0xFE4
  8149                           plusw1	equ	0xFE3
  8150                           fsr1h	equ	0xFE2
  8151                           fsr1l	equ	0xFE1
  8152                           bsr	equ	0xFE0
  8153                           indf2	equ	0xFDF
  8154                           postinc2	equ	0xFDE
  8155                           postdec2	equ	0xFDD
  8156                           preinc2	equ	0xFDC
  8157                           plusw2	equ	0xFDB
  8158                           fsr2h	equ	0xFDA
  8159                           fsr2l	equ	0xFD9
  8160                           status	equ	0xFD8

Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         101
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     69      90
    BANK0           160     81     160
    BANK1           256      2      37
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    EUSART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), NULL(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), NULL(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), NULL(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Receive_ISR(), NULL(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_Transmit_ISR(), NULL(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), NULL(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), NULL(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), NULL(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), NULL(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), NULL(), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 64
		 -> send_mqtt_data_points@buffer(BANK0[64]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 64
		 -> send_mqtt_data_points@buffer(BANK0[64]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    S1207$buffer	PTR unsigned char  size(1) Largest target is 64
		 -> send_mqtt_data_points@buffer(BANK0[64]), 

    S1207$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 64
		 -> send_mqtt_data_points@buffer(BANK0[64]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[4]), STR_2(CODE[5]), 

    vfpfcnvrt@cp_1296	PTR unsigned char  size(1) Largest target is 64
		 -> ?_printf(COMRAM[2]), send_mqtt_data_points@buffer(BANK0[64]), ?_sprintf(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[4]), STR_2(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[4]), STR_2(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _send_mqtt_data_points->_sprintf
    _sprintf->_vfprintf
    _rand->___lmul
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___awmod
    ___awmod->_rand
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_send_mqtt_data_points

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5320
                                              0 BANK1      2     2      0
                  _SYSTEM_Initialize
              _send_mqtt_data_points
                              _srand
 ---------------------------------------------------------------------------------
 (1) _srand                                                4     2      2      23
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _send_mqtt_data_points                               81    81      0    5067
                                              0 BANK0     81    81      0
                            ___awmod
                             _printf
                               _rand
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    14      4    2175
                                             51 COMRAM    18    14      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2      94
                                             16 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8      94
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     3      3    2013
                                             51 COMRAM     4     1      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    1956
                                             47 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           15    11      4    1820
                                             32 COMRAM    15    11      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     319
                                              6 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      87
                                              5 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART1_Write                                        1     1      0      58
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      67
                                             28 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     300
                                             22 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     302
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     230
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     115
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3      23
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3      23
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       3     0      3      23
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       3     0      3      23
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              3     0      3      23
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     115
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        3     0      3      23
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        3     0      3      23
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       3     0      3      23
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       3     0      3      23
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              3     0      3      23
                                              4 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                                NULL *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Receive_ISR                                  0     0      0       0
                                NULL *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Receive_ISR                                  0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _send_mqtt_data_points
     ___awmod
       _rand (ARG)
         ___lmul
     _printf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
               _EUSART1_Write
     _rand
     _sprintf
       _vfprintf
   _srand

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_Receive_ISR *
     NULL(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _EUSART2_Receive_ISR *
     NULL(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3327      0       0      0.0%
BITBIGSFR          256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      2      37     14.5%
BITBIGSFR_1lh      192      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     81     160    100.0%
BITBIGSFR_1lll     117      0       0      0.0%
BITBIGSFR_1h       102      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     69      90     95.7%
BITBIGSFR_1llh      65      0       0      0.0%
BITBANK14           31      0       0      0.0%
BANK14              31      0       0      0.0%
BIGRAM_1            31      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     287      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Dec 02 17:37:54 2024

                      _eusart1TxBufferRemaining 0051                          ?_EUSART2_RxDataHandler 0001  
                                            l17 1D44                                    ___awdiv@sign 000A  
                                           l107 183C                      send_mqtt_data_points@i_759 00AF  
                                           l320 1D1C                                             l314 1D0E  
                                           l170 1CD6                                             l323 1CE4  
                                           l251 18BC                                             l164 1CC8  
                                           l317 1D00                                             l173 1C9E  
                                           l326 1CF2                                             l422 1A80  
                                           l167 1CBA                                             l176 1CAC  
                                           l363 1C58                                             l275 19FC  
                                           l276 1A14                                             l285 1D26  
                                           l366 1C80                                             l710 1710  
                                           l279 1A3A                                             l463 143C  
                                           l369 1C90                                             l477 1984  
                                           l478 1994                                             l697 14FE  
                                           u900 14EE                                             u820 19FC  
                                           u901 14EA                                             u821 19F8  
                                           u910 1674                                             u830 1A0C  
                                           u911 1670                                             u831 1A08  
                                           u920 168E                                             u840 1A34  
                                           u921 168A                                             u841 1A30  
                                           u850 144E                                             u930 16A8  
                                           u851 144A                                             u931 16A4  
                                           u860 1468                                             u940 16C6  
                                           u861 1464                                             u941 16C2  
                                           u870 148E                                             u950 16DC  
                                           u871 148A                                             u951 16D8  
                                           u880 14AC                                             u960 1700  
                                           u881 14A8                                             u961 16FC  
                                           u890 14C8                                             u970 1722  
                                           u891 14C4                                             u971 171E  
                                           u980 1732                                             u981 172E  
                                           u990 1758                                             u991 1754  
        __end_of_EUSART2_SetFramingErrorHandler 1CCA                  _EUSART2_SetFramingErrorHandler 1CBC  
                                           _abs 1B7A                                    ___awmod@sign 001C  
                                           tosl 0FFD                                             wreg 0FE8  
                                          l2001 1042                                            l1203 1B94  
                                          l2011 109C                                            l2003 104E  
                                          ?_abs 001D                                            l2021 110C  
                                          l2013 10B6                                            l2005 1052  
                                          l1206 1BAC                                            l2111 1CF4  
                                          l2031 115E                                            l2023 1128  
                                          l2015 10C0                                            l2007 105C  
                                          l1144 1AC4                                            l2113 1D10  
                                          l2105 1CE6                                            l2201 18AE  
                                          l2033 116E                                            l2041 11A8  
                                          l2025 112C                                            l2017 10C4  
                                          l2009 107C                                            l1233 1C6E  
                                          l1241 192A                                            l1218 17BA  
                                          l2107 1CD8                                            l2203 18B2  
                                          l2051 1224                                            l2043 11C8  
                                          l2035 1180                                            l2027 113E  
                                          l2019 10D8                                            l2131 195A  
                                          l2109 1D02                                            l2205 18B4  
                                          l2061 129E                                            l2053 1252  
                                          l2045 11EE                                            l2037 1188  
                                          l2029 114E                                            l2141 19C0  
                                          l2133 1964                                            l2125 192C  
                                          l2221 1A82                                            l1238 1C3E  
                                          l2207 18B6                                            l2151 17EA  
                                          l2143 17BC                                            l2063 12B8  
                                          l2071 12F0                                            l2055 1280  
                                          l2047 11F6                                            l2039 11A6  
                                          l1175 11C6                                            l2135 1996  
                                          l2127 193C                                            l2215 18BE  
                                          l2231 1ABC                                            l2223 1A8A  
                                          l2209 18B8                                            l2161 182A  
                                          l2153 17EE                                            l2145 17C0  
                                          l1601 1A5E                                            l2081 132E  
                                          l2073 12F8                                            l2065 12D0  
                                          l2049 11FE                                            l1185 11BA  
                                          l2137 199A                                            l2129 194A  
                                          l2217 18FC                                            l2225 1A92  
                                          l1186 1336                                            l2091 1CAE  
                                          l2171 1836                                            l2163 182C  
                                          l2155 17F2                                            l2147 17D0  
                                          l1515 1D42                                            l1611 1A68  
                                          l1603 1A60                                            l2331 1C50  
                                          l2067 12D4                                            l2059 128E  
                                          l2139 19A6                                            l2235 1C5A  
                                          l2227 1A9A                                            l2181 1842  
                                          l2093 1CCA                                            l2085 1CA0  
                                          l2173 1838                                            l2165 182E  
                                          l2157 17F6                                            l2149 17E4  
                                          l1621 1C70                                            l1613 1A6A  
                                          l1605 1A62                                            l2333 1C54  
                                          l2325 1C40                                            l2069 12D6  
                                          l2077 1304                                            l2237 1C5E  
                                          l2229 1AB2                                            l1198 19E0  
                                          l2191 1872                                            l2183 1852  
                                          l2087 1C92                                            l2167 1832  
                                          l2159 1828                                            l1623 1C76  
                                          l1615 1A6C                                            l1607 1A64  
                                          l2327 1C48                                            l2079 1326  
                                          l1199 19E8                                            l2335 1C24  
                                          l2193 1876                                            l2185 1866  
                                          l2089 1CBC                                            l2169 1834  
                                          l1625 1C78                                            l1617 1A6E  
                                          l1609 1A66                                            l2329 1C4C  
                                          l2195 18A8                                            l2187 186A  
                                          l2179 183E                                            l1627 1C7E  
                                          l1619 1A70                                            l2451 1370  
                                          l2443 1338                                            l2197 18AA  
                                          l2189 186E                                            l1901 144E  
                                          l2461 13A0                                            l2453 1374  
                                          l2199 18AC                                            l1591 1A3C  
                                          l1911 1474                                            l1903 1456  
                                          l2471 1418                                            l2463 13CC  
                                          l2455 1390                                            l1593 1A46  
                                          l1921 14AC                                            l1913 147C  
                                          l1905 145A                                            l2473 1426  
                                          l2465 13D0                                            l2449 1342  
                                          l2481 1B50                                            l1595 1A58  
                                          l1931 14D8                                            l1923 14B2  
                                          l1915 148E                                            l1907 1468  
                                          l2475 1428                                            l2467 13EC  
                                          l2483 1B52                                            l1597 1A5A  
                                          l1589 1C82                                            l1925 14C8  
                                          l1917 1496                                            l1933 14DE  
                                          l1909 1470                                            l1941 1664  
                                          l2477 143A                                            l2469 1406  
                                          l2485 1B54                                            l1599 1A5C  
                                          l1935 14EE                                            l1927 14D0  
                                          l1919 149E                                            l1951 168E  
                                          l1943 1666                                            l2487 1B58  
                                          l2479 1B40                                            l1937 14F6  
                                          l1929 14D2                                            l1961 16C6  
                                          l1953 1696                                            l1945 1674  
                                          l1881 1A0C                                            l1971 1700  
                                          l1963 16DC                                            l1955 16A8  
                                          l1947 167C                                            l1891 1A36  
                                          l1883 1A16                                            l1973 1708  
                                          l1965 16E4                                            l1957 16B0  
                                          l1949 1680                                            l1885 1A22  
                                          l1893 1A38                                            l1877 19EC  
                                          l1981 1732                                            l1967 16EA  
                                          l1959 16B8                                            l1991 1B7A  
                                          l1887 1A24                                            l1879 19EC  
                                          l1895 1D20                                            l1983 173C  
                                          l1897 143E                                            l1969 16F0  
                                          l1993 1B88                                            l1889 1A34  
                                          l1985 1758                                            l1977 1712  
                                          l1899 1440                                            l1987 178A  
                                          l1979 1722                                            l1995 100C  
                                          l1997 1014                                            l1999 103A  
                                          STR_1 1006                                            STR_2 1001  
                                          u1000 178A                                            u1001 1786  
                                          u1010 1B88                                            u1011 1B84  
                                          u1100 116E                                            u1020 103A  
                                          u1101 116A                                            u1021 1036  
                                          u1110 11BA                                            u1030 107C  
                                          u1111 11B6                                            u1031 1078  
                                          u1120 11EE                                            u1040 109C  
                                          u1200 194A                                            u1121 11EA  
                                          u1041 1098                                            u1201 1946  
                                          u1130 1224                                            u1050 10D4  
                                          u1210 1984                                            u1131 1220  
                                          u1051 10CE                                            u1211 1980  
                                          u1140 1252                                            u1060 10D6  
                                          u1220 19E0                                            u1141 124E  
                                          u1221 19DC                                            u1150 1280  
                                          u1070 113E                                            u1230 191C  
                                          u1151 127C                                            u1071 113A  
                                          u1160 129E                                            u1080 114E  
                                          u1161 129A                                            u1081 114A  
                                          u1170 12EC                                            u1090 115E  
                                          u1171 12E8                                            u1091 115A  
                                          u1235 1912                                            _LATA 0F82  
                                          _LATB 0F83                                            _LATC 0F84  
                                          u1630 1390                                            u1631 138C  
                                          u1640 13EC                                            u1641 13E8  
                                          u1650 1406                                            u1651 1402  
                                          u1667 1B64                                            u1677 1430  
                                          _PMD0 0EDC                                            _PMD1 0EDD  
                                          _PMD2 0EDE                                            _PMD3 0EDF  
                                          _PMD4 0EE0                                            _PMD5 0EE1  
                                          i2l23 0066                                            i2l32 011A  
                                          i2l25 00A2                                            i2l26 011A  
                                          i2l27 00DE                                            _WPUA 0F0B  
                                          _WPUB 0F13                                            _WPUC 0F1B  
                                          _WPUE 0F28                           ??_EUSART2_Receive_ISR 0001  
                                 _EUSART1_Write 19EA                                            abs@a 001D  
                                          _dbuf 0100                                            _main 1B40  
                                          _rand 18BE                                            _seed 00FC  
                                          _prec 004A                                            _nout 0046  
                                          fsr1h 0FE2                                            fsr2h 0FDA  
                                          indf2 0FDF                                            fsr1l 0FE1  
                                          fsr2l 0FD9                                            btemp 005B  
                   send_mqtt_data_points@buffer 0061                                            prodl 0FF3  
                                          start 012E                    __end_of_EUSART2_Transmit_ISR 1B04  
                                  ___param_bank 0000                send_mqtt_data_points@data_points 00A1  
                                         ??_abs 001F                   __end_of_OSCILLATOR_Initialize 1C82  
                         _eusart1RxStatusBuffer 00B1                                           ?_main 0001  
                                         ?_rand 0011                                 __end_of___awdiv 1500  
                               __end_of___awmod 1712                                 ___awdiv@divisor 0007  
                                         i2l141 1B02                                           i2l302 1C22  
                                         i2l311 1D40                                           i2l152 1BFE  
                                         i2l305 1D48                                           i2l161 1D34  
                                         i2l138 1AFE                                           i2l155 1D46  
                                         i2l308 1D3A                                           i2l148 15B2  
                                         i2l158 1D2E                                           i2l291 1B3E  
                                         i2l288 1B3A                                           i2l298 1662  
                               ___awdiv@counter 0009                                           _OSCEN 0ED7  
                                  vfpfcnvrt@cnt 0027                                    vfpfcnvrt@fmt 0022  
                                         _TRISA 0F87                                           _TRISB 0F88  
                                         _TRISC 0F89                             ___lmul@multiplicand 0009  
                          _EUSART1_Transmit_ISR 1B04                                           _flags 004C  
                                         _fputc 1712                                           _srand 1C24  
                                         _width 0048                                           _putch 1D1E  
                                ?_EUSART1_Write 0001                                           pclath 0FFA  
                                         pclatu 0FFB                                           tablat 0FF5  
                                         ttemp5 005C                                           ttemp6 005F  
                                         ttemp7 0063                                           status 0FD8  
                                         wtemp8 005C                                 __end_of_sprintf 1AC6  
    __end_of_EUSART1_DefaultFramingErrorHandler 1D4A            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 1D48  
         __end_of_EUSART2_SetTxInterruptHandler 1CA0                   _EUSART2_SetTxInterruptHandler 1C92  
                               __initialization 1BAE                      __end_of_EUSART1_Initialize 18BE  
                                  __end_of_main 1B7A                                    __end_of_rand 192C  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_main 0123  
                                        ??_rand 0013                                   __activetblptr 0003  
           __end_of_EUSART2_DefaultErrorHandler 1D36                     _EUSART2_DefaultErrorHandler 1D30  
                         ?_EUSART1_Transmit_ISR 0001                      __end_of_EUSART2_Initialize 183E  
                      _eusart2TxBufferRemaining 0058                                          ?_fputc 0007  
                              ___awdiv@dividend 0005                                          ?_srand 0005  
                                        _ANSELA 0F0C                                          ?_putch 0001  
                                        _ANSELB 0F14                                          _ANSELC 0F1C  
                                        _RC1REG 0F98                                          _RC2REG 0E94  
                                        _RC1STA 0F9C                                          _RC2STA 0E98  
                                        _ODCONA 0F0A                                          _ODCONB 0F12  
                                        _ODCONC 0F1A                                          _RC6PPS 0EF8  
                                        i2l2101 1BFA                                          i2l2103 1BFC  
                                        i2l2121 1C1E                                          i2l2123 1C20  
                                        i2l2115 1C00                                          i2l2211 1D36  
                                        i2l2117 1C0C                                          i2l2213 1D3C  
                                        i2l2301 1B32                                          i2l2119 1C0E  
                                        i2l2311 15D8                                          i2l2303 1B34  
                                        i2l2321 163E                                          i2l2313 15F2  
                                        i2l2305 15B4                                          i2l2241 1AC6  
                                        i2l2323 165E                                          i2l2315 1600  
                                        i2l2307 15BE                                          i2l2251 1AF8  
                                        i2l2243 1AD6                                          i2l2317 160C  
                                        i2l2309 15CC                                          i2l2261 1540  
                                        i2l2253 1500                                          i2l2245 1AE4  
                                        i2l2319 1626                                          i2l2095 1BDC  
                                        i2l2175 1D28                                          i2l2271 15AE  
                                        i2l2263 1550                                          i2l2255 150A  
                                        i2l2247 1AE6                                          i2l2097 1BE8  
                                        i2l2177 1D30                                          i2l2265 155C  
                                        i2l2257 151A                                          i2l2249 1AF6  
                                        i2l2099 1BEA                                          i2l2267 1576  
                                        i2l2259 1526                                          i2l2293 1B04  
                                        i2l2269 158E                                          i2l2381 0074  
                                        i2l2373 001A                                          i2l2295 1B14  
                                        i2l2391 00FA                                          i2l2383 0082  
                                        i2l2375 0028                                          i2l2297 1B20  
                                        i2l2385 00B0                                          i2l2377 0038  
                                        i2l2299 1B22                                          i2l2387 00BE  
                                        i2l2379 0046                                          i2l2389 00EC  
                                        _INLVLA 0F08                                          _INLVLB 0F10  
                                        _INLVLC 0F18                                          _INLVLE 0F25  
                                        _OSCFRQ 0ED9                                   vfpfcnvrt@done 0029  
                                        _RX1PPS 0EB0                                          _TX1REG 0F99  
                                        _TX2REG 0E95                                          _TX1STA 0F9D  
                                        _TX2STA 0E99                                    vfprintf@cfmt 0033  
                                        ___lmul 192C                                       ??___awdiv 0009  
                                     ??___awmod 001B                        ?_EUSART1_SetErrorHandler 0005  
                                        clear_0 1BB4                                          clear_1 1BC0  
                                        clear_2 1BCC                                ___awdiv@quotient 000B  
                               ___awmod@divisor 0019                                          isa$std 0001  
                   _EUSART2_FramingErrorHandler 00ED                                 ___awmod@counter 001B  
                                        _printf 1C5A                ??_EUSART1_SetOverrunErrorHandler 0008  
               ?_EUSART1_SetOverrunErrorHandler 0005                                          fputc@c 0007  
                                _PMD_Initialize 1C82                                    __mediumconst 0000  
                                        tblptrh 0FF7                                          tblptrl 0FF6  
                                        tblptru 0FF8                            _EUSART2_Transmit_ISR 1AC6  
                                        srand@s 0005                                __end_of_vfprintf 19EA  
                               ??_EUSART1_Write 0005                                       ??_sprintf 0038  
                               _eusart1RxBuffer 00B9                                 _eusart2RxBuffer 00D1  
                               _eusart1TxBuffer 00C1                               _SYSTEM_Initialize 1C40  
                               _eusart2TxBuffer 00D9                                      __accesstop 0060  
                       __end_of__initialization 1BD2                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 0001                         ??_EUSART2_RxDataHandler 0001  
                 __end_of_EUSART1_RxDataHandler 1C24                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 0008                                   __end_of_fputc 17BC  
                ?_EUSART2_SetTxInterruptHandler 0005                                   __end_of_srand 1C40  
                                 __end_of_putch 1D28                          __end_of_PMD_Initialize 1C92  
                        ??_EUSART1_Transmit_ISR 0001                        ?_EUSART2_SetErrorHandler 0005  
                         ?_EUSART2_Transmit_ISR 0001                     __end_of_EUSART1_Receive_ISR 1664  
                                       ??_fputc 000A                       __end_of_SYSTEM_Initialize 1C5A  
                         _send_mqtt_data_points 1338                                         ??_srand 0007  
                                       ??_putch 0006                                   _eusart1RxHead 0050  
                                 _eusart2RxHead 0057                                   _eusart1TxHead 0053  
                                 _eusart1RxTail 004F                                   _eusart2TxHead 005A  
                                    __pbssBANK0 00B1                                      __pbssBANK1 0100  
                                 _eusart2RxTail 0056                                   _eusart1TxTail 0052  
             _EUSART1_TxDefaultInterruptHandler 00F3                                   _eusart2TxTail 0059  
               ??_EUSART1_SetRxInterruptHandler 0008                ??_EUSART2_SetFramingErrorHandler 0008  
               ?_EUSART2_SetFramingErrorHandler 0005                 __end_of_EUSART1_SetErrorHandler 1D1E  
                                       ?___lmul 0005                                  ___lmul@product 000D  
                                       ?_printf 0034                                 ?_PMD_Initialize 0001  
        __end_of_EUSART1_SetFramingErrorHandler 1D10                  _EUSART1_SetFramingErrorHandler 1D02  
                         _eusart2RxStatusBuffer 00C9                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _SP1BRGH 0F9B                                         _SP1BRGL 0F9A  
                                       _SP2BRGH 0E97                                         _SP2BRGL 0E96  
                                       _OSCCON1 0ED3                                         _OSCCON3 0ED5  
                   __end_of_EUSART2_Receive_ISR 15B4                                         _OSCTUNE 0ED8  
                                       _SLRCONA 0F09                                         _SLRCONB 0F11  
                                       _SLRCONC 0F19                                         __Hparam 0000  
                                       __Lparam 0000                                         ___awdiv 143E  
                                       ___awmod 1664                                       ?_vfprintf 0030  
                                  __psmallconst 1000                                         __pcinit 1BAE  
               __end_of_EUSART2_SetErrorHandler 1CD8                                         __ramtop 1000  
                                       __ptext0 1B40                                         __ptext1 1C24  
                                       __ptext2 1338                                         __ptext3 1A82  
                                       __ptext4 18BE                                         __ptext5 192C  
                                       __ptext6 1C5A                                         __ptext7 1996  
                                       __ptext8 100C                                         __ptext9 1712  
    __end_of_EUSART2_DefaultOverrunErrorHandler 1D30            ??_EUSART2_DefaultOverrunErrorHandler 0001  
           ?_EUSART2_DefaultOverrunErrorHandler 0001              _EUSART2_DefaultOverrunErrorHandler 1D28  
                         _OSCILLATOR_Initialize 1C70                          ??_EUSART2_Transmit_ISR 0001  
                              ___awmod@dividend 0017                              _EUSART1_Initialize 183E  
                      ??_PIN_MANAGER_Initialize 0005                   ??_EUSART1_DefaultErrorHandler 0001  
                        ?_send_mqtt_data_points 0001                                         _sprintf 1A82  
           send_mqtt_data_points@message_length 00AD                            end_of_initialization 1BD2  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0009  
                   _EUSART1_OverrunErrorHandler 00E1                                vfpfcnvrt@cp_1296 0026  
         __end_of_EUSART1_SetRxInterruptHandler 1CF4                   _EUSART1_SetRxInterruptHandler 1CE6  
                            _EUSART2_Initialize 17BC                               __end_of_vfpfcnvrt 1338  
                                       postdec2 0FDD                                         postinc0 0FEE  
                                       postinc1 0FE6                                         postinc2 0FDE  
                              vfpfcnvrt@convarg 002B                                      ??_vfprintf 0033  
                          ??_EUSART1_Initialize 0008                             ?_EUSART2_Initialize 0001  
                           EUSART1_Write@txData 0005                            ??_EUSART2_Initialize 0008  
                        send_mqtt_data_points@i 00AB                   __end_of_EUSART2_RxDataHandler 1C00  
                  __end_of_INTERRUPT_Initialize 1D46                                  __end_of___lmul 1996  
                                   vfpfcnvrt@ap 0023                                     vfpfcnvrt@cp 002A  
                                   vfpfcnvrt@fp 0021                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 1C70                             start_initialization 1BAE  
                                   __end_of_abs 1BAE   EUSART1_SetRxInterruptHandler@interruptHandler 0005  
 EUSART1_SetTxInterruptHandler@interruptHandler 0005   EUSART2_SetRxInterruptHandler@interruptHandler 0005  
 EUSART2_SetTxInterruptHandler@interruptHandler 0005                                     putch@txData 0006  
                         __end_of_EUSART1_Write 1A3C          __end_of_EUSART2_SetOverrunErrorHandler 1CBC  
                _EUSART2_SetOverrunErrorHandler 1CAE                                     vfprintf@fmt 0031  
                              ??_PMD_Initialize 0005                                        ??___lmul 000D  
                         _EUSART1_RxDataHandler 1C00                  ?_EUSART1_SetRxInterruptHandler 0005  
                                      ??_printf 0037                                  _eusart1RxCount 004E  
                                _eusart2RxCount 0055                                     __pbssCOMRAM 0046  
             _EUSART1_RxDefaultInterruptHandler 00F0                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0123                 ??_EUSART1_SetTxInterruptHandler 0008  
              ??_EUSART1_SetFramingErrorHandler 0008                 ?_EUSART1_SetFramingErrorHandler 0005  
               ??_EUSART2_SetRxInterruptHandler 0008                                       __pnvBANK0 00E1  
                                     __pnvBANK1 0120                          _PIN_MANAGER_Initialize 1A3C  
                                     __pintcode 0008                                        ?___awdiv 0005  
                                      ?___awmod 0017               _EUSART2_TxDefaultInterruptHandler 00F9  
                  ??_INTERRUPT_InterruptManager 0001                                        _BAUD1CON 0F9E  
                                      _BAUD2CON 0E9A                                     __smallconst 1000  
                       ??_send_mqtt_data_points 0060      __end_of_EUSART1_DefaultOverrunErrorHandler 1D3C  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 1D36                            _EUSART1_ErrorHandler 0120  
                  ?_EUSART2_DefaultErrorHandler 0001                         _EUSART1_SetErrorHandler 1D10  
                                      ?_sprintf 0034                            _INTERRUPT_Initialize 1D42  
       EUSART1_SetErrorHandler@interruptHandler 0005         EUSART2_SetErrorHandler@interruptHandler 0005  
                                      _LATCbits 0F84                                        _PIE3bits 0EC0  
                                      i2u130_40 158E                                        i2u130_41 158A  
                                      i2u140_40 163E                                        i2u131_48 1594  
                                      i2u124_40 1AD6                                        i2u140_41 163A  
                                      i2u131_49 15AA                                        i2u124_41 1AD2  
                                      i2u125_40 1AF6                                        i2u125_41 1AF2  
                                      i2u141_48 1644                                        i2u134_40 1B14  
                                      i2u118_40 1BFA                                        i2u126_40 151A  
                                      i2u150_40 0082                                        i2u141_49 165A  
                                      i2u134_41 1B10                                        i2u118_41 1BF6  
                                      i2u126_41 1516                                        i2u150_41 007E  
                                      i2u119_40 1C1E                                        i2u135_40 1B32  
                                      i2u119_41 1C1A                                        i2u135_41 1B2E  
                                      i2u136_40 15CC                                        i2u128_40 1550  
                                      i2u127_48 152C                                        i2u152_40 00B0  
                                      i2u151_48 0088                                        i2u136_41 15C8  
                                      i2u128_41 154C                                        i2u127_49 1540  
                                      i2u152_41 00AC                                        i2u151_49 009E  
                                      i2u153_40 00BE                                        i2u145_40 0028  
                                      i2u153_41 00BA                                        i2u145_41 0024  
                                      i2u138_40 1600                                        i2u137_48 15DE  
                                      i2u129_48 1562                                        i2u146_40 0038  
                                      i2u138_41 15FC                                        i2u137_49 15F2  
                                      i2u129_49 1576                                        i2u146_41 0034  
                                      i2u155_40 00EC                                        i2u154_48 00C4  
                                      i2u147_40 0046                                        i2u155_41 00E8  
                                      i2u154_49 00DA                                        i2u147_41 0042  
                                      i2u139_48 1612                                        i2u156_40 00FA  
                                      i2u139_49 1626                                        i2u156_41 00F6  
                                      i2u149_40 0074                                        i2u148_48 004C  
                                      i2u149_41 0070                                        i2u148_49 0062  
                                      i2u157_48 0100                                        i2u157_49 0116  
                                      _PIR3bits 0EC8                          ?_EUSART1_RxDataHandler 0001  
                                     _vfpfcnvrt 100C                   ??_EUSART2_DefaultErrorHandler 0001  
                                    vfpfcnvrt@c 002F                               ___lmul@multiplier 0005  
                         ?_INTERRUPT_Initialize 0001                         _EUSART2_SetErrorHandler 1CCA  
                   _EUSART2_OverrunErrorHandler 00EA           __end_of_EUSART1_SetTxInterruptHandler 1CE6  
                 _EUSART1_SetTxInterruptHandler 1CD8                                        __Hrparam 0000  
         __end_of_EUSART2_SetRxInterruptHandler 1CAE                   _EUSART2_SetRxInterruptHandler 1CA0  
                                    vfprintf@ap 0032                                        __Lrparam 0000  
                                    vfprintf@fp 0030                         ??_OSCILLATOR_Initialize 0005  
                                    ?_vfpfcnvrt 0021                       ??_EUSART1_SetErrorHandler 0008  
           __end_of_EUSART1_DefaultErrorHandler 1D42                     _EUSART1_DefaultErrorHandler 1D3C  
                                    sprintf@fmt 0035                                      sprintf@ret 0038  
                          _EUSART2_ErrorHandler 00E7                                        __ptext10 1D1E  
                                      __ptext11 19EA                                        __ptext20 17BC  
                                      __ptext12 1B7A                                        __ptext21 1C92  
                                      __ptext13 1664                                        __ptext30 1D02  
                                      __ptext22 1CA0                                        __ptext14 143E  
                                      __ptext31 1D10                                        __ptext23 1CAE  
                                      __ptext15 1C40                                        __ptext40 15B4  
                                      __ptext24 1CBC                                        __ptext16 1C82  
                                      __ptext41 1D36                                        __ptext33 1AC6  
                                      __ptext25 1CCA                                        __ptext17 1A3C  
                                      __ptext42 1D48                                        __ptext34 1500  
                                      __ptext26 183E                                        __ptext18 1C70  
                                      __ptext43 1D3C                                        __ptext35 1D28  
                                      __ptext27 1CD8                                        __ptext19 1D42  
                                      __ptext44 1C00                                        __ptext36 1D46  
                                      __ptext28 1CE6                                        __ptext37 1D30  
                                      __ptext29 1CF4                                        __ptext38 1BDC  
                                      __ptext39 1B04      __end_of_EUSART2_DefaultFramingErrorHandler 1D48  
          ??_EUSART2_DefaultFramingErrorHandler 0001             ?_EUSART2_DefaultFramingErrorHandler 0001  
            _EUSART2_DefaultFramingErrorHandler 1D46                                      _RC1STAbits 0F9C  
                                    _RC2STAbits 0E98  EUSART1_SetOverrunErrorHandler@interruptHandler 0005  
EUSART2_SetOverrunErrorHandler@interruptHandler 0005                                        isa$xinst 0000  
                                      int$flags 005B                                        _vfprintf 1996  
            __end_of_INTERRUPT_InterruptManager 012E                      _INTERRUPT_InterruptManager 0008  
                         _EUSART2_RxDataHandler 1BDC                                       printf@fmt 0034  
                   _EUSART1_FramingErrorHandler 00E4                             _EUSART1_Receive_ISR 15B4  
              ??_EUSART2_SetOverrunErrorHandler 0008                 ?_EUSART2_SetOverrunErrorHandler 0005  
                                    _INTCONbits 0FF2                          ??_INTERRUPT_Initialize 0005  
                     ??_EUSART2_SetErrorHandler 0008                                        intlevel2 0000  
                                     sprintf@ap 003A                            ?_EUSART1_Receive_ISR 0001  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 1D02  
                _EUSART1_SetOverrunErrorHandler 1CF4                    __end_of_EUSART1_Transmit_ISR 1B40  
                                      printf@ap 0037  EUSART1_SetFramingErrorHandler@interruptHandler 0005  
EUSART2_SetFramingErrorHandler@interruptHandler 0005                  ?_EUSART1_SetTxInterruptHandler 0005  
                ?_EUSART2_SetRxInterruptHandler 0005                                     ??_vfpfcnvrt 0025  
                            _eusart1RxLastError 004D                             _EUSART2_Receive_ISR 1500  
                                      sprintf@f 003B                                        sprintf@s 0034  
                 __end_of_send_mqtt_data_points 143E                                      _TX1STAbits 0F9D  
                                    _TX2STAbits 0E99                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 1A82                 ??_EUSART2_SetTxInterruptHandler 0008  
                          ?_EUSART2_Receive_ISR 0001                              _eusart2RxLastError 0054  
                       ??_EUSART1_RxDataHandler 0001               _EUSART2_RxDefaultInterruptHandler 00F6  
